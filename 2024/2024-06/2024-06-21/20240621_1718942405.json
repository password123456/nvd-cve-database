{
  "totalResults": 10,
  "datePublished": "2024-06-21T13:00:05.102155Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2023-3352",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-21T02:15:09.880",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Smush plugin for WordPress is vulnerable to unauthorized deletion of the resmush list due to a missing capability check on the delete_resmush_list() function. This makes it possible for authenticated attackers, with minimal permissions such as a subscriber, to delete the resmush list for Nextgen or the Media Library.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3105107/wp-smushit/trunk/app/class-ajax.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/dfbaa3e4-40c2-41d8-996c-232e27a04b73?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1639",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-21T02:15:10.117",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "The License Manager for WooCommerce plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the showLicenseKey() and showAllLicenseKeys() functions in all versions up to, and including, 3.0.7. This makes it possible for authenticated attackers, with admin dashboard access (contributors by default due to WooCommerce) to view arbitrary decrypted license keys. The functions contain a referrer nonce check. However, these can be retrieved via the dashboard through the \"license\" JS variable.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/license-manager-for-woocommerce/tags/3.0.5/includes/Controllers/License.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/92e444db-72d5-444f-811e-ade0bc097769?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1955",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-21T02:15:10.327",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Hide Dashboard Notifications plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the 'warning_notices_settings' function in all versions up to, and including, 1.3. This makes it possible for authenticated attackers, with contributor access and above, to modify the plugin's settings.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-hide-backed-notices/tags/1.3/admin/class-wp-hide-backed-notices-admin.php"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3104675%40wp-hide-backed-notices&new=3104675%40wp-hide-backed-notices&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d4655236-7dfe-40ae-9d0c-6eacc59af13d?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3610",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-21T02:15:10.537",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The WP Child Theme Generator plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the wctg_easy_child_theme() function in all versions up to, and including, 1.1.1. This makes it possible for unauthenticated attackers to create a blank child theme and activate it cause the site to whitescreen.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-child-theme-generator/trunk/wp-easy-child/wp-easy-child.php#L60"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset?old_path=/wp-child-theme-generator/tags/1.1.1&new_path=/wp-child-theme-generator/tags/1.1.2&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/581e6686-a103-43f6-aa99-6a9862d98837?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5344",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-21T02:15:11.057",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘forgoturl’ attribute within the plugin's WP Login & Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": null,
        "references": [
          {
            "url": "https://roadmap.theplusaddons.com/updates/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1ac8fb0b-21a9-4b94-bb24-b349a7fe3305?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5503",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-21T02:15:11.260",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The WP Blog Post Layouts plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.1.3. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary PHP files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/gutenberg.php#L883"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/gutenberg.php#L900"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/gutenberg.php#L917"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/src/grid/element.php#L1146"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/src/list/element.php#L1136"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/src/masonry/element.php#L1134"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/5205cc95-06d1-4bc6-a9ea-082df9566935?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6215",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-21T02:15:11.877",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "A vulnerability was found in SourceCodester Food Ordering Management System up to 1.0. It has been rated as critical. This issue affects some unknown processing of the file view-ticket-admin.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-269279.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/jadu101/CVE/blob/main/SourceCodester_Food_Ordering_Management_System_view_ticket_admin_Sqli.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.269279"
          },
          {
            "url": "https://vuldb.com/?id.269279"
          },
          {
            "url": "https://vuldb.com/?submit.359595"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6216",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-21T02:15:12.173",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "A vulnerability classified as critical has been found in SourceCodester Food Ordering Management System 1.0. Affected is an unknown function of the file add-users.php. The manipulation of the argument contact leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-269280.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/jadu101/CVE/blob/main/SourceCodester_Food_Ordering_Management_System_add_users_Sqli.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.269280"
          },
          {
            "url": "https://vuldb.com/?id.269280"
          },
          {
            "url": "https://vuldb.com/?submit.359634"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6217",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-21T02:15:12.673",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "A vulnerability classified as critical was found in SourceCodester Food Ordering Management System 1.0. Affected by this vulnerability is an unknown functionality of the file user-router.php. The manipulation of the argument 1_verified leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-269281 was assigned to this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/jadu101/CVE/blob/main/SourceCodester_Food_Ordering_Management_System_user_router_Sqli.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.269281"
          },
          {
            "url": "https://vuldb.com/?id.269281"
          },
          {
            "url": "https://vuldb.com/?submit.359644"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6218",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-21T02:15:13.090",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.4,
        "description": "A vulnerability, which was classified as critical, has been found in itsourcecode Vehicle Management System 1.0. Affected by this issue is some unknown functionality of the file busprofile.php. The manipulation of the argument busid leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-269282 is the identifier assigned to this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/HryspaHodor/CVE/issues/7"
          },
          {
            "url": "https://vuldb.com/?ctiid.269282"
          },
          {
            "url": "https://vuldb.com/?id.269282"
          },
          {
            "url": "https://vuldb.com/?submit.360697"
          }
        ]
      }
    }
  ]
}