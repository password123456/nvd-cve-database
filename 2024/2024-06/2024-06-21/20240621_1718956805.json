{
  "totalResults": 18,
  "datePublished": "2024-06-21T17:00:05.210565Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2021-47621",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-21T06:15:10.487",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "ClassGraph before 4.8.112 was not resistant to XML eXternal Entity (XXE) attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://docs.r3.com/en/platform/corda/4.8/enterprise/release-notes-enterprise.html"
          },
          {
            "url": "https://github.com/classgraph/classgraph/commit/681362ad6b0b9d9abaffb2e07099ce54d7a41fa3"
          },
          {
            "url": "https://github.com/classgraph/classgraph/pull/539"
          },
          {
            "url": "https://github.com/classgraph/classgraph/releases/tag/classgraph-4.8.112"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4377",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:11.773",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/778cebec-bdbb-4538-9518-c5bd50f76961/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4381",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:11.907",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/9b3cda9a-17a7-4173-93a2-d552a874fae9/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4382",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.017",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/1a67aeab-8145-4c8a-9c18-e6436fa39b63/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4384",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.103",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/ad714196-2590-4dc9-b5b9-50808e9e0d26/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4474",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.187",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/71954c60-6a5b-4cac-9920-6d9b787ead9c/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4475",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.267",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/f0c7fa00-da6e-4f07-875f-7b85759a54b3/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4477",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.347",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/ab551552-944c-4e2a-9355-7011cbe553b0/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4616",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.427",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against only unauthenticated users",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/d203bf3b-aee9-4755-b429-d6bbdd940890/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4755",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.507",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/adc6ea6d-29d8-4ad0-b0db-2540e8b3f9a9/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4969",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.587",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/1a7ec5dc-eda4-4fed-9df9-f41d2b937fed/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4970",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.670",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/4a9fc352-7ec2-4992-9cda-7bdca4f42788/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5447",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.757",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/a692b869-1666-42d1-b56d-dfcccd68ab67/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5448",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-21T06:15:12.837",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/c482fe19-b643-41ea-8194-22776b388290/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38873",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-21T07:15:09.110",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "An issue was discovered in the friendlycaptcha_official (aka Integration of Friendly Captcha) extension before 0.1.4 for TYPO3. The extension fails to check the requirement of the captcha field in submitted form data, allowing a remote user to bypass the captcha check. This only affects the captcha integration for the ext:form extension.",
        "cweIds": null,
        "references": [
          {
            "url": "https://typo3.org/security/advisory/typo3-ext-sa-2024-004"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38874",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-21T07:15:10.200",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "An issue was discovered in the events2 (aka Events 2) extension before 8.3.8 and 9.x before 9.0.6 for TYPO3. Missing access checks in the management plugin lead to an insecure direct object reference (IDOR) vulnerability with the potential to activate or delete various events for unauthenticated users.",
        "cweIds": null,
        "references": [
          {
            "url": "https://typo3.org/security/advisory/typo3-ext-sa-2024-003"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5191",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-21T07:15:10.420",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Branda – White Label WordPress, Custom Login Page Customizer plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘mime_types’ parameter in all versions up to, and including, 3.4.17 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/branda-white-labeling/tags/3.4.17/inc/modules/utilities/images.php#L58"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3104910/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/31f4bad5-3a11-42c6-a336-6bd178ab5113?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5639",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-21T07:15:10.640",
        "lastModified": "2024-06-21T11:22:01.687",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The User Profile Picture plugin for WordPress is vulnerable to Insecure Direct Object Reference in all versions up to, and including, 2.6.1 via the 'rest_api_change_profile_image' function due to missing validation on a user controlled key. This makes it possible for authenticated attackers, with Author-level access and above, to update the profile picture of any user.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/metronet-profile-picture/tags/2.6.1/metronet-profile-picture.php#L1122"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/metronet-profile-picture/tags/2.6.1/metronet-profile-picture.php#L989"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3105132/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/01a3b9ba-b18a-48d9-8365-d10f79fc6a6b?source=cve"
          }
        ]
      }
    }
  ]
}