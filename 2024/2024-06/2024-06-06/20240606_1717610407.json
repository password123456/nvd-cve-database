{
  "totalResults": 5,
  "datePublished": "2024-06-06T03:00:07.290527Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-24789",
        "sourceIdentifier": "security@golang.org",
        "published": "2024-06-05T16:15:10.470",
        "lastModified": "2024-06-05T16:15:10.470",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
        "cweIds": null,
        "references": [
          {
            "url": "https://go.dev/cl/585397"
          },
          {
            "url": "https://go.dev/issue/66869"
          },
          {
            "url": "https://groups.google.com/g/golang-announce/c/XbxouI9gY7k/m/TuoGEhxIEwAJ"
          },
          {
            "url": "https://pkg.go.dev/vuln/GO-2024-2888"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-24790",
        "sourceIdentifier": "security@golang.org",
        "published": "2024-06-05T16:15:10.560",
        "lastModified": "2024-06-05T16:15:10.560",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
        "cweIds": null,
        "references": [
          {
            "url": "https://go.dev/cl/590316"
          },
          {
            "url": "https://go.dev/issue/67680"
          },
          {
            "url": "https://groups.google.com/g/golang-announce/c/XbxouI9gY7k/m/TuoGEhxIEwAJ"
          },
          {
            "url": "https://pkg.go.dev/vuln/GO-2024-2887"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-20404",
        "sourceIdentifier": "ykramarz@cisco.com",
        "published": "2024-06-05T17:15:11.790",
        "lastModified": "2024-06-05T17:15:11.790",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 2.7,
        "description": "A vulnerability in the web-based management interface of Cisco Finesse could allow an unauthenticated, remote attacker to conduct an SSRF attack on an affected system.\n This vulnerability is due to insufficient validation of user-supplied input for specific HTTP requests that are sent to an affected system. An attacker could exploit this vulnerability by sending a crafted HTTP request to the affected device. A successful exploit could allow the attacker to obtain limited sensitive information for services that are associated to the affected device.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-finesse-ssrf-rfi-Um7wT8Ew"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-20405",
        "sourceIdentifier": "ykramarz@cisco.com",
        "published": "2024-06-05T17:15:12.107",
        "lastModified": "2024-06-05T17:15:12.107",
        "baseScore": 4.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.7,
        "impactScore": 2.7,
        "description": "A vulnerability in the web-based management interface of Cisco Finesse could allow an unauthenticated, remote attacker to conduct a stored XSS attack by exploiting an RFI vulnerability. \n This vulnerability is due to insufficient validation of user-supplied input for specific HTTP requests that are sent to an affected device. An attacker could exploit this vulnerability by persuading a user to click a crafted link. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive information on the affected device.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-finesse-ssrf-rfi-Um7wT8Ew"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-35674",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-06-05T17:15:13.543",
        "lastModified": "2024-06-05T17:15:13.543",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "Missing Authorization vulnerability in Unlimited Elements Unlimited Elements For Elementor (Free Widgets, Addons, Templates).This issue affects Unlimited Elements For Elementor (Free Widgets, Addons, Templates): from n/a through 1.5.109.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/unlimited-elements-for-elementor/wordpress-unlimited-elements-for-elementor-plugin-1-5-109-broken-access-control-vulnerability?_s_id=cve"
          }
        ]
      }
    }
  ]
}