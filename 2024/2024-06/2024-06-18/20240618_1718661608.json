{
  "totalResults": 18,
  "datePublished": "2024-06-18T07:00:08.706504Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-37305",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-17T20:15:12.880",
        "lastModified": "2024-06-17T20:15:12.880",
        "baseScore": 8.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.2,
        "description": "oqs-provider is a provider for the OpenSSL 3 cryptography library that adds support for post-quantum cryptography in TLS, X.509, and S/MIME using post-quantum algorithms from liboqs. Flaws have been identified in the way oqs-provider handles lengths decoded with DECODE_UINT32 at the start of serialized hybrid (traditional + post-quantum) keys and signatures. Unchecked length values are later used for memory reads and writes; malformed input can lead to crashes or information leakage. Handling of plain/non-hybrid PQ key operation is not affected. This issue has been patched in in v0.6.1. All users are advised to upgrade. There are no workarounds for this issue.",
        "cweIds": [
          {
            "id": "CWE-120",
            "description": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')"
          },
          {
            "id": "CWE-130",
            "description": "Improper Handling of Length Parameter Inconsistency"
          },
          {
            "id": "CWE-190",
            "description": "Integer Overflow or Wraparound"
          },
          {
            "id": "CWE-680",
            "description": "Integer Overflow to Buffer Overflow"
          },
          {
            "id": "CWE-805",
            "description": "Buffer Access with Incorrect Length Value"
          }
        ],
        "references": [
          {
            "url": "https://github.com/open-quantum-safe/oqs-provider/pull/416"
          },
          {
            "url": "https://github.com/open-quantum-safe/oqs-provider/security/advisories/GHSA-pqvr-5cr8-v6fx"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37890",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-17T20:15:13.203",
        "lastModified": "2024-06-17T20:15:13.203",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.",
        "cweIds": [
          {
            "id": "CWE-476",
            "description": "NULL Pointer Dereference"
          }
        ],
        "references": [
          {
            "url": "https://github.com/websockets/ws/commit/22c28763234aa75a7e1b76f5c01c181260d7917f"
          },
          {
            "url": "https://github.com/websockets/ws/commit/4abd8f6de4b0b65ef80b3ff081989479ed93377e"
          },
          {
            "url": "https://github.com/websockets/ws/commit/e55e5106f10fcbaac37cfa89759e4cc0d073a52c"
          },
          {
            "url": "https://github.com/websockets/ws/commit/eeb76d313e2a00dd5247ca3597bba7877d064a63"
          },
          {
            "url": "https://github.com/websockets/ws/issues/2230"
          },
          {
            "url": "https://github.com/websockets/ws/pull/2231"
          },
          {
            "url": "https://github.com/websockets/ws/security/advisories/GHSA-3h5v-q93c-6h6q"
          },
          {
            "url": "https://nodejs.org/api/http.html#servermaxheaderscount"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37891",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-17T20:15:13.450",
        "lastModified": "2024-06-17T20:15:13.450",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.7,
        "impactScore": 3.6,
        "description": " urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
        "cweIds": [
          {
            "id": "CWE-669",
            "description": "Incorrect Resource Transfer Between Spheres"
          }
        ],
        "references": [
          {
            "url": "https://github.com/urllib3/urllib3/commit/accff72ecc2f6cf5a76d9570198a93ac7c90270e"
          },
          {
            "url": "https://github.com/urllib3/urllib3/security/advisories/GHSA-34jh-p97f-mpxf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37893",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-17T20:15:13.700",
        "lastModified": "2024-06-17T20:15:13.700",
        "baseScore": 5.9,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.2,
        "impactScore": 3.6,
        "description": "Firefly III is a free and open source personal finance manager. In affected versions an MFA bypass in the Firefly III OAuth flow may allow malicious users to bypass the MFA-check. This allows malicious users to use password spraying to gain access to Firefly III data using passwords stolen from other sources. As OAuth applications are easily enumerable using an incrementing id, an attacker could try sign an OAuth application up to a users profile quite easily if they have created one. The attacker would also need to know the victims username and password. This problem has been patched in Firefly III v6.1.17 and up. Users are advised to upgrade. Users unable to upgrade should Use a unique password for their Firefly III instance and store their password securely, i.e. in a password manager.",
        "cweIds": [
          {
            "id": "CWE-287",
            "description": "Improper Authentication"
          },
          {
            "id": "CWE-288",
            "description": "Authentication Bypass Using an Alternate Path or Channel"
          }
        ],
        "references": [
          {
            "url": "https://github.com/firefly-iii/firefly-iii/security/advisories/GHSA-4gm4-c4mh-4p7w"
          },
          {
            "url": "https://owasp.org/www-community/attacks/Password_Spraying_Attack"
          },
          {
            "url": "https://www.menlosecurity.com/what-is/highly-evasive-adaptive-threats-heat/mfa-bypass"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37895",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-17T20:15:13.970",
        "lastModified": "2024-06-17T20:15:13.970",
        "baseScore": 5.7,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.1,
        "impactScore": 3.6,
        "description": "Lobe Chat is an open-source LLMs/AI chat framework. In affected versions if an attacker can successfully authenticate through SSO/Access Code, they can obtain the real backend API Key by modifying the base URL to their own attack URL on the frontend and setting up a server-side request. This issue has been addressed in version 0.162.25. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lobehub/lobe-chat/security/advisories/GHSA-p36r-qxgx-jq2v"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37896",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-17T20:15:14.213",
        "lastModified": "2024-06-17T20:15:14.213",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "Gin-vue-admin is a backstage management system based on vue and gin. Gin-vue-admin <= v2.6.5 has SQL injection vulnerability. The SQL injection vulnerabilities occur when a web application allows users to input data into SQL queries without sufficiently validating or sanitizing the input. Failing to properly enforce restrictions on user input could mean that even a basic form input field can be used to inject arbitrary and potentially dangerous SQL commands. This could lead to unauthorized access to the database, data leakage, data manipulation, or even complete compromise of the database server. This vulnerability has been addressed in commit `53d033821` which has been included in release version 2.6.6. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/flipped-aurora/gin-vue-admin/commit/53d03382188868464ade489ab0713b54392d227f"
          },
          {
            "url": "https://github.com/flipped-aurora/gin-vue-admin/security/advisories/GHSA-gf3r-h744-mqgp"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37902",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-17T20:15:14.463",
        "lastModified": "2024-06-17T20:15:14.463",
        "baseScore": 10.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 6.0,
        "description": "DeepJavaLibrary(DJL) is an Engine-Agnostic Deep Learning Framework in Java. DJL versions 0.1.0 through 0.27.0 do not prevent absolute path archived artifacts from inserting archived files directly into the system, overwriting system files. This is fixed in DJL 0.28.0 and patched in DJL Large Model Inference containers version 0.27.0. Users are advised to upgrade.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/deepjavalibrary/djl/releases/tag/v0.28.0"
          },
          {
            "url": "https://github.com/deepjavalibrary/djl/security/advisories/GHSA-w877-jfw7-46rj"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6061",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-17T20:15:14.850",
        "lastModified": "2024-06-17T20:15:14.850",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "A vulnerability has been found in GPAC 2.5-DEV-rev228-g11067ea92-master and classified as problematic. Affected by this vulnerability is the function isoffin_process of the file src/filters/isoffin_read.c of the component MP4Box. The manipulation leads to infinite loop. It is possible to launch the attack on the local host. The exploit has been disclosed to the public and may be used. The identifier of the patch is 20c0f29139a82779b86453ce7f68d0681ec7624c. It is recommended to apply a patch to fix this issue. The identifier VDB-268789 was assigned to this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-835",
            "description": "Loop with Unreachable Exit Condition ('Infinite Loop')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/gpac/gpac/commit/20c0f29139a82779b86453ce7f68d0681ec7624c"
          },
          {
            "url": "https://github.com/gpac/gpac/issues/2871"
          },
          {
            "url": "https://github.com/user-attachments/files/15801058/poc1.zip"
          },
          {
            "url": "https://vuldb.com/?ctiid.268789"
          },
          {
            "url": "https://vuldb.com/?id.268789"
          },
          {
            "url": "https://vuldb.com/?submit.356308"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6062",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-17T20:15:15.170",
        "lastModified": "2024-06-17T20:15:15.170",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "A vulnerability was found in GPAC 2.5-DEV-rev228-g11067ea92-master and classified as problematic. Affected by this issue is the function swf_svg_add_iso_sample of the file src/filters/load_text.c of the component MP4Box. The manipulation leads to null pointer dereference. The attack needs to be approached locally. The exploit has been disclosed to the public and may be used. The patch is identified as 31e499d310a48bd17c8b055a0bfe0fe35887a7cd. It is recommended to apply a patch to fix this issue. VDB-268790 is the identifier assigned to this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-476",
            "description": "NULL Pointer Dereference"
          }
        ],
        "references": [
          {
            "url": "https://github.com/gpac/gpac/commit/31e499d310a48bd17c8b055a0bfe0fe35887a7cd"
          },
          {
            "url": "https://github.com/gpac/gpac/issues/2872"
          },
          {
            "url": "https://github.com/user-attachments/files/15801126/poc2.zip"
          },
          {
            "url": "https://vuldb.com/?ctiid.268790"
          },
          {
            "url": "https://vuldb.com/?id.268790"
          },
          {
            "url": "https://vuldb.com/?submit.356314"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-37057",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-17T21:15:50.380",
        "lastModified": "2024-06-17T21:15:50.380",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue in JLINK Unionman Technology Co. Ltd Jlink AX1800 v.1.0 allows a remote attacker to execute arbitrary code via the router's authentication mechanism.",
        "cweIds": null,
        "references": [
          {
            "url": "http://jlink.com"
          },
          {
            "url": "http://www.unionman.com.cn/en/contact.html"
          },
          {
            "url": "https://github.com/ri5c/Jlink-Router-RCE"
          },
          {
            "url": "https://jlink-global.com/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-37058",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-17T21:15:50.503",
        "lastModified": "2024-06-17T21:15:50.503",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Insecure Permissions vulnerability in JLINK Unionman Technology Co. Ltd Jlink AX1800 v.1.0 allows a remote attacker to escalate privileges via a crafted command.",
        "cweIds": null,
        "references": [
          {
            "url": "http://jlink.com"
          },
          {
            "url": "https://github.com/ri5c/Jlink-Router-RCE"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-34833",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-17T21:15:50.783",
        "lastModified": "2024-06-17T21:15:50.783",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Sourcecodester Payroll Management System v1.0 is vulnerable to File Upload. Users can upload images via the \"save_settings\" page. An unauthenticated attacker can leverage this functionality to upload a malicious PHP file instead. Successful exploitation of this vulnerability results in the ability to execute arbitrary code as the user running the web server.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/ShellUnease/payroll-management-system-rce"
          },
          {
            "url": "https://packetstormsecurity.com/files/179106/Payroll-Management-System-1.0-Remote-Code-Execution.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37798",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-17T21:15:51.180",
        "lastModified": "2024-06-17T21:15:51.180",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Cross-site scripting (XSS) vulnerability in search-appointment.php in the Admin Panel in Phpgurukul Beauty Parlour Management System 1.0 allows remote attackers to inject arbitrary web script or HTML via the search input field.",
        "cweIds": null,
        "references": [
          {
            "url": "https://cyberxtron.com/blog/cve-2024-37798---cross-site-scripting-xss-in-beauty-parlour-management-system--5187"
          },
          {
            "url": "https://owasp.org/www-community/attacks/xss/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37828",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-17T21:15:51.280",
        "lastModified": "2024-06-17T21:15:51.280",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A stored cross-site scripting (XSS) in Vermeg Agile Reporter v23.2.1 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Message field under the Set Broadcast Message module.",
        "cweIds": null,
        "references": [
          {
            "url": "https://crashpark.weebly.com/blog/2-stored-xss-in-agilereporter-213-by-vermeg"
          },
          {
            "url": "https://www.vermeg.com/agile-reporter/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6063",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-17T21:15:51.443",
        "lastModified": "2024-06-17T21:15:51.443",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "A vulnerability was found in GPAC 2.5-DEV-rev228-g11067ea92-master. It has been classified as problematic. This affects the function m2tsdmx_on_event of the file src/filters/dmx_m2ts.c of the component MP4Box. The manipulation leads to null pointer dereference. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The patch is named 8767ed0a77c4b02287db3723e92c2169f67c85d5. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-268791.",
        "cweIds": [
          {
            "id": "CWE-476",
            "description": "NULL Pointer Dereference"
          }
        ],
        "references": [
          {
            "url": "https://github.com/gpac/gpac/commit/8767ed0a77c4b02287db3723e92c2169f67c85d5"
          },
          {
            "url": "https://github.com/gpac/gpac/issues/2873"
          },
          {
            "url": "https://github.com/user-attachments/files/15801157/poc.zip"
          },
          {
            "url": "https://vuldb.com/?ctiid.268791"
          },
          {
            "url": "https://vuldb.com/?id.268791"
          },
          {
            "url": "https://vuldb.com/?submit.356315"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6064",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-17T21:15:51.727",
        "lastModified": "2024-06-17T21:15:51.727",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.8,
        "impactScore": 3.4,
        "description": "A vulnerability was found in GPAC 2.5-DEV-rev228-g11067ea92-master. It has been declared as problematic. This vulnerability affects the function xmt_node_end of the file src/scene_manager/loader_xmt.c of the component MP4Box. The manipulation leads to use after free. Local access is required to approach this attack. The exploit has been disclosed to the public and may be used. The name of the patch is f4b3e4d2f91bc1749e7a924a8ab171af03a355a8/c1b9c794bad8f262c56f3cf690567980d96662f5. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-268792.",
        "cweIds": [
          {
            "id": "CWE-416",
            "description": "Use After Free"
          }
        ],
        "references": [
          {
            "url": "https://github.com/gpac/gpac/commit/c1b9c794bad8f262c56f3cf690567980d96662f5"
          },
          {
            "url": "https://github.com/gpac/gpac/issues/2874"
          },
          {
            "url": "https://github.com/user-attachments/files/15801189/poc.zip"
          },
          {
            "url": "https://vuldb.com/?ctiid.268792"
          },
          {
            "url": "https://vuldb.com/?id.268792"
          },
          {
            "url": "https://vuldb.com/?submit.356316"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6065",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-17T21:15:52.007",
        "lastModified": "2024-06-17T21:15:52.007",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.4,
        "description": "A vulnerability was found in itsourcecode Bakery Online Ordering System 1.0. It has been rated as critical. This issue affects some unknown processing of the file index.php. The manipulation of the argument user_email leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-268793 was assigned to this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/ppp-src/CVE/issues/4"
          },
          {
            "url": "https://vuldb.com/?ctiid.268793"
          },
          {
            "url": "https://vuldb.com/?id.268793"
          },
          {
            "url": "https://vuldb.com/?submit.358386"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6066",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-17T21:15:52.283",
        "lastModified": "2024-06-17T21:15:52.283",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "A vulnerability classified as critical has been found in SourceCodester Best House Rental Management System 1.0. Affected is an unknown function of the file payment_report.php. The manipulation of the argument month_of leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-268794 is the identifier assigned to this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/jadu101/CVE/blob/main/SourceCodester_House_Rental_Management_System_Sqli.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.268794"
          },
          {
            "url": "https://vuldb.com/?id.268794"
          },
          {
            "url": "https://vuldb.com/?submit.358439"
          }
        ]
      }
    }
  ]
}