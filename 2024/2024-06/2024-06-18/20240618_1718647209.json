{
  "totalResults": 6,
  "datePublished": "2024-06-18T03:00:09.002448Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-0397",
        "sourceIdentifier": "cna@python.org",
        "published": "2024-06-17T16:15:10.217",
        "lastModified": "2024-06-17T18:15:14.767",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A defect was discovered in the Python “ssl” module where there is a memory\nrace condition with the ssl.SSLContext methods “cert_store_stats()” and\n“get_ca_certs()”. The race condition can be triggered if the methods are\ncalled at the same time as certificates are loaded into the SSLContext,\nsuch as during the TLS handshake with a certificate directory configured.\nThis issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.",
        "cweIds": null,
        "references": [
          {
            "url": "http://www.openwall.com/lists/oss-security/2024/06/17/2"
          },
          {
            "url": "https://github.com/python/cpython/commit/01c37f1d0714f5822d34063ca7180b595abf589d"
          },
          {
            "url": "https://github.com/python/cpython/commit/29c97287d205bf2f410f4895ebce3f43b5160524"
          },
          {
            "url": "https://github.com/python/cpython/commit/37324b421b72b7bc9934e27aba85d48d4773002e"
          },
          {
            "url": "https://github.com/python/cpython/commit/542f3272f56f31ed04e74c40635a913fbc12d286"
          },
          {
            "url": "https://github.com/python/cpython/commit/b228655c227b2ca298a8ffac44d14ce3d22f6faa"
          },
          {
            "url": "https://github.com/python/cpython/commit/bce693111bff906ccf9281c22371331aaff766ab"
          },
          {
            "url": "https://github.com/python/cpython/issues/114572"
          },
          {
            "url": "https://github.com/python/cpython/pull/114573"
          },
          {
            "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/BMAK5BCGKYWNJOACVUSLUF6SFGBIM4VP/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36573",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-17T16:15:14.947",
        "lastModified": "2024-06-17T16:15:14.947",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "almela obx before v.0.0.4 has a Prototype Pollution issue which allows arbitrary code execution via the obx/build/index.js:656), reduce (@almela/obx/build/index.js:470), Object.set (obx/build/index.js:269) component.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/mestrtee/fd8181bbc180d775f8367a2b9e0ffcd1"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36574",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-17T16:15:15.040",
        "lastModified": "2024-06-17T16:15:15.040",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A Prototype Pollution issue in flatten-json 1.0.1 allows an attacker to execute arbitrary code via module.exports.unflattenJSON (flatten-json/index.js:42)",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/mestrtee/d5a0c93459599f77557b5bbe78b57325"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36575",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-17T16:15:15.140",
        "lastModified": "2024-06-17T16:15:15.140",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A Prototype Pollution issue in getsetprop 1.1.0 allows an attacker to execute arbitrary code via global.accessor.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/mestrtee/0d830798f20839d634278d7af0155f9e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36577",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-17T16:15:15.233",
        "lastModified": "2024-06-17T16:15:15.233",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "apphp js-object-resolver < 3.1.1 is vulnerable to Prototype Pollution via Module.setNestedProperty.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/mestrtee/c90189f3d8480a5f267395ec40701373"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36578",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-17T16:15:15.333",
        "lastModified": "2024-06-17T16:15:15.333",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "akbr update 1.0.0 is vulnerable to Prototype Pollution via update/index.js.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/mestrtee/8bc749ec2b5453d887b2f4a362a65897"
          }
        ]
      }
    }
  ]
}