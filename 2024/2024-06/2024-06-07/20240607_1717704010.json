{
  "totalResults": 105,
  "datePublished": "2024-06-07T05:00:10.403153Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-1879",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:12.827",
        "lastModified": "2024-06-06T18:15:12.827",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "A Cross-Site Request Forgery (CSRF) vulnerability in significant-gravitas/autogpt version v0.5.0 allows attackers to execute arbitrary commands on the AutoGPT server. The vulnerability stems from the lack of protections on the API endpoint receiving instructions, enabling an attacker to direct a user running AutoGPT in their local network to a malicious website. This site can then send crafted requests to the AutoGPT server, leading to command execution. The issue is exacerbated by CORS being enabled for arbitrary origins by default, allowing the attacker to read the response of all cross-site queries. This vulnerability was addressed in version 5.1.",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/significant-gravitas/autogpt/commit/26324f29849967fa72c207da929af612f1740669"
          },
          {
            "url": "https://huntr.com/bounties/125c2d0c-0481-4e5c-ae90-fec263acdf32"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2914",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:13.227",
        "lastModified": "2024-06-06T18:15:13.227",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "A TarSlip vulnerability exists in the deepjavalibrary/djl, affecting version 0.26.0 and fixed in version 0.27.0. This vulnerability allows an attacker to manipulate file paths within tar archives to overwrite arbitrary files on the target system. Exploitation of this vulnerability could lead to remote code execution, privilege escalation, data theft or manipulation, and denial of service. The vulnerability is due to improper validation of file paths during the extraction of tar files, as demonstrated in multiple occurrences within the library's codebase, including but not limited to the files_util.py and extract_imagenet.py scripts.",
        "cweIds": [
          {
            "id": "CWE-29",
            "description": "Path Traversal: '\\..\\filename'"
          }
        ],
        "references": [
          {
            "url": "https://github.com/deepjavalibrary/djl/commit/5235be508cec9e8cb6f496a4ed2fa40e4f62c370"
          },
          {
            "url": "https://huntr.com/bounties/b064bd2f-bf6e-4fc0-898e-7d02a9b97e24"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30368",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:13.443",
        "lastModified": "2024-06-06T18:15:13.443",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "A10 Thunder ADC CsrRequestView Command Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of A10 Thunder ADC. Authentication is required to exploit this vulnerability.\nThe specific flaw exists within the CsrRequestView class. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of a10user. Was ZDI-CAN-22517.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://support.a10networks.com/support/security_advisory/cve-2024-30368-cve-2024-30369"
          },
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-524/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30369",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:13.720",
        "lastModified": "2024-06-06T18:15:13.720",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "A10 Thunder ADC Incorrect Permission Assignment Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of A10 Thunder ADC. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.\nThe specific flaw exists within the installer. The issue results from incorrect permissions on a file. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of root. Was ZDI-CAN-22754.",
        "cweIds": [
          {
            "id": "CWE-732",
            "description": "Incorrect Permission Assignment for Critical Resource"
          }
        ],
        "references": [
          {
            "url": "https://support.a10networks.com/support/security_advisory/cve-2024-30368-cve-2024-30369"
          },
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-525/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30374",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:13.953",
        "lastModified": "2024-06-06T18:15:13.953",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Luxion KeyShot Viewer KSP File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Luxion KeyShot Viewer. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of KSP files. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22449.",
        "cweIds": [
          {
            "id": "CWE-787",
            "description": "Out-of-bounds Write"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-566/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30375",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:14.153",
        "lastModified": "2024-06-06T18:15:14.153",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Luxion KeyShot Viewer KSP File Parsing Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Luxion KeyShot Viewer. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of KSP files. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22515.",
        "cweIds": [
          {
            "id": "CWE-416",
            "description": "Use After Free"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-565/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36736",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-06T18:15:16.560",
        "lastModified": "2024-06-06T18:15:16.560",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue in the oneflow.permute component of OneFlow-Inc. Oneflow v0.9.1 causes an incorrect calculation when the same dimension operation is performed.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Redmept1on/6de04fb6c7af6956973fe2765c4d4576"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36737",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-06T18:15:16.643",
        "lastModified": "2024-06-06T18:15:16.643",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Improper input validation in OneFlow-Inc. Oneflow v0.9.1 allows attackers to cause a Denial of Service (DoS) via inputting a negative value into the oneflow.full parameter.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Redmept1on/3a77cc722f82b57f99ccbe835aacf27d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36743",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-06T18:15:16.723",
        "lastModified": "2024-06-06T18:15:16.723",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue in OneFlow-Inc. Oneflow v0.9.1 allows attackers to cause a Denial of Service (DoS) when an empty array is processed with oneflow.dot.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Redmept1on/64aa53d37e99975725a7d3e2dc9d9761"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36745",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-06T18:15:16.807",
        "lastModified": "2024-06-06T18:15:16.807",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue in OneFlow-Inc. Oneflow v0.9.1 allows attackers to cause a Denial of Service (DoS) via inputting a negative value into the oneflow.index_select parameter.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Redmept1on/42caad5576101cdd93deb6470d979952"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3033",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:17.040",
        "lastModified": "2024-06-06T18:15:17.040",
        "baseScore": 9.1,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.2,
        "description": "An improper authorization vulnerability exists in the mintplex-labs/anything-llm application, specifically within the '/api/v/' endpoint and its sub-routes. This flaw allows unauthenticated users to perform destructive actions on the VectorDB, including resetting the database and deleting specific namespaces, without requiring any authorization or permissions. The issue affects all versions up to and including the latest version, with a fix introduced in version 1.0.0. Exploitation of this vulnerability can lead to complete data loss of document embeddings across all workspaces, rendering workspace chats and embeddable chat widgets non-functional. Additionally, attackers can list all namespaces, potentially exposing private workspace names.",
        "cweIds": [
          {
            "id": "CWE-285",
            "description": "Improper Authorization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/bf8df60c02b9ddc7ba682809ca12c5637606393a"
          },
          {
            "url": "https://huntr.com/bounties/8a98a0b4-7886-41c5-8624-fc5c21972e5a"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3104",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:17.260",
        "lastModified": "2024-06-06T18:15:17.260",
        "baseScore": 9.6,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 2.8,
        "impactScore": 6.0,
        "description": "A remote code execution vulnerability exists in mintplex-labs/anything-llm due to improper handling of environment variables. Attackers can exploit this vulnerability by injecting arbitrary environment variables via the `POST /api/system/update-env` endpoint, which allows for the execution of arbitrary code on the host running anything-llm. The vulnerability is present in the latest version of anything-llm, with the latest commit identified as fde905aac1812b84066ff72e5f2f90b56d4c3a59. This issue has been fixed in version 1.0.0. Successful exploitation could lead to code execution on the host, enabling attackers to read and modify data accessible to the user running the service, potentially leading to a denial of service. ",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/bfedfebfab032e6f4d5a369c8a2f947c5d0c5286"
          },
          {
            "url": "https://huntr.com/bounties/4f2fcb45-5828-4bec-985a-9d3a0ee00462"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3152",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:17.490",
        "lastModified": "2024-06-06T18:15:17.490",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "mintplex-labs/anything-llm is vulnerable to multiple security issues due to improper input validation in several endpoints. An attacker can exploit these vulnerabilities to escalate privileges from a default user role to an admin role, read and delete arbitrary files on the system, and perform Server-Side Request Forgery (SSRF) attacks. The vulnerabilities are present in the `/request-token`, `/workspace/:slug/thread/:threadSlug/update`, `/system/remove-logo`, `/system/logo`, and collector's `/process` endpoints. These issues are due to the application's failure to properly validate user input before passing it to `prisma` functions and other critical operations. Affected versions include the latest version prior to 1.0.0.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/200bd7f0615347ed2efc07903d510e5a208b0afc"
          },
          {
            "url": "https://huntr.com/bounties/46034fa0-d623-49f8-8ee8-390390181373"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3504",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:17.980",
        "lastModified": "2024-06-06T18:15:17.980",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "An improper access control vulnerability exists in lunary-ai/lunary versions up to and including 1.2.2, where an admin can update any organization user to the organization owner. This vulnerability allows the elevated user to delete projects within the organization. The issue is resolved in version 1.2.7.",
        "cweIds": [
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/f7507f0949f6634f725ebb8da37c44f76542901f"
          },
          {
            "url": "https://huntr.com/bounties/97958fe4-be21-4b63-966f-8337c72c8e28"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4325",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:18.300",
        "lastModified": "2024-06-06T18:15:18.300",
        "baseScore": 8.6,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.0,
        "description": "A Server-Side Request Forgery (SSRF) vulnerability exists in the gradio-app/gradio version 4.21.0, specifically within the `/queue/join` endpoint and the `save_url_to_cache` function. The vulnerability arises when the `path` value, obtained from the user and expected to be a URL, is used to make an HTTP request without sufficient validation checks. This flaw allows an attacker to send crafted requests that could lead to unauthorized access to the local network or the AWS metadata endpoint, thereby compromising the security of internal servers.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/b34f084b-7d14-4f00-bc10-048a3a5aaf88"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4889",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:18.577",
        "lastModified": "2024-06-06T18:15:18.577",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "A code injection vulnerability exists in the berriai/litellm application, version 1.34.6, due to the use of unvalidated input in the eval function within the secret management system. This vulnerability requires a valid Google KMS configuration file to be exploitable. Specifically, by setting the `UI_LOGO_PATH` variable to a remote server address in the `get_image` function, an attacker can write a malicious Google KMS configuration file to the `cached_logo.jpg` file. This file can then be used to execute arbitrary code by assigning malicious code to the `SAVE_CONFIG_TO_DB` environment variable, leading to full system control. The vulnerability is contingent upon the use of the Google KMS feature.",
        "cweIds": [
          {
            "id": "CWE-94",
            "description": "Improper Control of Generation of Code ('Code Injection')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/be3fda72-a65b-4993-9a0e-7e0f05db51f8"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4941",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:18.783",
        "lastModified": "2024-06-06T18:15:18.783",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "A local file inclusion vulnerability exists in the JSON component of gradio-app/gradio version 4.25. The vulnerability arises from improper input validation in the `postprocess()` function within `gradio/components/json_component.py`, where a user-controlled string is parsed as JSON. If the parsed JSON object contains a `path` key, the specified file is moved to a temporary directory, making it possible to retrieve it later via the `/file=..` endpoint. This issue is due to the `processing_utils.move_files_to_cache()` function traversing any object passed to it, looking for a dictionary with a `path` key, and then copying the specified file to a temporary directory. The vulnerability can be exploited by an attacker to read files on the remote system, posing a significant security risk.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/gradio-app/gradio/commit/ee1e2942e0a1ae84a08a05464e41c8108a03fa9c"
          },
          {
            "url": "https://huntr.com/bounties/39889ce1-298d-4568-aecd-7ae40c2ca58e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5127",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:19.000",
        "lastModified": "2024-06-06T18:15:19.000",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "In lunary-ai/lunary versions 1.2.2 through 1.2.25, an improper access control vulnerability allows users on the Free plan to invite other members and assign them any role, including those intended for Paid and Enterprise plans only. This issue arises due to insufficient backend validation of roles and permissions, enabling unauthorized users to join a project and potentially exploit roles and permissions not intended for their use. The vulnerability specifically affects the Team feature, where the backend fails to validate whether a user has paid for a plan before allowing them to send invite links with any role assigned. This could lead to unauthorized access and manipulation of project settings or data.",
        "cweIds": [
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/b7bd3a830a0f47ba07d0fd57bf78c4dd8a216297"
          },
          {
            "url": "https://huntr.com/bounties/719a5db3-f943-4100-a660-011cadf1bb32"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5256",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:19.220",
        "lastModified": "2024-06-06T18:15:19.220",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "Sonos Era 100 SMB2 Message Handling Integer Underflow Information Disclosure Vulnerability. This vulnerability allows network-adjacent attackers to disclose sensitive information on affected installations of Sonos Era 100 smart speakers. Authentication is not required to exploit this vulnerability.\nThe specific flaw exists within the handling of SMB2 messages. The issue results from the lack of proper validation of user-supplied data, which can result in an integer underflow before reading from memory. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of root. Was ZDI-CAN-22336.",
        "cweIds": [
          {
            "id": "CWE-191",
            "description": "Integer Underflow (Wrap or Wraparound)"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-542/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5267",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:19.477",
        "lastModified": "2024-06-06T18:15:19.477",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "Sonos Era 100 SMB2 Message Handling Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of Sonos Era 100 smart speakers. Authentication is not required to exploit this vulnerability.\nThe specific flaw exists within the handling of SMB2 messages. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22384.",
        "cweIds": [
          {
            "id": "CWE-787",
            "description": "Out-of-bounds Write"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-543/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5268",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:19.680",
        "lastModified": "2024-06-06T18:15:19.680",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "Sonos Era 100 SMB2 Message Handling Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows network-adjacent attackers to disclose sensitive information on affected installations of Sonos Era 100 smart speakers. Authentication is not required to exploit this vulnerability.\nThe specific flaw exists within the handling of SMB2 messages. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of root. Was ZDI-CAN-22428.",
        "cweIds": [
          {
            "id": "CWE-125",
            "description": "Out-of-bounds Read"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-544/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5269",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:19.880",
        "lastModified": "2024-06-06T18:15:19.880",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "Sonos Era 100 SMB2 Message Handling Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of Sonos Era 100 smart speakers. Authentication is not required to exploit this vulnerability.\nThe specific flaw exists within the handling of SMB2 messages. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22459.",
        "cweIds": [
          {
            "id": "CWE-416",
            "description": "Use After Free"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-545/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5277",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:20.087",
        "lastModified": "2024-06-06T18:15:20.087",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 5.2,
        "description": "In lunary-ai/lunary version 1.2.4, a vulnerability exists in the password recovery mechanism where the reset password token is not invalidated after use. This allows an attacker who compromises the recovery token to repeatedly change the password of a victim's account. The issue lies in the backend's handling of the reset password process, where the token, once used, is not discarded or invalidated, enabling its reuse. This vulnerability could lead to unauthorized account access if an attacker obtains the recovery token.",
        "cweIds": [
          {
            "id": "CWE-640",
            "description": "Weak Password Recovery Mechanism for Forgotten Password"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/6aaba769-d99c-48cf-90d2-7abad984213d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5301",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:20.307",
        "lastModified": "2024-06-06T18:15:20.307",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Kofax Power PDF PSD File Parsing Heap-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of PSD files. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length heap-based buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22917.",
        "cweIds": [
          {
            "id": "CWE-122",
            "description": "Heap-based Buffer Overflow"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-546/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5302",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:20.530",
        "lastModified": "2024-06-06T18:15:20.530",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Kofax Power PDF PDF File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of PDF files. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22918.",
        "cweIds": [
          {
            "id": "CWE-787",
            "description": "Out-of-bounds Write"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-547/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5303",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:20.750",
        "lastModified": "2024-06-06T18:15:20.750",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Kofax Power PDF PSD File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of PSD files. The issue results from the lack of proper validation of user-supplied data, which can result in a write  past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22919.",
        "cweIds": [
          {
            "id": "CWE-787",
            "description": "Out-of-bounds Write"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-548/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5452",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:20.970",
        "lastModified": "2024-06-06T18:15:20.970",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "A remote code execution (RCE) vulnerability exists in the lightning-ai/pytorch-lightning library version 2.2.1 due to improper handling of deserialized user input and mismanagement of dunder attributes by the `deepdiff` library. The library uses `deepdiff.Delta` objects to modify application state based on frontend actions. However, it is possible to bypass the intended restrictions on modifying dunder attributes, allowing an attacker to construct a serialized delta that passes the deserializer whitelist and contains dunder attributes. When processed, this can be exploited to access other modules, classes, and instances, leading to arbitrary attribute write and total RCE on any self-hosted pytorch-lightning application in its default configuration, as the delta endpoint is enabled by default.",
        "cweIds": [
          {
            "id": "CWE-915",
            "description": "Improperly Controlled Modification of Dynamically-Determined Object Attributes"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/486add92-275e-4a7b-92f9-42d84bc759da"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5482",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T18:15:21.207",
        "lastModified": "2024-06-06T18:15:21.207",
        "baseScore": 7.4,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 4.0,
        "description": "A Server-Side Request Forgery (SSRF) vulnerability exists in the 'add_webpage' endpoint of the parisneo/lollms-webui application, affecting the latest version. The vulnerability arises because the application does not adequately validate URLs entered by users, allowing them to input arbitrary URLs, including those that target internal resources such as 'localhost' or '127.0.0.1'. This flaw enables attackers to make unauthorized requests to internal or external systems, potentially leading to access to sensitive data, service disruption, network integrity compromise, business logic manipulation, and abuse of third-party resources. The issue is critical and requires immediate attention to maintain the application's security and integrity.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/d97e23e7-172f-4862-a732-86bfc0b7860e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5505",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:21.423",
        "lastModified": "2024-06-06T18:15:21.423",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "NETGEAR ProSAFE Network Management System UpLoadServlet Directory Traversal Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of NETGEAR ProSAFE Network Management System. Authentication is required to exploit this vulnerability.\nThe specific flaw exists within the UpLoadServlet class. The issue results from the lack of proper validation of a user-supplied path prior to using it in file operations. An attacker can leverage this vulnerability to execute code in the context of SYSTEM. Was ZDI-CAN-22724.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-563/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5506",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:21.640",
        "lastModified": "2024-06-06T18:15:21.640",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Luxion KeyShot Viewer KSP File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Luxion KeyShot Viewer. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of KSP files. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22514.",
        "cweIds": [
          {
            "id": "CWE-787",
            "description": "Out-of-bounds Write"
          }
        ],
        "references": [
          {
            "url": "https://www.keyshot.com/csirt/"
          },
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-538/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5507",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:21.853",
        "lastModified": "2024-06-06T18:15:21.853",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Luxion KeyShot Viewer KSP File Parsing Stack-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Luxion KeyShot Viewer. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of KSP files. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22266.",
        "cweIds": [
          {
            "id": "CWE-121",
            "description": "Stack-based Buffer Overflow"
          }
        ],
        "references": [
          {
            "url": "https://www.keyshot.com/csirt/"
          },
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-541/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5508",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:22.053",
        "lastModified": "2024-06-06T18:15:22.053",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Luxion KeyShot Viewer KSP File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Luxion KeyShot Viewer. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of KSP files. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22267.",
        "cweIds": [
          {
            "id": "CWE-787",
            "description": "Out-of-bounds Write"
          }
        ],
        "references": [
          {
            "url": "https://www.keyshot.com/csirt/"
          },
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-539/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5509",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T18:15:22.270",
        "lastModified": "2024-06-06T18:15:22.270",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Luxion KeyShot BIP File Parsing Uncontrolled Search Path Element Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Luxion KeyShot. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of BIP files. The issue results from loading a library from an unsecured location. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22738.",
        "cweIds": [
          {
            "id": "CWE-427",
            "description": "Uncontrolled Search Path Element"
          }
        ],
        "references": [
          {
            "url": "https://www.keyshot.com/csirt/"
          },
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-540/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-45192",
        "sourceIdentifier": "psirt@us.ibm.com",
        "published": "2024-06-06T19:15:50.730",
        "lastModified": "2024-06-06T19:15:50.730",
        "baseScore": 8.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.2,
        "description": "IBM Engineering Requirements Management DOORS Next 7.0.2 and 7.0.3 is vulnerable to an XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources.  IBM X-Force ID:  268758.",
        "cweIds": [
          {
            "id": "CWE-611",
            "description": "Improper Restriction of XML External Entity Reference"
          }
        ],
        "references": [
          {
            "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/268758"
          },
          {
            "url": "https://www.ibm.com/support/pages/node/7156492"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-0520",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:51.187",
        "lastModified": "2024-06-06T19:15:51.187",
        "baseScore": 10.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 6.0,
        "description": "A vulnerability in mlflow/mlflow version 8.2.1 allows for remote code execution due to improper neutralization of special elements used in an OS command ('Command Injection') within the `mlflow.data.http_dataset_source.py` module. Specifically, when loading a dataset from a source URL with an HTTP scheme, the filename extracted from the `Content-Disposition` header or the URL path is used to generate the final file path without proper sanitization. This flaw enables an attacker to control the file path fully by utilizing path traversal or absolute path techniques, such as '../../tmp/poc.txt' or '/tmp/poc.txt', leading to arbitrary file write. Exploiting this vulnerability could allow a malicious user to execute commands on the vulnerable machine, potentially gaining access to data and model information. The issue is fixed in version 2.9.0.",
        "cweIds": [
          {
            "id": "CWE-23",
            "description": "Relative Path Traversal"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mlflow/mlflow/commit/400c226953b4568f4361bc0a0c223511652c2b9d"
          },
          {
            "url": "https://huntr.com/bounties/93e470d7-b6f0-409b-af63-49d3e2a26dbc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1873",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:51.460",
        "lastModified": "2024-06-06T19:15:51.460",
        "baseScore": 8.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.2,
        "description": "parisneo/lollms-webui is vulnerable to path traversal and denial of service attacks due to an exposed `/select_database` endpoint in version a9d16b0. The endpoint improperly handles file paths, allowing attackers to specify absolute paths when interacting with the `DiscussionsDB` instance. This flaw enables attackers to create directories anywhere on the system where the application has permissions, potentially leading to denial of service by creating directories with names of critical files, such as HTTPS certificate files, causing server startup failures. Additionally, attackers can manipulate the database path, resulting in the loss of client data by constantly changing the file location to an attacker-controlled location, scattering the data across the filesystem and making recovery difficult.",
        "cweIds": [
          {
            "id": "CWE-749",
            "description": "Exposed Dangerous Method or Function"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/c1cfc0d9-517a-4d0e-bf1c-6444c1fd195d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1880",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:51.703",
        "lastModified": "2024-06-06T19:15:51.703",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "An OS command injection vulnerability exists in the MacOS Text-To-Speech class MacOSTTS of the significant-gravitas/autogpt project, affecting versions up to v0.5.0. The vulnerability arises from the improper neutralization of special elements used in an OS command within the `_speech` method of the MacOSTTS class. Specifically, the use of `os.system` to execute the `say` command with user-supplied text allows for arbitrary code execution if an attacker can inject shell commands. This issue is triggered when the AutoGPT instance is run with the `--speak` option enabled and configured with `TEXT_TO_SPEECH_PROVIDER=macos`, reflecting back a shell injection snippet. The impact of this vulnerability is the potential execution of arbitrary code on the instance running AutoGPT. The issue was addressed in version 5.1.0.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/significant-gravitas/autogpt/commit/26324f29849967fa72c207da929af612f1740669"
          },
          {
            "url": "https://huntr.com/bounties/4e742624-8771-4f3c-9634-3eaf33d6d58e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1881",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:51.920",
        "lastModified": "2024-06-06T19:15:51.920",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "AutoGPT, a component of significant-gravitas/autogpt, is vulnerable to an improper neutralization of special elements used in an OS command ('OS Command Injection') due to a flaw in its shell command validation function. Specifically, the vulnerability exists in versions v0.5.0 up to but not including 5.1.0. The issue arises from the application's method of validating shell commands against an allowlist or denylist, where it only checks the first word of the command. This allows an attacker to bypass the intended restrictions by crafting commands that are executed despite not being on the allowlist or by including malicious commands not present in the denylist. Successful exploitation of this vulnerability could allow an attacker to execute arbitrary shell commands.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/significant-gravitas/autogpt/commit/26324f29849967fa72c207da929af612f1740669"
          },
          {
            "url": "https://huntr.com/bounties/416c4a8b-36ba-4bbc-850a-a2f978b0fac8"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-22326",
        "sourceIdentifier": "psirt@us.ibm.com",
        "published": "2024-06-06T19:15:52.137",
        "lastModified": "2024-06-06T19:15:52.137",
        "baseScore": 5.0,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 3.4,
        "description": "IBM System Storage DS8900F 89.22.19.0, 89.30.68.0, 89.32.40.0, 89.33.48.0, 89.40.83.0, and 89.40.93.0 could allow a remote user to create an LDAP connection with a valid username and empty password to establish an anonymous connection.    IBM X-Force ID:  279518.",
        "cweIds": [
          {
            "id": "CWE-306",
            "description": "Missing Authentication for Critical Function"
          }
        ],
        "references": [
          {
            "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/279518"
          },
          {
            "url": "https://www.ibm.com/support/pages/node/7156621"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-23793",
        "sourceIdentifier": "security@otrs.com",
        "published": "2024-06-06T19:15:52.373",
        "lastModified": "2024-06-06T19:15:52.373",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.1,
        "impactScore": 4.2,
        "description": "The file upload feature in OTRS and ((OTRS)) Community Edition has a path traversal vulnerability. This issue permits authenticated agents or customer users to upload potentially harmful files to directories accessible by the web server, potentially leading to the execution of local code like Perl scripts.\nThis issue affects OTRS: from 7.0.X through 7.0.49, 8.0.X, 2023.X, from 2024.X through 2024.3.2; ((OTRS)) Community Edition: from 6.0.1 through 6.0.34.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://otrs.com/release-notes/otrs-security-advisory-2024-05/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2032",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:53.060",
        "lastModified": "2024-06-06T19:15:53.060",
        "baseScore": 3.1,
        "baseSeverity": "LOW",
        "exploitabilityScore": 0.5,
        "impactScore": 2.5,
        "description": "A race condition vulnerability exists in zenml-io/zenml versions up to and including 0.55.3, which allows for the creation of multiple users with the same username when requests are sent in parallel. This issue was fixed in version 0.55.5. The vulnerability arises due to insufficient handling of concurrent user creation requests, leading to data inconsistencies and potential authentication problems. Specifically, concurrent processes may overwrite or corrupt user data, complicating user identification and posing security risks. This issue is particularly concerning for APIs that rely on usernames as input parameters, such as PUT /api/v1/users/test_race, where it could lead to further complications.",
        "cweIds": [
          {
            "id": "CWE-366",
            "description": "Race Condition within a Thread"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zenml-io/zenml/commit/afcaf741ef9114c9b32f722f101b97de3d8d147b"
          },
          {
            "url": "https://huntr.com/bounties/6199cd5d-611f-4ea9-96c5-52a952ba5a56"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2035",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:53.313",
        "lastModified": "2024-06-06T19:15:53.313",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 5.2,
        "description": "An improper authorization vulnerability exists in the zenml-io/zenml repository, specifically within the API PUT /api/v1/users/id endpoint. This vulnerability allows any authenticated user to modify the information of other users, including changing the `active` status of user accounts to false, effectively deactivating them. This issue affects version 0.55.3 and was fixed in version 0.56.2. The impact of this vulnerability is significant as it allows for the deactivation of admin accounts, potentially disrupting the functionality and security of the application.",
        "cweIds": [
          {
            "id": "CWE-1220",
            "description": "Insufficient Granularity of Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zenml-io/zenml/commit/b95f083efffa56831cd41d8ed536aeb0b6038fa3"
          },
          {
            "url": "https://huntr.com/bounties/1cfc6493-082e-4229-9f2f-496801a6557c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2171",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:53.647",
        "lastModified": "2024-06-06T19:15:53.647",
        "baseScore": 3.4,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.7,
        "impactScore": 1.4,
        "description": "A stored Cross-Site Scripting (XSS) vulnerability was identified in the zenml-io/zenml repository, specifically within the 'logo_url' field. By injecting malicious payloads into this field, an attacker could send harmful messages to other users, potentially compromising their accounts. The vulnerability affects version 0.55.3 and was fixed in version 0.56.2. The impact of exploiting this vulnerability could lead to user account compromise.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zenml-io/zenml/commit/68bcb3ba60cba9729c9713a49c39502d40fb945e"
          },
          {
            "url": "https://huntr.com/bounties/cee06a28-7e3b-460b-b504-69add838ebe8"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2213",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:53.890",
        "lastModified": "2024-06-06T19:15:53.890",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "An issue was discovered in zenml-io/zenml versions up to and including 0.55.4. Due to improper authentication mechanisms, an attacker with access to an active user session can change the account password without needing to know the current password. This vulnerability allows for unauthorized account takeover by bypassing the standard password change verification process. The issue was fixed in version 0.56.3.",
        "cweIds": [
          {
            "id": "CWE-287",
            "description": "Improper Authentication"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zenml-io/zenml/commit/58cb3d987372c91eb605853c35325701733337c2"
          },
          {
            "url": "https://huntr.com/bounties/8f5534ac-fd08-4b8b-8c2e-35949aa36e48"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2288",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:54.137",
        "lastModified": "2024-06-06T19:15:54.137",
        "baseScore": 8.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.5,
        "description": "A Cross-Site Request Forgery (CSRF) vulnerability exists in the profile picture upload functionality of the Lollms application, specifically in the parisneo/lollms-webui repository, affecting versions up to 7.3.0. This vulnerability allows attackers to change a victim's profile picture without their consent, potentially leading to a denial of service by overloading the filesystem with files. Additionally, this flaw can be exploited to perform a stored cross-site scripting (XSS) attack, enabling attackers to execute arbitrary JavaScript in the context of the victim's browser session. The issue is resolved in version 9.3.",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/parisneo/lollms-webui/commit/ed085e6effab2b1e25ba2b00366a16ff67d8551b"
          },
          {
            "url": "https://huntr.com/bounties/2a37ae0c-890a-401a-8f3c-a261f3006290"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2359",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:54.353",
        "lastModified": "2024-06-06T19:15:54.353",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "A vulnerability in the parisneo/lollms-webui version 9.3 allows attackers to bypass intended access restrictions and execute arbitrary code. The issue arises from the application's handling of the `/execute_code` endpoint, which is intended to be blocked from external access by default. However, attackers can exploit the `/update_setting` endpoint, which lacks proper access control, to modify the `host` configuration at runtime. By changing the `host` setting to an attacker-controlled value, the restriction on the `/execute_code` endpoint can be bypassed, leading to remote code execution. This vulnerability is due to improper neutralization of special elements used in an OS command (`Improper Neutralization of Special Elements used in an OS Command`).",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/62144831-8d4b-4cf2-9737-5e559f7bc67e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2360",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:54.570",
        "lastModified": "2024-06-06T19:15:54.570",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "parisneo/lollms-webui is vulnerable to path traversal attacks that can lead to remote code execution due to insufficient sanitization of user-supplied input in the 'Database path' and 'PDF LaTeX path' settings. An attacker can exploit this vulnerability by manipulating these settings to execute arbitrary code on the targeted server. The issue affects the latest version of the software. The vulnerability stems from the application's handling of the 'discussion_db_name' and 'pdf_latex_path' parameters, which do not properly validate file paths, allowing for directory traversal. This vulnerability can also lead to further file exposure and other attack vectors by manipulating the 'discussion_db_name' parameter.",
        "cweIds": [
          {
            "id": "CWE-29",
            "description": "Path Traversal: '\\..\\filename'"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/65d0ef59-a761-4bbd-86fa-dd8e8621082e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2362",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:54.767",
        "lastModified": "2024-06-06T19:15:54.767",
        "baseScore": 9.1,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.2,
        "description": "A path traversal vulnerability exists in the parisneo/lollms-webui version 9.3 on the Windows platform. Due to improper validation of file paths between Windows and Linux environments, an attacker can exploit this vulnerability to delete any file on the system. The issue arises from the lack of adequate sanitization of user-supplied input in the 'del_preset' endpoint, where the application fails to prevent the use of absolute paths or directory traversal sequences ('..'). As a result, an attacker can send a specially crafted request to the 'del_preset' endpoint to delete files outside of the intended directory.",
        "cweIds": [
          {
            "id": "CWE-36",
            "description": "Absolute Path Traversal"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/2433d0a4-9ba0-474b-be1a-6fd5019770ba"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2383",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:54.970",
        "lastModified": "2024-06-06T19:15:54.970",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "A clickjacking vulnerability exists in zenml-io/zenml versions up to and including 0.55.5 due to the application's failure to set appropriate X-Frame-Options or Content-Security-Policy HTTP headers. This vulnerability allows an attacker to embed the application UI within an iframe on a malicious page, potentially leading to unauthorized actions by tricking users into interacting with the interface under the attacker's control. The issue was addressed in version 0.56.3.",
        "cweIds": [
          {
            "id": "CWE-1021",
            "description": "Improper Restriction of Rendered UI Layers or Frames"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zenml-io/zenml/commit/f863fde1269bc355951f8cfc826c0244d88ad5e9"
          },
          {
            "url": "https://huntr.com/bounties/22d26f5a-c0ae-4344-aa7d-08ff5ada3963"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2548",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:55.217",
        "lastModified": "2024-06-06T19:15:55.217",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "A path traversal vulnerability exists in the parisneo/lollms-webui application, specifically within the `lollms_core/lollms/server/endpoints/lollms_binding_files_server.py` and `lollms_core/lollms/security.py` files. Due to inadequate validation of file paths between Windows and Linux environments using `Path(path).is_absolute()`, attackers can exploit this flaw to read any file on the system. This issue affects the latest version of LoLLMs running on the Windows platform. The vulnerability is triggered when an attacker sends a specially crafted request to the `/user_infos/{path:path}` endpoint, allowing the reading of arbitrary files, as demonstrated with the `win.ini` file. The issue has been addressed in version 9.5 of the software.",
        "cweIds": [
          {
            "id": "CWE-36",
            "description": "Absolute Path Traversal"
          }
        ],
        "references": [
          {
            "url": "https://github.com/parisneo/lollms-webui/commit/49b0332e98d42dd5204dda53dee410b160106265"
          },
          {
            "url": "https://huntr.com/bounties/65979513-db0d-46fd-9977-fcd73bcd8a41"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2624",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:55.437",
        "lastModified": "2024-06-06T19:15:55.437",
        "baseScore": 9.4,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.5,
        "description": "A path traversal and arbitrary file upload vulnerability exists in the parisneo/lollms-webui application, specifically within the `@router.get(\"/switch_personal_path\")` endpoint in `./lollms-webui/lollms_core/lollms/server/endpoints/lollms_user.py`. The vulnerability arises due to insufficient sanitization of user-supplied input for the `path` parameter, allowing an attacker to specify arbitrary file system paths. This flaw enables direct arbitrary file uploads, leakage of `personal_data`, and overwriting of configurations in `lollms-webui`->`configs` by exploiting the same named directory in `personal_data`. The issue affects the latest version of the application and is fixed in version 9.4. Successful exploitation could lead to sensitive information disclosure, unauthorized file uploads, and potentially remote code execution by overwriting critical configuration files.",
        "cweIds": [
          {
            "id": "CWE-29",
            "description": "Path Traversal: '\\..\\filename'"
          }
        ],
        "references": [
          {
            "url": "https://github.com/parisneo/lollms-webui/commit/aeba79f3ea934331b8ecd625a58bae6e4f7e7d3f"
          },
          {
            "url": "https://huntr.com/bounties/39e17897-0e92-4473-91c7-f728322191aa"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2928",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:55.680",
        "lastModified": "2024-06-06T19:15:55.680",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "A Local File Inclusion (LFI) vulnerability was identified in mlflow/mlflow, specifically in version 2.9.2, which was fixed in version 2.11.3. This vulnerability arises from the application's failure to properly validate URI fragments for directory traversal sequences such as '../'. An attacker can exploit this flaw by manipulating the fragment part of the URI to read arbitrary files on the local file system, including sensitive files like '/etc/passwd'. The vulnerability is a bypass to a previous patch that only addressed similar manipulation within the URI's query string, highlighting the need for comprehensive validation of all parts of a URI to prevent LFI attacks.",
        "cweIds": [
          {
            "id": "CWE-29",
            "description": "Path Traversal: '\\..\\filename'"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mlflow/mlflow/commit/96f0b573a73d8eedd6735a2ce26e08859527be07"
          },
          {
            "url": "https://huntr.com/bounties/19bf02d7-6393-4a95-b9d0-d6d4d2d8c298"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2965",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:55.897",
        "lastModified": "2024-06-06T19:15:55.897",
        "baseScore": 4.2,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.5,
        "impactScore": 3.6,
        "description": "A Denial-of-Service (DoS) vulnerability exists in the `SitemapLoader` class of the `langchain-ai/langchain` repository, affecting all versions. The `parse_sitemap` method, responsible for parsing sitemaps and extracting URLs, lacks a mechanism to prevent infinite recursion when a sitemap URL refers to the current sitemap itself. This oversight allows for the possibility of an infinite loop, leading to a crash by exceeding the maximum recursion depth in Python. This vulnerability can be exploited to occupy server socket/port resources and crash the Python process, impacting the availability of services relying on this functionality.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/90b0776d-9fa6-4841-aac4-09fde5918cae"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30373",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T19:15:56.167",
        "lastModified": "2024-06-06T19:15:56.167",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Kofax Power PDF JPF File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of JPF files. The issue results from the lack of proper validation of user-supplied data, which can result in a write  past the end of an allocated object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22092.",
        "cweIds": [
          {
            "id": "CWE-787",
            "description": "Out-of-bounds Write"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-557/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32873",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-06T19:15:56.390",
        "lastModified": "2024-06-06T19:15:56.390",
        "baseScore": 3.5,
        "baseSeverity": "LOW",
        "exploitabilityScore": 2.1,
        "impactScore": 1.4,
        "description": "Evmos is the Ethereum Virtual Machine (EVM) Hub on the Cosmos Network. The spendable balance is not updated properly when delegating vested tokens. The issue allows a clawback vesting account to anticipate the release of unvested tokens.  This vulnerability is fixed in 18.0.0.",
        "cweIds": [
          {
            "id": "CWE-682",
            "description": "Incorrect Calculation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/evmos/evmos/commit/b2a09ca66613d8b04decd3f2dcba8e1e77709dcb"
          },
          {
            "url": "https://github.com/evmos/evmos/security/advisories/GHSA-pxv8-qhrh-jc7v"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36730",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-06T19:15:57.840",
        "lastModified": "2024-06-06T19:15:57.840",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Improper input validation in OneFlow-Inc. Oneflow v0.9.1 allows attackers to cause a Denial of Service (DoS) via inputting negative values into the oneflow.zeros/ones parameter.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Redmept1on/1c530e191fb3c76f034c2ea1d11eb821"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36732",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-06T19:15:57.937",
        "lastModified": "2024-06-06T19:15:57.937",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue in OneFlow-Inc. Oneflow v0.9.1 allows attackers to cause a Denial of Service (DoS) when an empty array is processed with oneflow.tensordot.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Redmept1on/3feef7639b2bc7891d0cfda6d932adfd"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36734",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-06T19:15:58.030",
        "lastModified": "2024-06-06T19:15:58.030",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Improper input validation in OneFlow-Inc. Oneflow v0.9.1 allows attackers to cause a Denial of Service (DoS) via inputting a negative value into the dim parameter.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Redmept1on/7420cd59f30defda07cf7bb4bf4a92cd"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36735",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-06T19:15:58.117",
        "lastModified": "2024-06-06T19:15:58.117",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "OneFlow-Inc. Oneflow v0.9.1 does not display an error or warning when the oneflow.eye parameter is floating.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Redmept1on/4998e9b6435448cea07a8b2dbf96eedc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36740",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-06T19:15:58.217",
        "lastModified": "2024-06-06T19:15:58.217",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue in OneFlow-Inc. Oneflow v0.9.1 allows attackers to cause a Denial of Service (DoS) when index as a negative number exceeds the range of size.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Redmept1on/070f5b8b752079c6b761f00f3cab7103"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37153",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-06T19:15:58.403",
        "lastModified": "2024-06-06T19:15:58.403",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Evmos is the Ethereum Virtual Machine (EVM) Hub on the Cosmos Network. There is an issue with how to liquid stake using Safe which itself is a contract. The bug only appears when there is a local state change together with an ICS20 transfer in the same function and uses the contract's balance, that is using the contract address as the sender parameter in an ICS20 transfer using the ICS20 precompile. This is in essence the \"infinite money glitch\" allowing contracts to double the supply of Evmos after each transaction.The issue has been patched in versions >=V18.1.0. ",
        "cweIds": [
          {
            "id": "CWE-670",
            "description": "Always-Incorrect Control Flow Implementation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/evmos/evmos/commit/478b7a62e7af57a70cf3a01126c7f5a89bee69d7"
          },
          {
            "url": "https://github.com/evmos/evmos/security/advisories/GHSA-xgr7-jgq3-mhmc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37154",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-06T19:15:58.683",
        "lastModified": "2024-06-06T19:15:58.683",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Evmos is the Ethereum Virtual Machine (EVM) Hub on the Cosmos Network. Users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via `ClawbackVestingAccount`. This affects 18.1.0 and earlier.",
        "cweIds": [
          {
            "id": "CWE-285",
            "description": "Improper Authorization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37364",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-06T19:15:58.900",
        "lastModified": "2024-06-06T19:15:58.900",
        "baseScore": 6.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.9,
        "impactScore": 5.9,
        "description": "Ariane Allegro Scenario Player through 2024-03-05, when Ariane Duo kiosk mode is used, allows physically proximate attackers to obtain sensitive information (such as hotel invoice content with PII), and potentially create unauthorized room keys, by entering a guest-search quote character and then accessing the underlying Windows OS.",
        "cweIds": null,
        "references": [
          {
            "url": "https://news.ycombinator.com/item?id=40582475"
          },
          {
            "url": "https://www.pentagrid.ch/en/blog/ariane-allegro-hotel-check-in-terminal-kios-escape/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3095",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:59.160",
        "lastModified": "2024-06-06T19:15:59.160",
        "baseScore": 4.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.4,
        "impactScore": 4.0,
        "description": "A Server-Side Request Forgery (SSRF) vulnerability exists in the Web Research Retriever component of langchain-ai/langchain version 0.1.5. The vulnerability arises because the Web Research Retriever does not restrict requests to remote internet addresses, allowing it to reach local addresses. This flaw enables attackers to execute port scans, access local services, and in some scenarios, read instance metadata from cloud environments. The vulnerability is particularly concerning as it can be exploited to abuse the Web Explorer server as a proxy for web attacks on third parties and interact with servers in the local network, including reading their response data. This could potentially lead to arbitrary code execution, depending on the nature of the local services. The vulnerability is limited to GET requests, as POST requests are not possible, but the impact on confidentiality, integrity, and availability is significant due to the potential for stolen credentials and state-changing interactions with internal APIs.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/e62d4895-2901-405b-9559-38276b6a5273"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3099",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:59.393",
        "lastModified": "2024-06-06T19:15:59.393",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "A vulnerability in mlflow/mlflow version 2.11.1 allows attackers to create multiple models with the same name by exploiting URL encoding. This flaw can lead to Denial of Service (DoS) as an authenticated user might not be able to use the intended model, as it will open a different model each time. Additionally, an attacker can exploit this vulnerability to perform data model poisoning by creating a model with the same name, potentially causing an authenticated user to become a victim by using the poisoned model. The issue stems from inadequate validation of model names, allowing for the creation of models with URL-encoded names that are treated as distinct from their URL-decoded counterparts.",
        "cweIds": [
          {
            "id": "CWE-475",
            "description": "Undefined Behavior for Input to API"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/8d96374a-ce8d-480e-9cb0-0a7e5165c24a"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3102",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:59.667",
        "lastModified": "2024-06-06T19:15:59.667",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "A JSON Injection vulnerability exists in the `mintplex-labs/anything-llm` application, specifically within the username parameter during the login process at the `/api/request-token` endpoint. The vulnerability arises from improper handling of values, allowing attackers to perform brute force attacks without prior knowledge of the username. Once the password is known, attackers can conduct blind attacks to ascertain the full username, significantly compromising system security.",
        "cweIds": [
          {
            "id": "CWE-229",
            "description": "Improper Handling of Values"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/2374939ffb551ab2929d7f9d5827fe6597fa8caa"
          },
          {
            "url": "https://huntr.com/bounties/8af4650d-5955-44a4-86b4-d08e1c862b49"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3110",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:15:59.900",
        "lastModified": "2024-06-06T19:15:59.900",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.2,
        "description": "A stored Cross-Site Scripting (XSS) vulnerability exists in the mintplex-labs/anything-llm application, affecting versions up to and including the latest before 1.0.0. The vulnerability arises from the application's failure to properly sanitize and validate user-supplied URLs before embedding them into the application UI as external links with custom icons. Specifically, the application does not prevent the inclusion of 'javascript:' protocol payloads in URLs, which can be exploited by a user with manager role to execute arbitrary JavaScript code in the context of another user's session. This flaw can be leveraged to steal the admin's authorization token by crafting malicious URLs that, when clicked by the admin, send the token to an attacker-controlled server. The attacker can then use this token to perform unauthorized actions, escalate privileges to admin, or directly take over the admin account. The vulnerability is triggered when the malicious link is opened in a new tab using either the CTRL + left mouse button click or the mouse scroll wheel click, or in some non-updated versions of modern browsers, by directly clicking on the link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/49f30e051c9f6e28977d57d0e5f49c1294094e41"
          },
          {
            "url": "https://huntr.com/bounties/c2895978-364d-412d-8825-c806606bcb85"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3149",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:00.130",
        "lastModified": "2024-06-06T19:16:00.130",
        "baseScore": 9.6,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.1,
        "impactScore": 5.8,
        "description": "A Server-Side Request Forgery (SSRF) vulnerability exists in the upload link feature of mintplex-labs/anything-llm. This feature, intended for users with manager or admin roles, processes uploaded links through an internal Collector API using a headless browser. An attacker can exploit this by hosting a malicious website and using it to perform actions such as internal port scanning, accessing internal web applications not exposed externally, and interacting with the Collector API. This interaction can lead to unauthorized actions such as arbitrary file deletion and limited Local File Inclusion (LFI), including accessing NGINX access logs which may contain sensitive information.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/f4088d9348fa86dcebe9f97a18d39c0a6e92f15e"
          },
          {
            "url": "https://huntr.com/bounties/b230d76b-ae2d-440e-a25b-94ffaa7c4ff1"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3150",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:00.350",
        "lastModified": "2024-06-06T19:16:00.350",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "In mintplex-labs/anything-llm, a vulnerability exists in the thread update process that allows users with Default or Manager roles to escalate their privileges to Administrator. The issue arises from improper input validation when handling HTTP POST requests to the endpoint `/workspace/:slug/thread/:threadSlug/update`. Specifically, the application fails to validate or check user input before passing it to the `workspace_thread` Prisma model for execution. This oversight allows attackers to craft a Prisma relation query operation that manipulates the `users` model to change a user's role to admin. Successful exploitation grants attackers the highest level of user privileges, enabling them to see and perform all actions within the system.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/200bd7f0615347ed2efc07903d510e5a208b0afc"
          },
          {
            "url": "https://huntr.com/bounties/745f5c80-14ea-4055-9f15-a066ae93e5a3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3153",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:00.600",
        "lastModified": "2024-06-06T19:16:00.600",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "mintplex-labs/anything-llm is affected by an uncontrolled resource consumption vulnerability in its upload file endpoint, leading to a denial of service (DOS) condition. Specifically, the server can be shut down by sending an invalid upload request. An attacker with the ability to upload documents can exploit this vulnerability to cause a DOS condition by manipulating the upload request.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/b8d37d9f43af2facab4c51146a46229a58cb53d9"
          },
          {
            "url": "https://huntr.com/bounties/7bb08e7b-fd99-411e-99bc-07f81f474635"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3166",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:00.817",
        "lastModified": "2024-06-06T19:16:00.817",
        "baseScore": 3.4,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.6,
        "impactScore": 1.4,
        "description": "A Cross-Site Scripting (XSS) vulnerability exists in mintplex-labs/anything-llm, affecting both the desktop application version 1.2.0 and the latest version of the web application. The vulnerability arises from the application's feature to fetch and embed content from websites into workspaces, which can be exploited to execute arbitrary JavaScript code. In the desktop application, this flaw can be escalated to Remote Code Execution (RCE) due to insecure application settings, specifically the enabling of 'nodeIntegration' and the disabling of 'contextIsolation' in Electron's webPreferences. The issue has been addressed in version 1.4.2 of the desktop application.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/fa27103d032c58904c49b92ee13fabc19a20a5ce"
          },
          {
            "url": "https://huntr.com/bounties/af288bd3-8824-4216-a294-ae9fb444e5db"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3234",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:01.040",
        "lastModified": "2024-06-06T19:16:01.040",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The gaizhenbiao/chuanhuchatgpt application is vulnerable to a path traversal attack due to its use of an outdated gradio component. The application is designed to restrict user access to resources within the `web_assets` folder. However, the outdated version of gradio it employs is susceptible to path traversal, as identified in CVE-2023-51449. This vulnerability allows unauthorized users to bypass the intended restrictions and access sensitive files, such as `config.json`, which contains API keys. The issue affects the latest version of chuanhuchatgpt prior to the fixed version released on 20240305.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/gaizhenbiao/chuanhuchatgpt/commit/6b8f7db347b390f6f8bd07ea2a4ef01a47382f00"
          },
          {
            "url": "https://huntr.com/bounties/277e3ff0-5878-4809-a4b9-73cdbb70dc9f"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3322",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:01.247",
        "lastModified": "2024-06-06T19:16:01.247",
        "baseScore": 8.4,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.5,
        "impactScore": 5.9,
        "description": "A path traversal vulnerability exists in the 'cyber_security/codeguard' native personality of the parisneo/lollms-webui, affecting versions up to 9.5. The vulnerability arises from the improper limitation of a pathname to a restricted directory in the 'process_folder' function within 'lollms-webui/zoos/personalities_zoo/cyber_security/codeguard/scripts/processor.py'. Specifically, the function fails to properly sanitize user-supplied input for the 'code_folder_path', allowing an attacker to specify arbitrary paths using '../' or absolute paths. This flaw leads to arbitrary file read and overwrite capabilities in specified directories without limitations, posing a significant risk of sensitive information disclosure and unauthorized file manipulation.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/parisneo/lollms-webui/commit/1e17df01e01d4d33599db2afaafe91d90b6f0189"
          },
          {
            "url": "https://huntr.com/bounties/e0822362-033a-4a71-b1dc-d803f03bd427"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3402",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:01.450",
        "lastModified": "2024-06-06T19:16:01.450",
        "baseScore": 6.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 4.0,
        "description": "A stored Cross-Site Scripting (XSS) vulnerability existed in version (20240121) of gaizhenbiao/chuanhuchatgpt due to inadequate sanitization and validation of model output data. Despite user-input validation efforts, the application fails to properly sanitize or validate the output from the model, allowing for the injection and execution of malicious JavaScript code within the context of a user's browser. This vulnerability can lead to the execution of arbitrary JavaScript code in the context of other users' browsers, potentially resulting in the hijacking of victims' browsers.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/389570c4-0bf2-4bc3-84f5-2e7afdba8ed1"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3404",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:01.673",
        "lastModified": "2024-06-06T19:16:01.673",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "In gaizhenbiao/chuanhuchatgpt, specifically the version tagged as 20240121, there exists a vulnerability due to improper access control mechanisms. This flaw allows an authenticated attacker to bypass intended access restrictions and read the `history` files of other users, potentially leading to unauthorized access to sensitive information. The vulnerability is present in the application's handling of access control for the `history` path, where no adequate mechanism is in place to prevent an authenticated user from accessing another user's chat history files. This issue poses a significant risk as it could allow attackers to obtain sensitive information from the chat history of other users.",
        "cweIds": [
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/ed32fc32-cb8f-4fbd-8209-cc835d279699"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3408",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:01.890",
        "lastModified": "2024-06-06T19:16:01.890",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "man-group/dtale version 3.10.0 is vulnerable to an authentication bypass and remote code execution (RCE) due to improper input validation. The vulnerability arises from a hardcoded `SECRET_KEY` in the flask configuration, allowing attackers to forge a session cookie if authentication is enabled. Additionally, the application fails to properly restrict custom filter queries, enabling attackers to execute arbitrary code on the server by bypassing the restriction on the `/update-settings` endpoint, even when `enable_custom_filters` is not enabled. This vulnerability allows attackers to bypass authentication mechanisms and execute remote code on the server.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/57a06666-ff85-4577-af19-f3dfb7b02f91"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3429",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:02.103",
        "lastModified": "2024-06-06T19:16:02.103",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "A path traversal vulnerability exists in the parisneo/lollms application, specifically within the `sanitize_path_from_endpoint` and `sanitize_path` functions in `lollms_core\\lollms\\security.py`. This vulnerability allows for arbitrary file reading when the application is running on Windows. The issue arises due to insufficient sanitization of user-supplied input, enabling attackers to bypass the path traversal protection mechanisms by crafting malicious input. Successful exploitation could lead to unauthorized access to sensitive files, information disclosure, and potentially a denial of service (DoS) condition by including numerous large or resource-intensive files. This vulnerability affects the latest version prior to 9.6.",
        "cweIds": [
          {
            "id": "CWE-29",
            "description": "Path Traversal: '\\..\\filename'"
          }
        ],
        "references": [
          {
            "url": "https://github.com/parisneo/lollms/commit/f4424cfc3d6dfb3ad5ac17dd46801efe784933e9"
          },
          {
            "url": "https://huntr.com/bounties/fd8f50c8-17f0-40be-a2c6-bb8d80f7c409"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4320",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:02.453",
        "lastModified": "2024-06-06T19:16:02.453",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "A remote code execution (RCE) vulnerability exists in the '/install_extension' endpoint of the parisneo/lollms-webui application, specifically within the `@router.post(\"/install_extension\")` route handler. The vulnerability arises due to improper handling of the `name` parameter in the `ExtensionBuilder().build_extension()` method, which allows for local file inclusion (LFI) leading to arbitrary code execution. An attacker can exploit this vulnerability by crafting a malicious `name` parameter that causes the server to load and execute a `__init__.py` file from an arbitrary location, such as the upload directory for discussions. This vulnerability affects the latest version of parisneo/lollms-webui and can lead to remote code execution without requiring user interaction, especially when the application is exposed to an external endpoint or operated in headless mode.",
        "cweIds": [
          {
            "id": "CWE-29",
            "description": "Path Traversal: '\\..\\filename'"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/d6564f04-0f59-4686-beb2-11659342279b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4851",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:02.800",
        "lastModified": "2024-06-06T19:16:02.800",
        "baseScore": 7.7,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.1,
        "impactScore": 4.0,
        "description": "A Server-Side Request Forgery (SSRF) vulnerability exists in the stangirard/quivr application, version 0.0.204, which allows attackers to access internal networks. The vulnerability is present in the crawl endpoint where the 'url' parameter can be manipulated to send HTTP requests to arbitrary URLs, thereby facilitating SSRF attacks. The affected code is located in the backend/routes/crawl_routes.py file, specifically within the crawl_endpoint function. This issue could allow attackers to interact with internal services that are accessible from the server hosting the application.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/b6011986-954a-47da-a60c-fc7aebc8005d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4881",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:03.063",
        "lastModified": "2024-06-06T19:16:03.063",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.",
        "cweIds": [
          {
            "id": "CWE-36",
            "description": "Absolute Path Traversal"
          }
        ],
        "references": [
          {
            "url": "https://github.com/parisneo/lollms/commit/95ad36eeffc6a6be3e3f35ed35a384d768f0ecf6"
          },
          {
            "url": "https://huntr.com/bounties/94f7f901-80b0-4cf5-b545-ac5c1e7635e9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4888",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:03.397",
        "lastModified": "2024-06-06T19:16:03.397",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 5.2,
        "description": "BerriAI's litellm, in its latest version, is vulnerable to arbitrary file deletion due to improper input validation on the `/audio/transcriptions` endpoint. An attacker can exploit this vulnerability by sending a specially crafted request that includes a file path to the server, which then deletes the specified file without proper authorization or validation. This vulnerability is present in the code where `os.remove(file.filename)` is used to delete a file, allowing any user to delete critical files on the server such as SSH keys, SQLite databases, or configuration files. ",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/48461d89-cf13-4ad3-a43e-0d37da08fc6c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4890",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:03.630",
        "lastModified": "2024-06-06T19:16:03.630",
        "baseScore": 4.9,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 3.6,
        "description": "A blind SQL injection vulnerability exists in the berriai/litellm application, specifically within the '/team/update' process. The vulnerability arises due to the improper handling of the 'user_id' parameter in the raw SQL query used for deleting users. An attacker can exploit this vulnerability by injecting malicious SQL commands through the 'user_id' parameter, leading to potential unauthorized access to sensitive information such as API keys, user information, and tokens stored in the database. The affected version is 1.27.14.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/a4f6d357-5b44-4e00-9cac-f1cc351211d2"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5124",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:03.863",
        "lastModified": "2024-06-06T19:16:03.863",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "A timing attack vulnerability exists in the gaizhenbiao/chuanhuchatgpt repository, specifically within the password comparison logic. The vulnerability is present in version 20240310 of the software, where passwords are compared using the '=' operator in Python. This method of comparison allows an attacker to guess passwords based on the timing of each character's comparison. The issue arises from the code segment that checks a password for a particular username, which can lead to the exposure of sensitive information to an unauthorized actor. An attacker exploiting this vulnerability could potentially guess user passwords, compromising the security of the system.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/e85ec077-930a-4597-975f-9341d2805641"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5126",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:04.090",
        "lastModified": "2024-06-06T19:16:04.090",
        "baseScore": 7.6,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 4.7,
        "description": "An improper access control vulnerability exists in the lunary-ai/lunary repository, specifically within the versions.patch functionality for updating prompts. Affected versions include 1.2.2 up to but not including 1.2.25. The vulnerability allows unauthorized users to update prompt details due to insufficient access control checks. This issue was addressed and fixed in version 1.2.25.",
        "cweIds": [
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/b7bd3a830a0f47ba07d0fd57bf78c4dd8a216297"
          },
          {
            "url": "https://huntr.com/bounties/8e7e1267-ea6c-4789-b9dc-3410dfac6ec6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5128",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:04.323",
        "lastModified": "2024-06-06T19:16:04.323",
        "baseScore": 9.4,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.5,
        "description": "An Insecure Direct Object Reference (IDOR) vulnerability was identified in lunary-ai/lunary, affecting versions up to and including 1.2.2. This vulnerability allows unauthorized users to view, update, or delete any dataset_prompt or dataset_prompt_variation within any dataset or project. The issue stems from improper access control checks in the dataset management endpoints, where direct references to object IDs are not adequately secured against unauthorized access. This vulnerability was fixed in version 1.2.25.",
        "cweIds": [
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/0755dde1afc2a74ec23b55eee03e4416916cf48f"
          },
          {
            "url": "https://huntr.com/bounties/11248071-11b2-42d9-991a-504bf2044332"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5129",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:04.583",
        "lastModified": "2024-06-06T19:16:04.583",
        "baseScore": 8.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.2,
        "description": "A Privilege Escalation Vulnerability exists in lunary-ai/lunary version 1.2.2, where any user can delete any datasets due to missing authorization checks. The vulnerability is present in the dataset deletion functionality, where the application fails to verify if the user requesting the deletion has the appropriate permissions. This allows unauthorized users to send a DELETE request to the server and delete any dataset by specifying its ID. The issue is located in the datasets.delete function within the datasets index file.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/14078c1d2b8766075bf655f187ece24c7a787776"
          },
          {
            "url": "https://huntr.com/bounties/a6c0deb3-6a4c-4188-8aaa-9e6207f82f44"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5130",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:04.813",
        "lastModified": "2024-06-06T19:16:04.813",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "An Incorrect Authorization vulnerability exists in lunary-ai/lunary versions up to and including 1.2.2, which allows unauthenticated users to delete any dataset. The vulnerability is due to the lack of proper authorization checks in the dataset deletion endpoint. Specifically, the endpoint does not verify if the provided project ID belongs to the current user, thereby allowing any dataset to be deleted without proper authentication. This issue was fixed in version 1.2.8.",
        "cweIds": [
          {
            "id": "CWE-863",
            "description": "Incorrect Authorization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/14078c1d2b8766075bf655f187ece24c7a787776"
          },
          {
            "url": "https://huntr.com/bounties/e81a9871-308d-4628-9726-af66643a16fe"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5131",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:05.060",
        "lastModified": "2024-06-06T19:16:05.060",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "An Improper Access Control vulnerability exists in the lunary-ai/lunary repository, affecting versions up to and including 1.2.2. The vulnerability allows unauthorized users to view any prompts in any projects by supplying a specific prompt ID to an endpoint that does not adequately verify the ownership of the prompt ID. This issue was fixed in version 1.2.25.",
        "cweIds": [
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/ddfd497afd017a6946c582a1a806687fdac888bf"
          },
          {
            "url": "https://huntr.com/bounties/52c129f2-114e-492f-aee8-32c78f75ac4f"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5132",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:05.300",
        "lastModified": "2024-06-06T19:16:05.300",
        "baseScore": 9.1,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.2,
        "description": "In lunary-ai/lunary version 1.2.2, a business logic error allows users to bypass the intended limitations on team member invitations and additions, regardless of their subscription plan. The vulnerability arises due to the lack of validation against the predefined member limits in the SEAT_ALLOWANCE constants during the invitation and joining processes. This issue enables users on any plan, including the free plan, to invite and add more members to a team than allowed, effectively circumventing the system's subscription model. The flaw is located in the backend's handling of user invitations and additions, specifically in the /api/v1/auth/index.ts and /api/v1/users.ts endpoints, where the system fails to check the current number of team members against the allowed limits before proceeding with the invitation and addition operations.",
        "cweIds": null,
        "references": [
          {
            "url": "https://huntr.com/bounties/1a2d462f-ce25-410c-80f1-10546f963d7c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5133",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:05.557",
        "lastModified": "2024-06-06T19:16:05.557",
        "baseScore": 9.1,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.2,
        "description": "In lunary-ai/lunary version 1.2.4, an account takeover vulnerability exists due to the exposure of password recovery tokens in API responses. Specifically, when a user initiates the password reset process, the recovery token is included in the response of the `GET /v1/users/me/org` endpoint, which lists all users in a team. This allows any authenticated user to capture the recovery token of another user and subsequently change that user's password without consent, effectively taking over the account. The issue lies in the inclusion of the `recovery_token` attribute in the users object returned by the API.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/6057598d-93c4-4a94-bb80-5bd508013c5b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5186",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:05.860",
        "lastModified": "2024-06-06T19:16:05.860",
        "baseScore": 8.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.7,
        "description": "A Server-Side Request Forgery (SSRF) vulnerability exists in the file upload section of imartinez/privategpt version 0.5.0. This vulnerability allows attackers to send crafted requests that could result in unauthorized access to the local network and potentially sensitive information. Specifically, by manipulating the 'path' parameter in a file upload request, an attacker can cause the application to make arbitrary requests to internal services, including the AWS metadata endpoint. This issue could lead to the exposure of internal servers and sensitive data.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/5f421645-3546-4a67-a421-ee1bc4b6e3a3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5187",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:06.100",
        "lastModified": "2024-06-06T19:16:06.100",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "A vulnerability in the `download_model_with_test_data` function of the onnx/onnx framework, version 1.16.0, allows for arbitrary file overwrite due to inadequate prevention of path traversal attacks in malicious tar files. This vulnerability enables attackers to overwrite any file on the system, potentially leading to remote code execution, deletion of system, personal, or application files, thus impacting the integrity and availability of the system. The issue arises from the function's handling of tar file extraction without performing security checks on the paths within the tar file, as demonstrated by the ability to overwrite the `/home/kali/.ssh/authorized_keys` file by specifying an absolute path in the malicious tar file.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/50235ebd-3410-4ada-b064-1a648e11237e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5206",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:06.363",
        "lastModified": "2024-06-06T19:16:06.363",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 3.6,
        "description": "A sensitive data leakage vulnerability was identified in scikit-learn's TfidfVectorizer, specifically in versions up to and including 1.4.1.post1, which was fixed in version 1.5.0. The vulnerability arises from the unexpected storage of all tokens present in the training data within the `stop_words_` attribute, rather than only storing the subset of tokens required for the TF-IDF technique to function. This behavior leads to the potential leakage of sensitive information, as the `stop_words_` attribute could contain tokens that were meant to be discarded and not stored, such as passwords or keys. The impact of this vulnerability varies based on the nature of the data being processed by the vectorizer.",
        "cweIds": [
          {
            "id": "CWE-921",
            "description": "Storage of Sensitive Data in a Mechanism without Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/scikit-learn/scikit-learn/commit/70ca21f106b603b611da73012c9ade7cd8e438b8"
          },
          {
            "url": "https://huntr.com/bounties/14bc0917-a85b-4106-a170-d09d5191517c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5225",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:06.673",
        "lastModified": "2024-06-06T19:16:06.673",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "An SQL Injection vulnerability exists in the berriai/litellm repository, specifically within the `/global/spend/logs` endpoint. The vulnerability arises due to improper neutralization of special elements used in an SQL command. The affected code constructs an SQL query by concatenating an unvalidated `api_key` parameter directly into the query, making it susceptible to SQL Injection if the `api_key` contains malicious data. This issue affects the latest version of the repository. Successful exploitation of this vulnerability could lead to unauthorized access, data manipulation, exposure of confidential information, and denial of service (DoS).",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/491e4884-0306-4cd4-8fe2-9a19de33bf5c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5248",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:06.917",
        "lastModified": "2024-06-06T19:16:06.917",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "In lunary-ai/lunary version 1.2.5, an improper access control vulnerability exists due to a missing permission check in the `GET /v1/users/me/org` endpoint. The platform's role definitions restrict the `Prompt Editor` role to prompt management and project viewing/listing capabilities, explicitly excluding access to user information. However, the endpoint fails to enforce this restriction, allowing users with the `Prompt Editor` role to access the full list of users in the organization. This vulnerability allows unauthorized access to sensitive user information, violating the intended access controls.",
        "cweIds": [
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/4ec75087-5630-4813-952b-88ccabe6d117"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5278",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:07.310",
        "lastModified": "2024-06-06T19:16:07.310",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "gaizhenbiao/chuanhuchatgpt is vulnerable to an unrestricted file upload vulnerability due to insufficient validation of uploaded file types in its `/upload` endpoint. Specifically, the `handle_file_upload` function does not sanitize or validate the file extension or content type of uploaded files, allowing attackers to upload files with arbitrary extensions, including HTML files containing XSS payloads and Python files. This vulnerability, present in the latest version as of 20240310, could lead to stored XSS attacks and potentially result in remote code execution (RCE) on the server hosting the application.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/ea821d86-941b-40f3-a857-91f758848e05"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5304",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T19:16:07.540",
        "lastModified": "2024-06-06T19:16:07.540",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Kofax Power PDF TGA File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of TGA files. The issue results from the lack of proper validation of user-supplied data, which can result in a write  past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22920.",
        "cweIds": [
          {
            "id": "CWE-787",
            "description": "Out-of-bounds Write"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-549/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5305",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T19:16:07.863",
        "lastModified": "2024-06-06T19:16:07.863",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Kofax Power PDF PDF File Parsing Stack-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of PDF files. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22921.",
        "cweIds": [
          {
            "id": "CWE-121",
            "description": "Stack-based Buffer Overflow"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-550/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5306",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T19:16:08.097",
        "lastModified": "2024-06-06T19:16:08.097",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Kofax Power PDF PDF File Parsing Memory Corruption Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the parsing of PDF files. The issue results from the lack of proper validation of user-supplied data, which can result in a memory corruption condition. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22930.",
        "cweIds": [
          {
            "id": "CWE-119",
            "description": "Improper Restriction of Operations within the Bounds of a Memory Buffer"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-551/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5307",
        "sourceIdentifier": "zdi-disclosures@trendmicro.com",
        "published": "2024-06-06T19:16:08.350",
        "lastModified": "2024-06-06T19:16:08.350",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "Kofax Power PDF AcroForm Annotation Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\nThe specific flaw exists within the handling of Annotation objects in AcroForms. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-22933.",
        "cweIds": [
          {
            "id": "CWE-125",
            "description": "Out-of-bounds Read"
          }
        ],
        "references": [
          {
            "url": "https://www.zerodayinitiative.com/advisories/ZDI-24-552/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5328",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:08.627",
        "lastModified": "2024-06-06T19:16:08.627",
        "baseScore": 8.6,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.0,
        "description": "A Server-Side Request Forgery (SSRF) vulnerability exists in the lunary-ai/lunary application, specifically within the endpoint '/auth/saml/tto/download-idp-xml'. The vulnerability arises due to the application's failure to validate user-supplied URLs before using them in server-side requests. An attacker can exploit this vulnerability by sending a specially crafted request to the affected endpoint, allowing them to make unauthorized requests to internal or external resources. This could lead to the disclosure of sensitive information, service disruption, or further attacks against the network infrastructure. The issue affects the latest version of the application as of the report.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/80b09757-d9a0-44d1-932f-2461fc8fec69"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5478",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:08.933",
        "lastModified": "2024-06-06T19:16:08.933",
        "baseScore": 7.4,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 4.0,
        "description": "A Cross-site Scripting (XSS) vulnerability exists in the SAML metadata endpoint `/auth/saml/${org?.id}/metadata` of lunary-ai/lunary version 1.2.7. The vulnerability arises due to the application's failure to escape or validate the `orgId` parameter supplied by the user before incorporating it into the generated response. Specifically, the endpoint generates XML responses for SAML metadata, where the `orgId` parameter is directly embedded into the XML structure without proper sanitization or validation. This flaw allows an attacker to inject arbitrary JavaScript code into the generated SAML metadata page, leading to potential theft of user cookies or authentication tokens.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/e899f496-d493-4c06-b596-cb0a88ad451b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5480",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:09.177",
        "lastModified": "2024-06-06T19:16:09.177",
        "baseScore": 10.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 6.0,
        "description": "A vulnerability in the PyTorch's torch.distributed.rpc framework, specifically in versions prior to 2.2.2, allows for remote code execution (RCE). The framework, which is used in distributed training scenarios, does not properly verify the functions being called during RPC (Remote Procedure Call) operations. This oversight permits attackers to execute arbitrary commands by leveraging built-in Python functions such as eval during multi-cpu RPC communication. The vulnerability arises from the lack of restriction on function calls when a worker node serializes and sends a PythonUDF (User Defined Function) to the master node, which then deserializes and executes the function without validation. This flaw can be exploited to compromise master nodes initiating distributed training, potentially leading to the theft of sensitive AI-related data.",
        "cweIds": [
          {
            "id": "CWE-77",
            "description": "Improper Neutralization of Special Elements used in a Command ('Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/39811836-c5b3-4999-831e-46fee8fcade3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5550",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:09.473",
        "lastModified": "2024-06-06T19:16:09.473",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "In h2oai/h2o-3 version 3.40.0.4, an exposure of sensitive information vulnerability exists due to an arbitrary system path lookup feature. This vulnerability allows any remote user to view full paths in the entire file system where h2o-3 is hosted. Specifically, the issue resides in the Typeahead API call, which when requested with a typeahead lookup of '/', exposes the root filesystem including directories such as /home, /usr, /bin, among others. This vulnerability could allow attackers to explore the entire filesystem, and when combined with a Local File Inclusion (LFI) vulnerability, could make exploitation of the server trivial.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/e76372c2-39be-4984-a7c8-7048a75a25dc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5552",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-06T19:16:09.697",
        "lastModified": "2024-06-06T19:16:09.697",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "kubeflow/kubeflow is vulnerable to a Regular Expression Denial of Service (ReDoS) attack due to inefficient regular expression complexity in its email validation mechanism. An attacker can remotely exploit this vulnerability without authentication by providing specially crafted input that causes the application to consume an excessive amount of CPU resources. This vulnerability affects the latest version of kubeflow/kubeflow, specifically within the centraldashboard-angular backend component. The impact of exploiting this vulnerability includes resource exhaustion, and service disruption.",
        "cweIds": [
          {
            "id": "CWE-1333",
            "description": "Inefficient Regular Expression Complexity"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/0c1d6432-f385-4c54-beea-9f8c677def5b"
          }
        ]
      }
    }
  ]
}