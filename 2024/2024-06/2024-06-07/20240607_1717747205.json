{
  "totalResults": 12,
  "datePublished": "2024-06-07T17:00:05.585859Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2023-6491",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-07T06:15:09.320",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Strong Testimonials plugin for WordPress is vulnerable to unauthorized modification of data due to an improper capability check on the wpmtst_save_view_sticky function in all versions up to, and including, 3.1.12. This makes it possible for authenticated attackers, with contributor access and above, to modify favorite views.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3097409/strong-testimonials/tags/3.1.13/admin/views.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/c3277d93-4f47-445b-a193-ff990b55d054?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3288",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-07T06:15:10.837",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Logo Slider  WordPress plugin before 4.0.0 does not validate and escape some of its Slider Settings before outputting them back in attributes, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/4ef99f54-68df-4353-8fc0-9b09ac0df7ba/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3592",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-07T06:15:10.960",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": 9.9,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.1,
        "impactScore": 6.0,
        "description": "The Quiz And Survey Master – Best Quiz, Exam and Survey Plugin for WordPress plugin for WordPress is vulnerable to SQL Injection via the 'question_id' parameter in all versions up to, and including, 9.0.1 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3097878/quiz-master-next/trunk/php/admin/options-page-questions-tab.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/fc085413-db43-43e3-9b60-aeb341eed4e1?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4042",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-07T06:15:11.240",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel – Combo Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'class' attribute of the menu-wrap-item block in all versions up to, and including, 2.2.80 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3084503/post-grid/tags/2.2.81/includes/blocks/menu-wrap-item/index.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/55e6eb58-79e2-4404-887a-0392ce7914aa?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4354",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-07T06:15:11.500",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The TablePress – Tables in WordPress made easy plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 2.3 via the get_files_to_import() function. This makes it possible for authenticated attackers, with author-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services. Due to the complex nature of protecting against DNS rebind attacks in WordPress software, we settled on the developer simply restricting the usage of the URL import functionality to just administrators. While this is not optimal, we feel this poses a minimal risk to most site owners and ideally WordPress core would correct this issue in wp_safe_remote_get() and other functions.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/tablepress/trunk/classes/class-import.php#L125"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/tablepress/trunk/classes/class-import.php#L141"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3097113%40tablepress&new=3097113%40tablepress&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.clear-gate.com/blog/ssrf-with-dns-rebinding-2/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/879384eb-bfea-4667-a7de-9f723dbea74b?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4620",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-07T06:15:11.763",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/dc34dc2d-d5a1-4e28-8507-33f659ead647/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4621",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-07T06:15:11.840",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/33a366d9-6c81-4957-a101-768487aae735/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4756",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-07T06:15:11.920",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/ce4688b6-6713-43b5-aa63-8a3b036bd332/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5003",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-07T06:15:12.000",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WP Stacker WordPress plugin through 1.8.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/1d7d0372-bbc5-40b2-a668-253c819415c4/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4451",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-07T07:15:46.437",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Colibri Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's colibri_video_player shortcode in all versions up to, and including, 1.0.276 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3097694/colibri-page-builder/trunk/extend-builder/shortcodes/video.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0afd981e-3ae8-4450-9750-23ff6fe612dc?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4488",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-07T07:15:47.707",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Royal Elementor Addons and Templates for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘inline_list’ parameter in versions up to, and including, 1.3.976 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/royal-elementor-addons/trunk/modules/form-builder/widgets/wpr-form-builder.php#L3238"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3097775/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/cb0ac434-7e85-44d4-b21e-df462f63cd9c?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4489",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-07T07:15:47.970",
        "lastModified": "2024-06-07T14:56:05.647",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Royal Elementor Addons and Templates plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘custom_upload_mimes’ function in versions up to, and including, 1.3.976 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/royal-elementor-addons/tags/1.3.973/admin/templates-kit.php#L896"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3097775/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/57bf222b-5f49-46e2-be84-3e6444807096?source=cve"
          }
        ]
      }
    }
  ]
}