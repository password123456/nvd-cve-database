{
  "totalResults": 7,
  "datePublished": "2024-06-24T17:00:04.722676Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-4899",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-24T06:15:11.307",
        "lastModified": "2024-06-24T12:57:36.513",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The SEOPress  WordPress plugin before 7.8 does not sanitise and escape some of its Post settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/15346ae9-9a29-4968-a6a9-81d1116ac448/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4900",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-24T06:15:11.423",
        "lastModified": "2024-06-24T12:57:36.513",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The SEOPress  WordPress plugin before 7.8 does not validate and escape one of its Post settings, which could allow contributor and above role to perform Open redirect attacks against any user viewing a malicious post",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/a56ad272-e2ed-4064-9b5d-114a834dd8b3/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-24550",
        "sourceIdentifier": "vulnerability@ncsc.ch",
        "published": "2024-06-24T07:15:13.580",
        "lastModified": "2024-06-24T12:57:36.513",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A security vulnerability has been identified in Bludit, allowing attackers with knowledge of the API token to upload arbitrary files through the File API which leads to arbitrary code execution on the server. This vulnerability arises from improper handling of file uploads, enabling malicious actors to upload and execute PHP files.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          },
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          },
          {
            "id": "CWE-77",
            "description": "Improper Neutralization of Special Elements used in a Command ('Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://www.redguard.ch/blog/2024/06/20/security-advisory-bludit/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-24551",
        "sourceIdentifier": "vulnerability@ncsc.ch",
        "published": "2024-06-24T07:15:14.760",
        "lastModified": "2024-06-24T12:57:36.513",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A security vulnerability has been identified in Bludit, allowing authenticated attackers to execute arbitrary code through the Image API. This vulnerability arises from improper handling of file uploads, enabling malicious actors to upload and execute PHP files.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          },
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          },
          {
            "id": "CWE-77",
            "description": "Improper Neutralization of Special Elements used in a Command ('Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://www.redguard.ch/blog/2024/06/20/security-advisory-bludit/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-24552",
        "sourceIdentifier": "vulnerability@ncsc.ch",
        "published": "2024-06-24T07:15:14.903",
        "lastModified": "2024-06-24T12:57:36.513",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A session fixation vulnerability in Bludit allows an attacker to bypass the server's authentication if they can trick an administrator or any other user into authorizing a session ID of their choosing.",
        "cweIds": [
          {
            "id": "CWE-384",
            "description": "Session Fixation"
          }
        ],
        "references": [
          {
            "url": "https://www.redguard.ch/blog/2024/06/20/security-advisory-bludit/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-24553",
        "sourceIdentifier": "vulnerability@ncsc.ch",
        "published": "2024-06-24T07:15:15.063",
        "lastModified": "2024-06-24T12:57:36.513",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Bludit uses the SHA-1 hashing algorithm to compute password hashes. Thus, attackers could determine cleartext passwords with brute-force attacks due to the inherent speed of SHA-1. In addition, the salt that is computed by Bludit is generated with a non-cryptographically secure function.",
        "cweIds": [
          {
            "id": "CWE-916",
            "description": "Use of Password Hash With Insufficient Computational Effort"
          }
        ],
        "references": [
          {
            "url": "https://www.redguard.ch/blog/2024/06/20/security-advisory-bludit/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4460",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-06-24T07:15:15.400",
        "lastModified": "2024-06-24T12:57:36.513",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "A denial of service (DoS) vulnerability exists in zenml-io/zenml version 0.56.3 due to improper handling of line feed (`\\n`) characters in component names. When a low-privileged user adds a component through the API endpoint `api/v1/workspaces/default/components` with a name containing a `\\n` character, it leads to uncontrolled resource consumption. This vulnerability results in the inability of users to add new components in certain categories (e.g., 'Image Builder') and to register new stacks through the UI, thereby degrading the user experience and potentially rendering the ZenML Dashboard unusable. The issue does not affect component addition through the Web UI, as `\\n` characters are properly escaped in that context. The vulnerability was tested on ZenML running in Docker, and it was observed in both Firefox and Chrome browsers.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zenml-io/zenml/commit/164cc09032060bbfc17e9dbd62c13efd5ff5771b"
          },
          {
            "url": "https://huntr.com/bounties/a387c935-b970-44d7-bddc-71c1c90aa2de"
          }
        ]
      }
    }
  ]
}