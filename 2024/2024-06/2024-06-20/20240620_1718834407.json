{
  "totalResults": 13,
  "datePublished": "2024-06-20T07:00:07.182925Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-34993",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-19T20:15:11.053",
        "lastModified": "2024-06-19T20:15:11.053",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the module \"Bulk Export products to Google Merchant-Google Shopping\" (bagoogleshopping) up to version 1.0.26 from Buy Addons for PrestaShop, a guest can perform SQL injection via`GenerateCategories::renderCategories().",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/friends-of-presta/security-advisories/blob/main/_posts/2024-06-18-bagoogleshopping.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38355",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-19T20:15:11.180",
        "lastModified": "2024-06-19T20:15:11.180",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.4,
        "description": "Socket.IO is an open source, real-time, bidirectional, event-based, communication framework. A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process. This issue is fixed by commit `15af22fc22` which has been included in `socket.io@4.6.2` (released in May 2023). The fix was backported in the 2.x branch as well with commit `d30630ba10`. Users are advised to upgrade. Users unable to upgrade may attach a listener for the \"error\" event to catch these errors.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          },
          {
            "id": "CWE-754",
            "description": "Improper Check for Unusual or Exceptional Conditions"
          }
        ],
        "references": [
          {
            "url": "https://github.com/socketio/socket.io/commit/15af22fc22bc6030fcead322c106f07640336115"
          },
          {
            "url": "https://github.com/socketio/socket.io/commit/d30630ba10562bf987f4d2b42440fc41a828119c"
          },
          {
            "url": "https://github.com/socketio/socket.io/security/advisories/GHSA-25hc-qcg6-38wj"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38356",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-19T20:15:11.453",
        "lastModified": "2024-06-19T20:15:11.453",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "TinyMCE is an open source rich text editor. A cross-site scripting (XSS) vulnerability was discovered in TinyMCE’s content extraction code. When using the `noneditable_regexp` option, specially crafted HTML attributes containing malicious code were able to be executed when content was extracted from the editor. This vulnerability has been patched in TinyMCE 7.2.0, TinyMCE 6.8.4 and TinyMCE 5.11.0 LTS by ensuring that, when using the `noneditable_regexp` option, any content within an attribute is properly verified to match the configured regular expression before being added. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d"
          },
          {
            "url": "https://github.com/tinymce/tinymce/security/advisories/GHSA-9hcv-j9pv-qmph"
          },
          {
            "url": "https://owasp.org/www-community/attacks/xss"
          },
          {
            "url": "https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview"
          },
          {
            "url": "https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38357",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-19T20:15:11.727",
        "lastModified": "2024-06-19T20:15:11.727",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "TinyMCE is an open source rich text editor. A cross-site scripting (XSS) vulnerability was discovered in TinyMCE’s content parsing code. This allowed specially crafted noscript elements containing malicious code to be executed when that content was loaded into the editor. This vulnerability has been patched in TinyMCE 7.2.0, TinyMCE 6.8.4 and TinyMCE 5.11.0 LTS by ensuring that content within noscript elements are properly parsed. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d"
          },
          {
            "url": "https://github.com/tinymce/tinymce/security/advisories/GHSA-w9jx-4g6g-rp7x"
          },
          {
            "url": "https://owasp.org/www-community/attacks/xss"
          },
          {
            "url": "https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview"
          },
          {
            "url": "https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38358",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-19T20:15:11.990",
        "lastModified": "2024-06-19T20:15:11.990",
        "baseScore": 2.9,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.4,
        "impactScore": 1.4,
        "description": "Wasmer is a web assembly (wasm) Runtime supporting WASIX, WASI and Emscripten. If the preopened directory has a symlink pointing outside, WASI programs can traverse the symlink and access host filesystem if the caller sets both `oflags::creat` and `rights::fd_write`. Programs can also crash the runtime by creating a symlink pointing outside with `path_symlink` and `path_open`ing the link. This issue has been addressed in commit `b9483d022` which has been included in release version 4.3.2. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/wasmerio/wasmer/commit/b9483d022c602b994103f78ecfe46f017f8ac662"
          },
          {
            "url": "https://github.com/wasmerio/wasmer/security/advisories/GHSA-55f3-3qvg-8pv5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-33836",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-19T21:15:56.920",
        "lastModified": "2024-06-19T21:15:56.920",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the module \"JA Marketplace\" (jamarketplace) up to version 9.0.1 from JA Module for PrestaShop, a guest can upload files with extensions .php. In version 6.X, the method `JmarketplaceproductModuleFrontController::init()` and in version 8.X, the method `JmarketplaceSellerproductModuleFrontController::init()` allow upload of .php files, which will lead to a critical vulnerability.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/friends-of-presta/security-advisories/blob/main/_posts/2024-06-18-jamarketplace.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-34990",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-19T21:15:57.023",
        "lastModified": "2024-06-19T21:15:57.023",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the module \"Help Desk - Customer Support Management System\" (helpdesk) up to version 2.4.0 from FME Modules for PrestaShop, a customer can upload .php files. Methods `HelpdeskHelpdeskModuleFrontController::submitTicket()` and `HelpdeskHelpdeskModuleFrontController::replyTicket()` allow upload of .php files on a predictable path for connected customers.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/friends-of-presta/security-advisories/blob/main/_posts/2024-06-18-helpdesk.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-34994",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-19T21:15:57.130",
        "lastModified": "2024-06-19T21:15:57.130",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the module \"Channable\" (channable) up to version 3.2.1 from Channable for PrestaShop, a guest can perform SQL injection via `ChannableFeedModuleFrontController::postProcess()`.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/friends-of-presta/security-advisories/blob/main/_posts/2024-06-18-channable.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36677",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-19T21:15:57.257",
        "lastModified": "2024-06-19T21:15:57.257",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the module \"Login as customer PRO\" (loginascustomerpro) <1.2.7 from Weblir for PrestaShop, a guest can access direct link to connect to each customer account of the Shop if the module is not installed OR if a secret accessible to administrator is stolen.",
        "cweIds": null,
        "references": [
          {
            "url": "https://security.friendsofpresta.org/modules/2024/06/18/loginascustomerpro.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36678",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-19T21:15:57.363",
        "lastModified": "2024-06-19T21:15:57.363",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the module \"Theme settings\" (pk_themesettings) <= 1.8.8 from Promokit.eu for PrestaShop, a guest can perform SQL injection. The script ajax.php have a sensitive SQL call that can be executed with a trivial http call and exploited to forge a SQL injection.",
        "cweIds": null,
        "references": [
          {
            "url": "https://security.friendsofpresta.org/modules/2024/06/18/pk_themesettings.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36679",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-19T21:15:57.470",
        "lastModified": "2024-06-19T21:15:57.470",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the module \"Module Live Chat Pro (All in One Messaging)\" (livechatpro) <=8.4.0, a guest can perform PHP Code injection. Due to a predictable token, the method `Lcp::saveTranslations()` suffer of a white writer that can inject PHP code into a PHP file.",
        "cweIds": null,
        "references": [
          {
            "url": "https://security.friendsofpresta.org/modules/2024/06/18/livechatpro.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36680",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-19T21:15:57.577",
        "lastModified": "2024-06-19T21:15:57.577",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the module \"Facebook\" (pkfacebook) <=1.0.1 from Promokit.eu for PrestaShop, a guest can perform SQL injection. The ajax script facebookConnect.php have a sensitive SQL call that can be executed with a trivial http call and exploited to forge a SQL injection.",
        "cweIds": null,
        "references": [
          {
            "url": "https://security.friendsofpresta.org/modules/2024/06/18/pkfacebook.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36684",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-19T21:15:57.680",
        "lastModified": "2024-06-19T21:15:57.680",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the module \"Custom links\" (pk_customlinks) <= 2.3 from Promokit.eu for PrestaShop, a guest can perform SQL injection. The script ajax.php have a sensitive SQL call that can be executed with a trivial http call and exploited to forge a SQL injection.",
        "cweIds": null,
        "references": [
          {
            "url": "https://security.friendsofpresta.org/modules/2024/06/18/pk_customlinks.html"
          }
        ]
      }
    }
  ]
}