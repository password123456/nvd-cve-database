{
  "totalResults": 7,
  "datePublished": "2024-06-20T17:00:04.123774Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-4565",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-20T06:15:09.950",
        "lastModified": "2024-06-20T12:43:25.663",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/430224c4-d6e3-4ca8-b1bc-b2229a9bcf12/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5475",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-20T06:15:10.077",
        "lastModified": "2024-06-20T12:43:25.663",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/cee66543-b5d6-4205-8f9b-0febd7fee445/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5522",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-20T06:15:10.197",
        "lastModified": "2024-06-20T12:43:25.663",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/bc76ef95-a2a9-4185-8ed9-1059097a506a/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6113",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-06-20T06:15:10.310",
        "lastModified": "2024-06-20T12:43:25.663",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.4,
        "description": "A vulnerability was found in itsourcecode Monbela Tourist Inn Online Reservation System 1.0. It has been rated as critical. This issue affects some unknown processing of the file login.php. The manipulation of the argument email leads to sql injection. The attack may be initiated remotely. The identifier VDB-268865 was assigned to this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/wangyuan-ui/CVE/issues/3"
          },
          {
            "url": "https://vuldb.com/?ctiid.268865"
          },
          {
            "url": "https://vuldb.com/?id.268865"
          },
          {
            "url": "https://vuldb.com/?submit.358991"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-25646",
        "sourceIdentifier": "psirt@zte.com.cn",
        "published": "2024-06-20T07:15:41.340",
        "lastModified": "2024-06-20T12:43:25.663",
        "baseScore": 7.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 0.5,
        "impactScore": 6.0,
        "description": "There is an unauthorized access vulnerability in ZTE H388X. If H388X is caused by brute-force serial port cracking,attackers with common user permissions can use this vulnerability to obtain elevated permissions on the affected device by performing specific operations.",
        "cweIds": [
          {
            "id": "CWE-281",
            "description": "Improper Preservation of Permissions"
          }
        ],
        "references": [
          {
            "url": "https://support.zte.com.cn/support/news/LoopholeInfoDetail.aspx?newsId=1035844"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38619",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-06-20T07:15:41.830",
        "lastModified": "2024-06-20T12:43:25.663",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nusb-storage: alauda: Check whether the media is initialized\nThe member \"uzonesize\" of struct alauda_info will remain 0\nif alauda_init_media() fails, potentially causing divide errors\nin alauda_read_data() and alauda_write_lba().\n- Add a member \"media_initialized\" to struct alauda_info.\n- Change a condition in alauda_check_media() to ensure the\n  first initialization.\n- Add an error check for the return value of alauda_init_media().",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/16637fea001ab3c8df528a8995b3211906165a30"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4098",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-20T07:15:41.933",
        "lastModified": "2024-06-20T12:43:25.663",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The Shariff Wrapper plugin for WordPress is vulnerable to Local File Inclusion in versions up to, and including, 4.6.13 via the shariff3uu_fetch_sharecounts function. This allows unauthenticated attackers to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/shariff/trunk/shariff.php#L410"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3103137"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/f49fba00-c576-4a1a-8b0b-9ebed3e3d090?source=cve"
          }
        ]
      }
    }
  ]
}