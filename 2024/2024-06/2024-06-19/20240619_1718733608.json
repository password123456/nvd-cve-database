{
  "totalResults": 9,
  "datePublished": "2024-06-19T03:00:08.493034Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-21685",
        "sourceIdentifier": "security@atlassian.com",
        "published": "2024-06-18T17:15:51.243",
        "lastModified": "2024-06-18T17:15:51.243",
        "baseScore": 7.4,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 4.0,
        "description": "This High severity Information Disclosure vulnerability was introduced in versions 9.4.0, 9.12.0, and 9.15.0 of Jira Core Data Center. \n\tThis Information Disclosure vulnerability, with a CVSS Score of 7.4, allows an unauthenticated attacker to view sensitive information via an Information Disclosure vulnerability which has high impact to confidentiality, no impact to integrity, no impact to availability, and requires user interaction. \n\tAtlassian recommends that Jira Core Data Center customers upgrade to latest version, if you are unable to do so, upgrade your instance to one of the specified supported fixed versions:\n\t\tJira Core Data Center 9.4: Upgrade to a release greater than or equal to 9.4.21\n\t\tJira Core Data Center 9.12: Upgrade to a release greater than or equal to 9.12.8\n\t\tJira Core Data Center 9.16: Upgrade to a release greater than or equal to 9.16.0\n\tSee the release notes. You can download the latest version of Jira Core Data Center from the download center. \n\tThis vulnerability was found internally.",
        "cweIds": null,
        "references": [
          {
            "url": "https://confluence.atlassian.com/pages/viewpage.action?pageId=1409286211"
          },
          {
            "url": "https://jira.atlassian.com/browse/JRASERVER-77713"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37799",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-18T17:15:51.910",
        "lastModified": "2024-06-18T17:15:51.910",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "CodeProjects Restaurant Reservation System v1.0 was discovered to contain a SQL injection vulnerability via the reserv_id parameter at view_reservations.php.",
        "cweIds": null,
        "references": [
          {
            "url": "https://code-projects.org/restaurant-reservation-system-in-php-with-source-code/"
          },
          {
            "url": "https://github.com/himanshubindra/CVEs/blob/main/CVE-2024-37799"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37800",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-18T17:15:52.027",
        "lastModified": "2024-06-18T17:15:52.027",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "CodeProjects Restaurant Reservation System v1.0 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the Date parameter at index.php.",
        "cweIds": null,
        "references": [
          {
            "url": "https://code-projects.org/restaurant-reservation-system-in-php-with-source-code/"
          },
          {
            "url": "https://github.com/SandeepRajauriya/CVEs/blob/main/CVE-2024-37800"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37802",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-18T17:15:52.133",
        "lastModified": "2024-06-18T17:15:52.133",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "CodeProjects Health Care hospital Management System v1.0 was discovered to contain a SQL injection vulnerability in the Patient Info module via the searvalu parameter.",
        "cweIds": null,
        "references": [
          {
            "url": "https://code-projects.org/health-care-hospital-in-php-css-js-and-mysql-free-download/"
          },
          {
            "url": "https://github.com/SandeepRajauriya/CVEs/blob/main/CVE-2024-37802"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37803",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-18T17:15:52.237",
        "lastModified": "2024-06-18T17:15:52.237",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Multiple stored cross-site scripting (XSS) vulnerabilities in CodeProjects Health Care hospital Management System v1.0 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the fname and lname parameters under the Staff Info page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://code-projects.org/health-care-hospital-in-php-css-js-and-mysql-free-download/"
          },
          {
            "url": "https://github.com/himanshubindra/CVEs/blob/main/CVE-2024-37803"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37904",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-18T17:15:52.337",
        "lastModified": "2024-06-18T17:15:52.337",
        "baseScore": 5.7,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.1,
        "impactScore": 3.6,
        "description": "Minder is an open source Software Supply Chain Security Platform. Minder's Git provider is vulnerable to a denial of service from a maliciously configured GitHub repository. The Git provider clones users repositories using the `github.com/go-git/go-git/v5` library on lines `L55-L89`. The Git provider does the following on the lines `L56-L62`. First, it sets the `CloneOptions`, specifying the url, the depth etc. It then validates the options. It then sets up an in-memory filesystem, to which it clones and Finally, it clones the repository. The `(g *Git) Clone()` method is vulnerable to a DoS attack: A Minder user can instruct Minder to clone a large repository which will exhaust memory and crash the Minder server. The root cause of this vulnerability is a combination of the following conditions: 1. Users can control the Git URL which Minder clones, 2. Minder does not enforce a size limit to the repository, 3. Minder clones the entire repository into memory. This issue has been addressed in commit `7979b43` which has been included in release version v0.0.52. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L55-L89"
          },
          {
            "url": "https://github.com/stacklok/minder/blob/85985445c8ac3e51f03372e99c7b2f08a6d274aa/internal/providers/git/git.go#L56-L62"
          },
          {
            "url": "https://github.com/stacklok/minder/commit/7979b43"
          },
          {
            "url": "https://github.com/stacklok/minder/security/advisories/GHSA-hpcg-xjq5-g666"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38347",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-18T17:15:52.583",
        "lastModified": "2024-06-18T17:15:52.583",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "CodeProjects Health Care hospital Management System v1.0 was discovered to contain a SQL injection vulnerability in the Room Information module via the id parameter.",
        "cweIds": null,
        "references": [
          {
            "url": "https://code-projects.org/health-care-hospital-in-php-css-js-and-mysql-free-download/"
          },
          {
            "url": "https://github.com/SandeepRajauriya/CVEs/blob/main/CVE-2024-38347"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38348",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-06-18T17:15:52.677",
        "lastModified": "2024-06-18T17:15:52.677",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "CodeProjects Health Care hospital Management System v1.0 was discovered to contain a SQL injection vulnerability in the Staff Info module via the searvalu parameter.",
        "cweIds": null,
        "references": [
          {
            "url": "https://code-projects.org/health-care-hospital-in-php-css-js-and-mysql-free-download/"
          },
          {
            "url": "https://github.com/SandeepRajauriya/CVEs/blob/main/CVE-2024-38348"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38351",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-06-18T17:15:52.777",
        "lastModified": "2024-06-18T17:15:52.777",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "Pocketbase is an open source web backend written in go. In affected versions a malicious user may be able to compromise other user accounts. In order to be exploited users must have both OAuth2 and Password auth methods enabled. A possible attack scenario could be: 1. a malicious actor register with the targeted user's email (it is unverified), 2. at some later point in time the targeted user stumble on your app and decides to sign-up with OAuth2 (_this step could be also initiated by the attacker by sending an invite email to the targeted user_), 3. on successful OAuth2 auth we search for an existing PocketBase user matching with the OAuth2 user's email and associate them, 4. because we haven't changed the password of the existing PocketBase user during the linking, the malicious actor has access to the targeted user account and will be able to login with the initially created email/password. To prevent this for happening we now reset the password for this specific case if the previously created user wasn't verified (an exception to this is if the linking is explicit/manual, aka. when you send `Authorization:TOKEN` with the OAuth2 auth call). Additionally to warn existing users we now send an email alert in case the user has logged in with password but has at least one OAuth2 account linked. The flow will be further improved with ongoing refactoring and we will start sending emails for \"unrecognized device\" logins (OTP and MFA is already implemented and will be available with the next v0.23.0 release in the near future). For the time being users are advised to update to version 0.22.14. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-287",
            "description": "Improper Authentication"
          }
        ],
        "references": [
          {
            "url": "https://github.com/pocketbase/pocketbase/discussions/4355"
          },
          {
            "url": "https://github.com/pocketbase/pocketbase/security/advisories/GHSA-m93w-4fxv-r35v"
          }
        ]
      }
    }
  ]
}