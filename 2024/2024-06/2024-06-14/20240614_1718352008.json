{
  "totalResults": 28,
  "datePublished": "2024-06-14T17:00:08.413866Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2023-51377",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-06-14T06:15:09.687",
        "lastModified": "2024-06-14T06:15:09.687",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Missing Authorization vulnerability in WPEverest Everest Forms.This issue affects Everest Forms: from n/a through 2.0.3.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/everest-forms/wordpress-everest-forms-plugin-2-0-3-broken-access-control-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-51495",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-06-14T06:15:10.103",
        "lastModified": "2024-06-14T06:15:10.103",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 2.5,
        "description": "Missing Authorization vulnerability in Woo WooCommerce Warranty Requests.This issue affects WooCommerce Warranty Requests: from n/a through 2.2.7.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/woocommerce-warranty/wordpress-woocommerce-warranty-requests-plugin-2-2-7-broken-access-control-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-51496",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-06-14T06:15:10.407",
        "lastModified": "2024-06-14T06:15:10.407",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Missing Authorization vulnerability in Woo WooCommerce Warranty Requests.This issue affects WooCommerce Warranty Requests: from n/a through 2.2.7.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/woocommerce-warranty/wordpress-woocommerce-warranty-requests-plugin-2-2-7-broken-access-control-vulnerability-2?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-51497",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-06-14T06:15:10.673",
        "lastModified": "2024-06-14T06:15:10.673",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "Missing Authorization vulnerability in Woo WooCommerce Ship to Multiple Addresses.This issue affects WooCommerce Ship to Multiple Addresses: from n/a through 3.8.9.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/woocommerce-shipping-multiple-addresses/wordpress-woocommerce-ship-to-multiple-addresses-plugin-3-8-9-broken-access-control-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1295",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:10.937",
        "lastModified": "2024-06-14T06:15:10.937",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The events-calendar-pro WordPress plugin before 6.4.0.1, The Events Calendar WordPress plugin before 6.4.0.1 does not prevent users with at least the contributor role from leaking details about events they shouldn't have access to. (e.g. password-protected events, drafts, etc.)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/3cffbeb0-545a-4002-b02c-0fa38cada1db/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-23504",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-06-14T06:15:11.023",
        "lastModified": "2024-06-14T06:15:11.023",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Missing Authorization vulnerability in WPManageNinja LLC Ninja Tables.This issue affects Ninja Tables: from n/a through 5.0.5.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/ninja-tables/wordpress-ninja-tables-plugin-5-0-5-broken-access-control-vulnerability-2?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2122",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-14T06:15:11.320",
        "lastModified": "2024-06-14T06:15:11.320",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Best WordPress Gallery Plugin â€“ FooGallery plugin for WordPress is vulnerable to Stored Cross-Site Scripting via album gallery custom URLs in all versions up to, and including, 2.4.15 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3100157%40foogallery&new=3100157%40foogallery&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/a69e9802-9087-4cd9-86eb-b64a82bc7c0b?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2218",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:11.570",
        "lastModified": "2024-06-14T06:15:11.570",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The LuckyWP Table of Contents WordPress plugin through 2.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/ecd615f7-946e-45af-a610-0654a243b1dc/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3754",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:11.950",
        "lastModified": "2024-06-14T06:15:11.950",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Alemha watermarker WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/8c6f3e3e-3047-4446-a190-750a60c29fa3/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3965",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.060",
        "lastModified": "2024-06-14T06:15:12.060",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Pray For Me WordPress plugin through 1.0.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/0e1ba2b3-5849-42f6-b503-8b3b520e4a79/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3966",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.170",
        "lastModified": "2024-06-14T06:15:12.170",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/9f0a575f-862d-4f2e-8d25-82c6f58dd11a/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3971",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.250",
        "lastModified": "2024-06-14T06:15:12.250",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/5dec5719-105d-4989-a97f-bda04d223322/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3972",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.330",
        "lastModified": "2024-06-14T06:15:12.330",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/55dfb9b5-d590-478b-bd1f-d420b79037fa/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3977",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.427",
        "lastModified": "2024-06-14T06:15:12.427",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/25851386-eccf-49cb-afbf-c25286c9b19e/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3978",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.520",
        "lastModified": "2024-06-14T06:15:12.520",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/a9f47d11-47ac-4998-a82a-dc2f3b0decdf/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3992",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.607",
        "lastModified": "2024-06-14T06:15:12.607",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Amen WordPress plugin through 3.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/e9fe3101-8033-4eee-8b37-06856872e9ef/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3993",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.680",
        "lastModified": "2024-06-14T06:15:12.680",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The AZAN Plugin WordPress plugin through 0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/19cd60dd-8599-4af3-99db-c42de504606c/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4005",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.753",
        "lastModified": "2024-06-14T06:15:12.753",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/02ca09f8-4080-4969-992d-0e6afb29bc62/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4270",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.827",
        "lastModified": "2024-06-14T06:15:12.827",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/7a3b89cc-7a81-448a-94fc-36a7033609d5/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4271",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:12.907",
        "lastModified": "2024-06-14T06:15:12.907",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The SVGator  WordPress plugin through 1.2.6 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/c1fe0bc7-a340-428e-a549-1e37291bea1c/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4404",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-14T06:15:12.987",
        "lastModified": "2024-06-14T06:15:12.987",
        "baseScore": 8.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.1,
        "impactScore": 4.7,
        "description": "The ElementsKit PRO plugin for WordPress is vulnerable to Server-Side Request Forgery in versions up to, and including, 3.6.2 via the 'render_raw' function. This can allow authenticated attackers, with contributor-level permissions and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpmet.com/plugin/elementskit/roadmaps/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/6417269d-3d49-4f33-b92a-5aacb052bab0?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4480",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:13.220",
        "lastModified": "2024-06-14T06:15:13.220",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/c1e5dee9-c540-4cc1-8b94-c6d1650b52d3/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4751",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:13.297",
        "lastModified": "2024-06-14T06:15:13.297",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/94f4cc45-4c55-43d4-8ad2-a20c118b589f/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5155",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-06-14T06:15:13.373",
        "lastModified": "2024-06-14T06:15:13.373",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Inquiry cart WordPress plugin through 3.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/f1e90a8a-d959-4316-a5d4-e183854944bd/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5551",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-14T06:15:13.443",
        "lastModified": "2024-06-14T06:15:13.443",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.6,
        "impactScore": 5.9,
        "description": "The WP STAGING Pro WordPress Backup Plugin plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 5.6.0. This is due to missing or incorrect nonce validation on the 'sub' parameter called from the WP STAGING WordPress Backup Plugin - Backup Duplicator & Migration plugin. This makes it possible for unauthenticated attackers to include any local files that end in '-settings.php' via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-staging/trunk/Backend/views/settings/tabs/remote-storages.php#L14"
          },
          {
            "url": "https://wp-staging.com/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2a99a21c-d4f1-4cdb-b1f1-31b3cf666b80?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31162",
        "sourceIdentifier": "twcert@cert.org.tw",
        "published": "2024-06-14T07:15:50.153",
        "lastModified": "2024-06-14T07:15:50.153",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "The specific function parameter of ASUS Download Master does not properly filter user input. An unauthenticated remote attacker with administrative privileges can exploit this vulnerability to execute arbitrary system commands on the device.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://www.twcert.org.tw/en/cp-139-7868-8a760-2.html"
          },
          {
            "url": "https://www.twcert.org.tw/tw/cp-132-7867-8fad9-1.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31163",
        "sourceIdentifier": "twcert@cert.org.tw",
        "published": "2024-06-14T07:15:50.713",
        "lastModified": "2024-06-14T07:15:50.713",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "ASUS Download Master has a buffer overflow vulnerability. An unauthenticated remote attacker with administrative privileges can exploit this vulnerability to execute arbitrary system commands on the device.",
        "cweIds": [
          {
            "id": "CWE-121",
            "description": "Stack-based Buffer Overflow"
          }
        ],
        "references": [
          {
            "url": "https://www.twcert.org.tw/en/cp-139-7870-befb5-2.html"
          },
          {
            "url": "https://www.twcert.org.tw/tw/cp-132-7869-3db1d-1.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5994",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-06-14T07:15:51.130",
        "lastModified": "2024-06-14T07:15:51.130",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The WP Go Maps (formerly WP Google Maps) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via Custom JS option in versions up to, and including, 9.0.38. This makes it possible for authenticated attackers that have been explicitly granted permissions by an administrator, with contributor-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. Version 9.0.39 adds a caution to make administrators aware of the possibility for abuse if permissions are granted to lower-level users.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-google-maps/trunk/html/atlas-novus/settings-page.html.php#L442"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-google-maps/trunk/html/settings-page.html.php#L538"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/dd0597d2-07ba-4fb4-bf73-95770f8c3d6b?source=cve"
          }
        ]
      }
    }
  ]
}