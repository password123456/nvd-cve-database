{
  "totalResults": 12,
  "datePublished": "2024-08-21T07:00:08.301464Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-31842",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-08-20T20:15:08.090",
        "lastModified": "2024-08-20T20:15:08.090",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue was discovered in Italtel Embrace 1.6.4. The web application inserts the access token of an authenticated user inside GET requests. The query string for the URL could be saved in the browser's history, passed through Referers to other web sites, stored in web logs, or otherwise recorded in other sources. If the query string contains sensitive information such as session identifiers, then attackers can use this information to launch further attacks. Because the access token in sent in GET requests, this vulnerability could lead to complete account takeover.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.gruppotim.it/it/footer/red-team.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41659",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-08-20T20:15:08.207",
        "lastModified": "2024-08-20T20:15:08.207",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "memos is a privacy-first, lightweight note-taking service. A CORS misconfiguration exists in memos 0.20.1 and earlier where an arbitrary origin is reflected with Access-Control-Allow-Credentials set to true. This may allow an attacking website to make a cross-origin request, allowing the attacker to read private information or make privileged changes to the system as the vulnerable user account.",
        "cweIds": [
          {
            "id": "CWE-942",
            "description": "Permissive Cross-domain Policy with Untrusted Domains"
          }
        ],
        "references": [
          {
            "url": "https://github.com/usememos/memos/blob/v0.20.1/server/server.go#L163"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2024-034_memos/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41773",
        "sourceIdentifier": "psirt@us.ibm.com",
        "published": "2024-08-20T20:15:08.423",
        "lastModified": "2024-08-20T20:15:08.423",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "IBM Global Configuration Management 7.0.2 and 7.0.3 could allow an authenticated user to archive a global baseline due to improper access controls.",
        "cweIds": [
          {
            "id": "CWE-708",
            "description": "Incorrect Ownership Assignment"
          }
        ],
        "references": [
          {
            "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/350347"
          },
          {
            "url": "https://www.ibm.com/support/pages/node/7165963"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6337",
        "sourceIdentifier": "product-cna@github.com",
        "published": "2024-08-20T20:15:09.033",
        "lastModified": "2024-08-20T20:15:09.033",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An Incorrect Authorization vulnerability was identified in GitHub Enterprise Server that allowed a GitHub App with only content: read and pull_request_write: write permissions to read issue content inside a private repository. This was only exploitable via user access token and installation access token was not impacted. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.14 and was fixed in versions 3.13.3, 3.12.8, 3.11.14 and 3.10.16. This vulnerability was reported via the GitHub Bug Bounty program.",
        "cweIds": [
          {
            "id": "CWE-863",
            "description": "Incorrect Authorization"
          }
        ],
        "references": [
          {
            "url": "https://docs.github.com/en/enterprise-server@3.10/admin/release-notes#3.10.16"
          },
          {
            "url": "https://docs.github.com/en/enterprise-server@3.11/admin/release-notes#3.11.14"
          },
          {
            "url": "https://docs.github.com/en/enterprise-server@3.12/admin/release-notes#3.12.8"
          },
          {
            "url": "https://docs.github.com/en/enterprise-server@3.13/admin/release-notes#3.13.3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6800",
        "sourceIdentifier": "product-cna@github.com",
        "published": "2024-08-20T20:15:09.910",
        "lastModified": "2024-08-20T20:15:09.910",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An XML signature wrapping vulnerability was present in GitHub Enterprise Server (GHES) when utilizing SAML authentication with specific identity providers. This vulnerability allowed an attacker with direct network access to GitHub Enterprise Server to forge a SAML response to provision and/or gain access to a user with site administrator privileges. Exploitation of this vulnerability would allow unauthorized access to the instance without requiring prior authentication. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.14 and was fixed in versions 3.13.3, 3.12.8, 3.11.14, and 3.10.16. This vulnerability was reported via the GitHub Bug Bounty program.",
        "cweIds": [
          {
            "id": "CWE-347",
            "description": "Improper Verification of Cryptographic Signature"
          }
        ],
        "references": [
          {
            "url": "https://docs.github.com/en/enterprise-server@3.10/admin/release-notes#3.10.16"
          },
          {
            "url": "https://docs.github.com/en/enterprise-server@3.11/admin/release-notes#3.11.14"
          },
          {
            "url": "https://docs.github.com/en/enterprise-server@3.12/admin/release-notes#3.12.8"
          },
          {
            "url": "https://docs.github.com/en/enterprise-server@3.13/admin/release-notes#3.13.3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7711",
        "sourceIdentifier": "product-cna@github.com",
        "published": "2024-08-20T20:15:10.173",
        "lastModified": "2024-08-20T20:15:10.173",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An Incorrect Authorization vulnerability was identified in GitHub Enterprise Server, allowing an attacker to update the title, assignees, and labels of any issue inside a public repository. This was only exploitable inside a public repository. This vulnerability affected GitHub Enterprise Server versions before 3.14 and was fixed in versions 3.13.3, 3.12.8, and 3.11.14. Versions 3.10 of GitHub Enterprise Server are not affected. This vulnerability was reported via the GitHub Bug Bounty program.",
        "cweIds": [
          {
            "id": "CWE-863",
            "description": "Incorrect Authorization"
          }
        ],
        "references": [
          {
            "url": "https://docs.github.com/en/enterprise-server@3.11/admin/release-notes#3.11.14"
          },
          {
            "url": "https://docs.github.com/en/enterprise-server@3.12/admin/release-notes#3.12.8"
          },
          {
            "url": "https://docs.github.com/en/enterprise-server@3.13/admin/release-notes#3.13.3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41657",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-08-20T21:15:13.687",
        "lastModified": "2024-08-20T21:15:13.687",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "Casdoor is a UI-first Identity and Access Management (IAM) / Single-Sign-On (SSO) platform. In Casdoor 1.577.0 and earlier, a logic vulnerability exists in the beego filter CorsFilter that allows any website to make cross domain requests to Casdoor as the logged in user. Due to the a logic error in checking only for a prefix when authenticating the Origin header, any domain can create a valid subdomain with a valid subdomain prefix (Ex: localhost.example.com), allowing the website to make requests to Casdoor as the current signed-in user.",
        "cweIds": [
          {
            "id": "CWE-942",
            "description": "Permissive Cross-domain Policy with Untrusted Domains"
          }
        ],
        "references": [
          {
            "url": "https://github.com/casdoor/casdoor/blob/v1.577.0/routers/cors_filter.go#L45"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2024-035_GHSL-2024-036_casdoor/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41658",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-08-20T21:15:13.910",
        "lastModified": "2024-08-20T21:15:13.910",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "Casdoor is a UI-first Identity and Access Management (IAM) / Single-Sign-On (SSO) platform.  In Casdoor 1.577.0 and earlier, he purchase URL that is created to generate a WechatPay QR code is vulnerable to reflected XSS. When purchasing an item through casdoor, the product page allows you to pay via wechat pay. When using wechat pay, a QR code with the wechat pay link is displayed on the payment page, hosted on the domain of casdoor. This page takes a query parameter from the url successUrl, and redirects the user to that url after a successful purchase. Because the user has no reason to think that the payment page contains sensitive information, they may share it with other or can be social engineered into sending it to others. An attacker can then craft the casdoor link with a special url and send it back to the user, and once payment has gone though an XSS attack occurs.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/casdoor/casdoor/blob/v1.577.0/web/src/QrCodePage.js"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2024-035_GHSL-2024-036_casdoor/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42361",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-08-20T21:15:14.120",
        "lastModified": "2024-08-20T21:15:14.120",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Hertzbeat is an open source, real-time monitoring system. Hertzbeat 1.6.0 and earlier declares a /api/monitor/{monitorId}/metric/{metricFull} endpoint to download job metrics. In the process, it executes a SQL query with user-controlled data, allowing for SQL injection.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/dromara/hertzbeat/blob/1f12ac9f2a1a3d86b1d476775e14174243b250a8/manager/src/main/java/org/dromara/hertzbeat/manager/controller/MonitorsController.java#L202"
          },
          {
            "url": "https://github.com/dromara/hertzbeat/blob/1f12ac9f2a1a3d86b1d476775e14174243b250a8/warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryTdEngineDataStorage.java#L242"
          },
          {
            "url": "https://github.com/dromara/hertzbeat/blob/1f12ac9f2a1a3d86b1d476775e14174243b250a8/warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryTdEngineDataStorage.java#L295"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2023-254_GHSL-2023-256_HertzBeat/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42362",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-08-20T21:15:14.333",
        "lastModified": "2024-08-20T21:15:14.333",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "Hertzbeat is an open source, real-time monitoring system. Hertzbeat has an authenticated (user role) RCE via unsafe deserialization in /api/monitors/import. This vulnerability is fixed in 1.6.0.",
        "cweIds": [
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          }
        ],
        "references": [
          {
            "url": "https://github.com/apache/hertzbeat/commit/79f5408e345e8e89da97be05f43e3204a950ddfb"
          },
          {
            "url": "https://github.com/apache/hertzbeat/commit/9dbbfb7812fc4440ba72bdee66799edd519d06bb"
          },
          {
            "url": "https://github.com/apache/hertzbeat/pull/1611"
          },
          {
            "url": "https://github.com/apache/hertzbeat/pull/1620"
          },
          {
            "url": "https://github.com/apache/hertzbeat/pull/1620/files#diff-9c5fb3d1b7e3b0f54bc5c4182965c4fe1f9023d449017cece3005d3f90e8e4d8"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2023-254_GHSL-2023-256_HertzBeat/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42363",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-08-20T21:15:14.543",
        "lastModified": "2024-08-20T21:15:14.543",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "Prior to 3385, the user-controlled role parameter enters the application in the Kubernetes::RoleVerificationsController. The role parameter flows into the RoleConfigFile initializer and then into the Kubernetes::Util.parse_file method where it is unsafely deserialized using the YAML.load_stream method. This issue may lead to Remote Code Execution (RCE). This vulnerability is fixed in 3385.",
        "cweIds": [
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zendesk/samson/blob/107efb4a252425966aac5e77d0c3670f9b5d7229/plugins/kubernetes/app/controllers/kubernetes/role_verifications_controller.rb#L10"
          },
          {
            "url": "https://github.com/zendesk/samson/blob/107efb4a252425966aac5e77d0c3670f9b5d7229/plugins/kubernetes/app/controllers/kubernetes/role_verifications_controller.rb#L7"
          },
          {
            "url": "https://github.com/zendesk/samson/blob/107efb4a252425966aac5e77d0c3670f9b5d7229/plugins/kubernetes/app/models/kubernetes/role_config_file.rb#L80"
          },
          {
            "url": "https://github.com/zendesk/samson/blob/107efb4a252425966aac5e77d0c3670f9b5d7229/plugins/kubernetes/app/models/kubernetes/util.rb#L9"
          },
          {
            "url": "https://github.com/zendesk/samson/pull/4071"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2023-136_Samson/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43396",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-08-20T21:15:14.897",
        "lastModified": "2024-08-20T21:15:14.897",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "Khoj is an application that creates personal AI agents. The Automation feature allows a user to insert arbitrary HTML inside the task instructions, resulting in a Stored XSS. The q parameter for the /api/automation endpoint does not get correctly sanitized when rendered on the page, resulting in the ability of users to inject arbitrary HTML/JS. This vulnerability is fixed in 1.15.0.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/khoj-ai/khoj/commit/1c7a562880eeb7354325545d2cf6c5d1d1134812"
          },
          {
            "url": "https://github.com/khoj-ai/khoj/commit/55be90cdd2f9d6a09c8bf9ceea52fc36b9201626"
          },
          {
            "url": "https://github.com/khoj-ai/khoj/security/advisories/GHSA-cf72-vg59-4j4h"
          }
        ]
      }
    }
  ]
}