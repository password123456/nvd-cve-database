{
  "totalResults": 6,
  "datePublished": "2024-08-30T21:00:06.888459Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-7122",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-08-30T10:15:06.547",
        "lastModified": "2024-08-30T13:00:05.390",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Elementor Addon Elements plugin for WordPress is vulnerable to Stored Cross-Site Scripting via multiple widgets in all versions up to, and including, 1.13.6 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/addon-elements-for-elementor-page-builder/trunk/assets/js/eae.js#L568"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/addon-elements-for-elementor-page-builder/trunk/modules/animated-gradient/module.php#L160"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/addon-elements-for-elementor-page-builder/trunk/modules/dual-button/widgets/dual-button.php#L1045"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/addon-elements-for-elementor-page-builder/trunk/modules/image-compare/widgets/image-compare.php#L537"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/addon-elements-for-elementor-page-builder/trunk/modules/text-separator/widgets/text-separator.php#L570"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3143440/"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3143444/"
          },
          {
            "url": "https://wordpress.org/plugins/addon-elements-for-elementor-page-builder/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/668621b0-67ef-44fc-a126-e8c4e372666e?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7858",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-08-30T10:15:07.330",
        "lastModified": "2024-08-30T13:00:05.390",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "The Media Library Folders plugin for WordPress is vulnerable to unauthorized access due to missing capability checks on several AJAX functions in the media-library-plus.php file in all versions up to, and including, 8.2.3. This makes it possible for authenticated attackers, with subscriber-level access and above, to perform several actions related to managing media files and folder along with controlling settings.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/media-library-plus/trunk/media-library-plus.php"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3143036%40media-library-plus&new=3143036%40media-library-plus&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/fcc0fc00-b7d6-429c-9ab3-f08971c48777?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8252",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-08-30T10:15:07.657",
        "lastModified": "2024-08-30T13:00:05.390",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Clean Login plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.14.5 via the 'template' attribute of the clean-login-register shortcode. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.",
        "cweIds": [
          {
            "id": "CWE-98",
            "description": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/clean-login/tags/1.14.5/include/frontend.php#L20"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/clean-login/tags/1.14.5/include/shortcodes.php#L146"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3143241%40clean-login&new=3143241%40clean-login&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/b9f99b51-e1b1-4cd3-a9f7-24e4b59811a7?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8274",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-08-30T10:15:08.070",
        "lastModified": "2024-08-30T13:00:05.390",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The WP Booking Calendar plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via several parameters from 'timeline_obj' in all versions up to, and including, 10.5 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/booking/tags/10.4/core/timeline/v2/wpbc-class-timeline_v2.php#L520"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3143364/booking/trunk/core/timeline/v2/wpbc-class-timeline_v2.php?old=3139443&old_path=booking%2Ftrunk%2Fcore%2Ftimeline%2Fv2%2Fwpbc-class-timeline_v2.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/83804c2a-2c4a-4f69-b833-dcd53ddab94d?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2022-48944",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-08-30T11:15:14.387",
        "lastModified": "2024-08-30T13:00:05.390",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nsched: Fix yet more sched_fork() races\nWhere commit 4ef0c5c6b5ba (\"kernel/sched: Fix sched_fork() access an\ninvalid sched_task_group\") fixed a fork race vs cgroup, it opened up a\nrace vs syscalls by not placing the task on the runqueue before it\ngets exposed through the pidhash.\nCommit 13765de8148f (\"sched/fair: Fix fault in reweight_entity\") is\ntrying to fix a single instance of this, instead fix the whole class\nof issues, effectively reverting this commit.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/3411613611a5cddf7e80908010dc87cb527dd13b"
          },
          {
            "url": "https://git.kernel.org/stable/c/b1e8206582f9d680cff7d04828708c8b6ab32957"
          },
          {
            "url": "https://git.kernel.org/stable/c/c65cfd89cef669d90c59f3bf150af6458137a04f"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8331",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-08-30T11:15:15.120",
        "lastModified": "2024-08-30T13:00:05.390",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "A vulnerability was found in OpenRapid RapidCMS up to 1.3.1. It has been classified as critical. This affects an unknown part of the file /admin/user/user-move-run.php. The manipulation of the argument username leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://gitee.com/A0kooo/cve_article/blob/master/RapidCMS/SQL%20injection1/rapidcms%20user-move-run.php%20SQL%20injection.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.276207"
          },
          {
            "url": "https://vuldb.com/?id.276207"
          },
          {
            "url": "https://vuldb.com/?submit.398769"
          }
        ]
      }
    }
  ]
}