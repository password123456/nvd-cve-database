{
  "totalResults": 7,
  "datePublished": "2024-08-30T09:00:10.492604Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-2502",
        "sourceIdentifier": "product-security@silabs.com",
        "published": "2024-08-29T22:15:05.153",
        "lastModified": "2024-08-29T22:15:05.153",
        "baseScore": 2.0,
        "baseSeverity": "LOW",
        "exploitabilityScore": 0.5,
        "impactScore": 1.4,
        "description": "An application can be configured to block boot attempts after consecutive tamper resets are detected, which may not occur as expected.\nThis is possible because the TAMPERRSTCAUSE register may not be properly updated when a level 4 tamper event (a tamper reset) occurs. This impacts Series 2 HSE-SVH devices, including xG23B, xG24B, xG25B, and xG28B, but does not impact xG21B. To mitigate this issue, upgrade to SE Firmware version 2.2.6 or later.",
        "cweIds": [
          {
            "id": "CWE-754",
            "description": "Improper Check for Unusual or Exceptional Conditions"
          }
        ],
        "references": [
          {
            "url": "https://community.silabs.com/sfc/servlet.shepherd/document/download/069Vm00000BYb5HIAT?operationContext=S1"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45302",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-08-29T22:15:05.377",
        "lastModified": "2024-08-29T22:15:05.377",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.8,
        "impactScore": 4.2,
        "description": "RestSharp is a Simple REST and HTTP API Client for .NET. The second argument to `RestRequest.AddHeader` (the header value) is vulnerable to CRLF injection. The same applies to `RestRequest.AddOrUpdateHeader` and `RestClient.AddDefaultHeader`. The way HTTP headers are added to a request is via the `HttpHeaders.TryAddWithoutValidation` method which does not check for CRLF characters in the header value. This means that any headers from a `RestSharp.RequestHeaders` object are added to the request in such a way that they are vulnerable to CRLF-injection. In general, CRLF-injection into a HTTP header (when using HTTP/1.1) means that one can inject additional HTTP headers or smuggle whole HTTP requests. If an application using the RestSharp library passes a user-controllable value through to a header, then that application becomes vulnerable to CRLF-injection. This is not necessarily a security issue for a command line application like the one above, but if such code were present in a web application then it becomes vulnerable to request splitting (as shown in the PoC) and thus Server Side Request Forgery. Strictly speaking this is a potential vulnerability in applications using RestSharp, not in RestSharp itself, but I would argue that at the very least there needs to be a warning about this behaviour in the RestSharp documentation. RestSharp has addressed this issue in version 112.0.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-93",
            "description": "Improper Neutralization of CRLF Sequences ('CRLF Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/restsharp/RestSharp/blob/777bf194ec2d14271e7807cc704e73ec18fcaf7e/src/RestSharp/Request/HttpRequestMessageExtensions.cs#L32"
          },
          {
            "url": "https://github.com/restsharp/RestSharp/commit/0fba5e727d241b1867bd71efc912594075c2934b"
          },
          {
            "url": "https://github.com/restsharp/RestSharp/security/advisories/GHSA-4rr6-2v9v-wcpc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6670",
        "sourceIdentifier": "security@progress.com",
        "published": "2024-08-29T22:15:05.573",
        "lastModified": "2024-08-29T22:15:05.573",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "In WhatsUp Gold versions released before 2024.0.0, a SQL Injection vulnerability allows an unauthenticated attacker to retrieve the users encrypted password.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-August-2024"
          },
          {
            "url": "https://www.progress.com/network-monitoring"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6671",
        "sourceIdentifier": "security@progress.com",
        "published": "2024-08-29T22:15:05.767",
        "lastModified": "2024-08-29T22:15:05.767",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "In WhatsUp Gold versions released before 2024.0.0, if the application is configured with only a single user, a SQL Injection vulnerability allows an unauthenticated attacker to retrieve the users encrypted password.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-August-2024"
          },
          {
            "url": "https://www.progress.com/network-monitoring"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6672",
        "sourceIdentifier": "security@progress.com",
        "published": "2024-08-29T22:15:05.953",
        "lastModified": "2024-08-29T22:15:05.953",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "In WhatsUp Gold versions released before 2024.0.0, a SQL Injection vulnerability allows an authenticated low-privileged attacker to achieve privilege escalation by modifying a privileged user's password.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-August-2024"
          },
          {
            "url": "https://www.progress.com/network-monitoring"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1543",
        "sourceIdentifier": "facts@wolfssl.com",
        "published": "2024-08-29T23:15:10.067",
        "lastModified": "2024-08-29T23:15:10.067",
        "baseScore": 4.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.5,
        "impactScore": 3.6,
        "description": "The side-channel protected T-Table implementation in wolfSSL up to version 5.6.5 protects against a side-channel attacker with cache-line resolution. In a controlled environment such as Intel SGX, an attacker can gain a per instruction sub-cache-line resolution allowing them to break the cache-line-level protection. For details on the attack refer to:  https://doi.org/10.46586/tches.v2024.i1.457-500",
        "cweIds": [
          {
            "id": "CWE-208",
            "description": "Observable Timing Discrepancy"
          }
        ],
        "references": [
          {
            "url": "https://github.com/wolfSSL/wolfssl/blob/master/ChangeLog.md#wolfssl-release-566-dec-19-2023"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1545",
        "sourceIdentifier": "facts@wolfssl.com",
        "published": "2024-08-29T23:15:10.263",
        "lastModified": "2024-08-29T23:15:10.263",
        "baseScore": 5.9,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 4.7,
        "description": "Fault Injection vulnerability in RsaPrivateDecryption function in wolfssl/wolfcrypt/src/rsa.c in WolfSSL wolfssl5.6.6 on Linux/Windows allows remote attacker co-resides in the same system with a victim process to disclose information and escalate privileges via Rowhammer fault injection to the RsaKey structure.",
        "cweIds": [
          {
            "id": "CWE-1256",
            "description": "Improper Restriction of Software Interfaces to Hardware Features"
          },
          {
            "id": "CWE-252",
            "description": "Unchecked Return Value"
          }
        ],
        "references": [
          {
            "url": "https://github.com/wolfSSL/wolfssl/releases/tag/v5.7.0-stable"
          }
        ]
      }
    }
  ]
}