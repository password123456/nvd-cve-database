{
  "totalResults": 3,
  "datePublished": "2024-08-20T17:00:05.515595Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-43688",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-08-20T06:15:04.983",
        "lastModified": "2024-08-20T15:44:20.567",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "cron/entry.c in vixie cron before 9cc8ab1, as used in OpenBSD 7.4 and 7.5, allows a heap-based buffer underflow and memory corruption. NOTE: this issue was introduced during a May 2023 refactoring.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/vixie/cron/commit/9cc8ab1087bb9ab861dd5595c41200683c9f6712"
          },
          {
            "url": "https://www.supernetworks.org/advisories/CVE-2024-43688-openbsd-cron-heap-underflow.txt"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5576",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-08-20T06:15:05.153",
        "lastModified": "2024-08-20T15:44:20.567",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Tutor LMS Elementor Addons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'course_carousel_skin' attribute within the plugin's Course Carousel widget in all versions up to, and including, 2.1.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/tutor-lms-elementor-addons/tags/2.1.4/templates/course/course-carousel.php#L81"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3136459/"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3136459/#file13"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3136459/#file9"
          },
          {
            "url": "https://wordpress.org/plugins/tutor-lms-elementor-addons/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/7fdd1b1c-84b5-451a-a921-80be3b154398?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6847",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-08-20T06:15:05.470",
        "lastModified": "2024-08-20T15:44:20.567",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Chatbot with ChatGPT WordPress plugin before 2.4.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users when submitting messages to the chatbot.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/baa860bb-3b7d-438a-ad54-92bf8e21e851/"
          }
        ]
      }
    }
  ]
}