{
  "totalResults": 8,
  "datePublished": "2024-08-02T17:00:04.732564Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-3827",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-08-02T06:15:53.847",
        "lastModified": "2024-08-02T12:59:43.990",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Spectra Pro plugin for WordPress is vulnerable to Stored Cross-Site Scripting via block ids in all versions up to, and including, 1.1.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wpspectra.com/product/spectra-pro/#spectra-pro-1-1-5-released"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/3fb6123c-2891-4cfd-8d68-a922c30d7600?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5595",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-08-02T06:15:54.263",
        "lastModified": "2024-08-02T12:59:43.990",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Essential Blocks  WordPress plugin before 4.7.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/f2b8f092-4fc0-4edc-ba0f-d4312c2e5dec/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-39392",
        "sourceIdentifier": "psirt@adobe.com",
        "published": "2024-08-02T07:16:08.883",
        "lastModified": "2024-08-02T12:59:43.990",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "InDesign Desktop versions ID18.5.2, ID19.3 and earlier are affected by a Heap-based Buffer Overflow vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.",
        "cweIds": [
          {
            "id": "CWE-122",
            "description": "Heap-based Buffer Overflow"
          }
        ],
        "references": [
          {
            "url": "https://helpx.adobe.com/security/products/indesign/apsb24-48.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-39396",
        "sourceIdentifier": "psirt@adobe.com",
        "published": "2024-08-02T07:16:09.270",
        "lastModified": "2024-08-02T12:59:43.990",
        "baseScore": 5.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.8,
        "impactScore": 3.6,
        "description": "InDesign Desktop versions ID18.5.2, ID19.3 and earlier are affected by an out-of-bounds read vulnerability that could lead to disclosure of sensitive memory. An attacker could leverage this vulnerability to bypass mitigations such as ASLR. Exploitation of this issue requires user interaction in that a victim must open a malicious file.",
        "cweIds": [
          {
            "id": "CWE-125",
            "description": "Out-of-bounds Read"
          }
        ],
        "references": [
          {
            "url": "https://helpx.adobe.com/security/products/indesign/apsb24-48.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3238",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-08-02T07:16:09.667",
        "lastModified": "2024-08-02T12:59:43.990",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The WordPress Menu Plugin â€” Superfly Responsive Menu plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 5.0.29. This is due to missing or incorrect nonce validation on the ajax_handle_delete_icons() function. This makes it possible for unauthenticated attackers to delete arbitrary files via a forged request granted they can trick a site administrator into performing an action such as clicking on a link. Please not the CSRF was patched in 5.0.28, however, adequate directory traversal protection wasn't introduced until 5.0.30.",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://codecanyon.net/item/superfly-responsive-wordpress-menu-plugin/8012790"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/3608fce3-0869-4516-ae08-68108f733c37?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42459",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-08-02T07:16:10.003",
        "lastModified": "2024-08-02T15:35:44.213",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "In the Elliptic package 6.5.6 for Node.js, EDDSA signature malleability occurs because there is a missing signature length check, and thus zero-valued bytes can be removed or appended.",
        "cweIds": [
          {
            "id": "CWE-347",
            "description": "Improper Verification of Cryptographic Signature"
          }
        ],
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/pull/317"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42460",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-08-02T07:16:10.120",
        "lastModified": "2024-08-02T16:35:53.760",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because there is a missing check for whether the leading bit of r and s is zero.",
        "cweIds": [
          {
            "id": "CWE-130",
            "description": "Improper Handling of Length Parameter Inconsistency"
          }
        ],
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/pull/317"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42461",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-08-02T07:16:10.230",
        "lastModified": "2024-08-02T12:59:43.990",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because BER-encoded signatures are allowed.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/pull/317"
          }
        ]
      }
    }
  ]
}