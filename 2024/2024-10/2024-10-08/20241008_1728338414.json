{
  "totalResults": 25,
  "datePublished": "2024-10-08T07:00:14.190109Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-31227",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T20:15:05.050",
        "lastModified": "2024-10-07T20:15:05.050",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.8,
        "impactScore": 3.6,
        "description": "Redis is an open source, in-memory database that persists on disk. An authenticated with sufficient privileges may create a malformed ACL selector which, when accessed, triggers a server panic and subsequent denial of service. The problem exists in Redis 7 prior to versions 7.2.6 and 7.4.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/redis/redis/commit/b351d5a3210e61cc3b22ba38a723d6da8f3c298a"
          },
          {
            "url": "https://github.com/redis/redis/security/advisories/GHSA-38p4-26x2-vqhh"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31228",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T20:15:05.277",
        "lastModified": "2024-10-07T20:15:05.277",
        "baseScore": 5.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.8,
        "impactScore": 3.6,
        "description": "Redis is an open source, in-memory database that persists on disk. Authenticated users can trigger a denial-of-service by using specially crafted, long string match patterns on supported commands such as `KEYS`, `SCAN`, `PSUBSCRIBE`, `FUNCTION LIST`, `COMMAND LIST` and ACL definitions. Matching of extremely long patterns may result in unbounded recursion, leading to stack overflow and process crash. This problem has been fixed in Redis versions 6.2.16, 7.2.6, and 7.4.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-674",
            "description": "Uncontrolled Recursion"
          }
        ],
        "references": [
          {
            "url": "https://github.com/redis/redis/commit/9317bf64659b33166a943ec03d5d9b954e86afb0"
          },
          {
            "url": "https://github.com/redis/redis/security/advisories/GHSA-66gq-c942-6976"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31449",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T20:15:05.507",
        "lastModified": "2024-10-07T20:15:05.507",
        "baseScore": 7.0,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.0,
        "impactScore": 5.9,
        "description": "Redis is an open source, in-memory database that persists on disk. An authenticated user may use a specially crafted Lua script to trigger a stack buffer overflow in the bit library, which may potentially lead to remote code execution. The problem exists in all versions of Redis with Lua scripting. This problem has been fixed in Redis versions 6.2.16, 7.2.6, and 7.4.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-121",
            "description": "Stack-based Buffer Overflow"
          },
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/redis/redis/commit/1f7c148be2cbacf7d50aa461c58b871e87cc5ed9"
          },
          {
            "url": "https://github.com/redis/redis/security/advisories/GHSA-whxg-wx83-85p5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45292",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T20:15:05.857",
        "lastModified": "2024-10-07T20:15:05.857",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 2.7,
        "description": "PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. `\\PhpOffice\\PhpSpreadsheet\\Writer\\Html` does not sanitize \"javascript:\" URLs from hyperlink `href` attributes, resulting in a Cross-Site Scripting vulnerability. This issue has been addressed in release versions 1.29.2, 2.1.1, and 2.3.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-r8w8-74ww-j4wh"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45293",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T20:15:06.100",
        "lastModified": "2024-10-07T20:15:06.100",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. The security scanner responsible for preventing XXE attacks in the XLSX reader can be bypassed by slightly modifying the XML structure, utilizing white-spaces. On servers that allow users to upload their own Excel (XLSX) sheets, Server files and sensitive information can be disclosed by providing a crafted sheet. The security scan function in src/PhpSpreadsheet/Reader/Security/XmlScanner.php contains a flawed XML encoding check to retrieve the input file's XML encoding in the toUtf8 function. The function searches for the XML encoding through a defined regex which looks for `encoding=\"*\"` and/or `encoding='*'`, if not found, it defaults to the UTF-8 encoding which bypasses the conversion logic. This logic can be used to pass a UTF-7 encoded XXE payload, by utilizing a whitespace before or after the = in the attribute definition. Sensitive information disclosure through the XXE on sites that allow users to upload their own excel spreadsheets, and parse them using PHPSpreadsheet's Excel parser. This issue has been addressed in release versions 1.29.1, 2.1.1, and 2.3.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-611",
            "description": "Improper Restriction of XML External Entity Reference"
          }
        ],
        "references": [
          {
            "url": "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-6hwr-6v2f-3m88"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47079",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T20:15:06.400",
        "lastModified": "2024-10-07T20:15:06.400",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 4.7,
        "description": "Meshtastic is an open source, off-grid, decentralized, mesh network built to run on affordable, low-power devices. Meshtastic firmware is an open source firmware implementation for the broader project. The remote hardware module of the firmware does not have proper checks to ensure a remote hardware control message was received should be considered valid. This issue has been addressed in release version 2.5.1. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-345",
            "description": "Insufficient Verification of Data Authenticity"
          }
        ],
        "references": [
          {
            "url": "https://github.com/meshtastic/firmware/security/advisories/GHSA-h8mh-p4r3-4jv7"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47971",
        "sourceIdentifier": "f946a70c-00eb-42ce-8e9b-634d1f7b5a6f",
        "published": "2024-10-07T20:15:06.607",
        "lastModified": "2024-10-07T20:15:06.607",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.0,
        "impactScore": 4.0,
        "description": "Improper error handling in firmware of some SSD DC Products may allow an attacker to enable denial of service.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.solidigm.com/support-page/support-security.htmlhttps://"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47972",
        "sourceIdentifier": "f946a70c-00eb-42ce-8e9b-634d1f7b5a6f",
        "published": "2024-10-07T20:15:06.797",
        "lastModified": "2024-10-07T20:15:06.797",
        "baseScore": 4.0,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.5,
        "impactScore": 1.4,
        "description": "Improper resource management in firmware of some Solidigm DC Products may allow an attacker to potentially control the performance of the resource.",
        "cweIds": null,
        "references": [
          {
            "url": "https://https://www.solidigm.com/support-page/support-security.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47976",
        "sourceIdentifier": "f946a70c-00eb-42ce-8e9b-634d1f7b5a6f",
        "published": "2024-10-07T20:15:06.977",
        "lastModified": "2024-10-07T20:15:06.977",
        "baseScore": 6.7,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.4,
        "impactScore": 5.8,
        "description": "Improper access removal handling in firmware of some Solidigm DC Products may allow an attacker with physical access to gain unauthorized access.",
        "cweIds": null,
        "references": [
          {
            "url": "https://https://www.solidigm.com/support-page/support-security.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43362",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:15.470",
        "lastModified": "2024-10-07T21:15:15.470",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.2,
        "description": "Cacti is an open source performance and fault management framework. The `fileurl` parameter is not properly sanitized when saving external links in `links.php` . Morever, the said fileurl is placed in some html code which is passed to the `print` function in `link.php` and `index.php`, finally leading to stored XSS. Users with the privilege to create external links can manipulate the `fileurl` parameter in the http post request while creating external links to perform stored XSS attacks. The vulnerability known as XSS (Cross-Site Scripting) occurs when an application allows untrusted user input to be displayed on a web page without proper validation or escaping. This issue has been addressed in release version 1.2.28. All users are advised to upgrade. There are no known workarounds for this issue.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Cacti/cacti/security/advisories/GHSA-wh9c-v56x-v77c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43363",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:15.743",
        "lastModified": "2024-10-07T21:15:15.743",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "Cacti is an open source performance and fault management framework. An admin user can create a device with a malicious hostname containing php code and repeat the installation process (completing only step 5 of the installation process is enough, no need to complete the steps before or after it) to use a php file as the cacti log file. After having the malicious hostname end up in the logs (log poisoning), one can simply go to the log file url to execute commands to achieve RCE. This issue has been addressed in version 1.2.28 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-94",
            "description": "Improper Control of Generation of Code ('Code Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Cacti/cacti/security/advisories/GHSA-gxq4-mv8h-6qj4"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43364",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:16.017",
        "lastModified": "2024-10-07T21:15:16.017",
        "baseScore": 5.7,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.1,
        "impactScore": 3.6,
        "description": "Cacti is an open source performance and fault management framework. The `title` parameter is not properly sanitized when saving external links in links.php . Morever, the said title parameter is stored in the database and reflected back to user in index.php, finally leading to stored XSS. Users with the privilege to create external links can manipulate the `title` parameter in the http post request while creating external links to perform stored XSS attacks. The vulnerability known as XSS (Cross-Site Scripting) occurs when an application allows untrusted user input to be displayed on a web page without proper validation or escaping. This issue has been addressed in release version 1.2.28. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Cacti/cacti/security/advisories/GHSA-fgc6-g8gc-wcg5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43365",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:16.247",
        "lastModified": "2024-10-07T21:15:16.247",
        "baseScore": 5.7,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.1,
        "impactScore": 3.6,
        "description": "Cacti is an open source performance and fault management framework. The`consolenewsection` parameter is not properly sanitized when saving external links in links.php . Morever, the said consolenewsection parameter is stored in the database and reflected back to user in `index.php`, finally leading to stored XSS. Users with the privilege to create external links can manipulate the “consolenewsection” parameter in the http post request while creating external links to perform stored XSS attacks. The vulnerability known as XSS (Cross-Site Scripting) occurs when an application allows untrusted user input to be displayed on a web page without proper validation or escaping. This issue has been addressed in release version 1.2.28. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Cacti/cacti/security/advisories/GHSA-49f2-hwx9-qffr"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43789",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:16.710",
        "lastModified": "2024-10-07T21:15:16.710",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Discourse is an open source platform for community discussion. A user can create a post with many replies, and then attempt to fetch them all at once. This can potentially reduce the availability of a Discourse instance. This problem has been patched in the latest version of Discourse. All users area are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://github.com/discourse/discourse/security/advisories/GHSA-62cq-cpmc-hvqq"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45051",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:16.930",
        "lastModified": "2024-10-07T21:15:16.930",
        "baseScore": 8.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.2,
        "description": "Discourse is an open source platform for community discussion. A maliciously crafted email address could allow an attacker to bypass domain-based restrictions and gain access to private sites, categories and/or groups. This issue has been patched in the latest stable, beta and tests-passed version of Discourse. All users area are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-287",
            "description": "Improper Authentication"
          }
        ],
        "references": [
          {
            "url": "https://github.com/discourse/discourse/security/advisories/GHSA-2vjv-pgh4-6rmq"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45060",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:17.170",
        "lastModified": "2024-10-07T21:15:17.170",
        "baseScore": 7.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 4.2,
        "description": "PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. One of the sample scripts in PhpSpreadsheet is susceptible to a cross-site scripting (XSS) vulnerability due to improper handling of input where a number is expected leading to formula injection. The code in in `45_Quadratic_equation_solver.php` concatenates the user supplied parameters directly into spreadsheet formulas. This allows an attacker to take control over the formula and output unsanitized data into the page, resulting in JavaScript execution. This issue has been addressed in release versions 1.29.2, 2.1.1, and 2.3.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/PHPOffice/PhpSpreadsheet/blob/d50b8b5de7e30439fb57eae7df9ea90e79fa0f2d/samples/Basic/45_Quadratic_equation_solver.php#L56"
          },
          {
            "url": "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-v66g-p9x6-v98p"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45290",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:17.397",
        "lastModified": "2024-10-07T21:15:17.397",
        "baseScore": 7.7,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.1,
        "impactScore": 4.0,
        "description": "PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. It's possible for an attacker to construct an XLSX file which links media from external URLs. When opening the XLSX file, PhpSpreadsheet retrieves the image size and type by reading the file contents, if the provided path is a URL. By using specially crafted `php://filter` URLs an attacker can leak the contents of any file or URL. Note that this vulnerability is different from GHSA-w9xv-qf98-ccq4, and resides in a different component. An attacker can access any file on the server, or leak information form arbitrary URLs, potentially exposing sensitive information such as AWS IAM credentials. This issue has been addressed in release versions 1.29.2, 2.1.1, and 2.3.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-36",
            "description": "Absolute Path Traversal"
          },
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-5gpr-w2p5-6m37"
          },
          {
            "url": "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-w9xv-qf98-ccq4"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45291",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:17.633",
        "lastModified": "2024-10-07T21:15:17.633",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.8,
        "impactScore": 4.0,
        "description": "PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. It's possible for an attacker to construct an XLSX file that links images from arbitrary paths. When embedding images has been enabled in HTML writer with `$writer->setEmbedImages(true);` those files will be included in the output as `data:` URLs, regardless of the file's type. Also URLs can be used for embedding, resulting in a Server-Side Request Forgery vulnerability. When embedding images has been enabled, an attacker can read arbitrary files on the server and perform arbitrary HTTP GET requests. Note that any PHP protocol wrappers can be used, meaning that if for example the `expect://` wrapper is enabled, also remote code execution is possible. This issue has been addressed in release versions 1.29.2, 2.1.1, and 2.3.0. All users are advised to upgrade. there are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-36",
            "description": "Absolute Path Traversal"
          },
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-w9xv-qf98-ccq4"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45297",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:17.870",
        "lastModified": "2024-10-07T21:15:17.870",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Discourse is an open source platform for community discussion. Users can see topics with a hidden tag if they know the label/name of that tag. This issue has been patched in the latest stable, beta and tests-passed version of Discourse. All users area are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-269",
            "description": "Improper Privilege Management"
          }
        ],
        "references": [
          {
            "url": "https://github.com/discourse/discourse/security/advisories/GHSA-58xw-3qr3-53gp"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45919",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-10-07T21:15:18.083",
        "lastModified": "2024-10-07T21:15:18.083",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A security flaw has been discovered in Solvait version 24.4.2 that allows an attacker to elevate their privileges. By manipulating the Request ID and Action Type parameters in /AssignToMe/SetAction, an attacker can bypass approval workflows leading to unauthorized access to sensitive information or approval of fraudulent requests.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/ipxsec/28afaf965389283a68433c7afd54d17a"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47610",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:18.163",
        "lastModified": "2024-10-07T21:15:18.163",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.2,
        "description": "InvenTree is an Open Source Inventory Management System. In affected versions of InvenTree it is possible for a registered user to store javascript in markdown notes fields, which are then displayed to other logged in users who visit the same page and executed. The vulnerability has been addressed as follows: 1. HTML sanitization has been enabled in the front-end markdown rendering library - `easymde`. 2. Stored markdown is also validated on the backend, to ensure that malicious markdown is not stored in the database. These changes are available in release versions 0.16.5 and later. All users are advised to upgrade. There are no workarounds, an update is required to get the new validation functions.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/inventree/InvenTree/commit/6e37f0cd8ba5fc527412f18f66cd6a37015fa690"
          },
          {
            "url": "https://github.com/inventree/InvenTree/security/advisories/GHSA-wp3m-jhgv-rhqr"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47772",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-07T21:15:18.383",
        "lastModified": "2024-10-07T21:15:18.383",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 2.5,
        "description": "Discourse is an open source platform for community discussion. An attacker can execute arbitrary JavaScript on users' browsers by sending a maliciously crafted chat message and replying to it. This issue only affects sites with CSP disabled. This problem is patched in the latest version of Discourse. All users are advised to upgrade. Users unable to upgrade should ensure CSP is enabled on the forum. Users who do upgrade should also consider enabling a CSP as well as a proactive measure.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"
          },
          {
            "url": "https://github.com/discourse/discourse/security/advisories/GHSA-67mh-xhmf-c56h"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47967",
        "sourceIdentifier": "f946a70c-00eb-42ce-8e9b-634d1f7b5a6f",
        "published": "2024-10-07T21:15:18.617",
        "lastModified": "2024-10-07T22:15:04.300",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.8,
        "impactScore": 3.6,
        "description": "Improper resource initialization handling in firmware of some Solidigm DC Products may allow an attacker to potentially enable denial of service.",
        "cweIds": null,
        "references": [
          {
            "url": "https://https://www.solidigm.com/support-page/support-security.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47973",
        "sourceIdentifier": "f946a70c-00eb-42ce-8e9b-634d1f7b5a6f",
        "published": "2024-10-07T21:15:18.727",
        "lastModified": "2024-10-07T21:15:18.727",
        "baseScore": 5.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.4,
        "impactScore": 3.6,
        "description": "In some Solidigm DC Products, a defect in device overprovisioning may provide information disclosure to an attacker.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.solidigm.com/support-page/support-security.htmlhttps://"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47974",
        "sourceIdentifier": "f946a70c-00eb-42ce-8e9b-634d1f7b5a6f",
        "published": "2024-10-07T21:15:18.927",
        "lastModified": "2024-10-07T21:15:18.927",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.8,
        "impactScore": 3.6,
        "description": "Race condition during resource shutdown in some Solidigm DC Products may allow an attacker to potentially enable denial of service.",
        "cweIds": null,
        "references": [
          {
            "url": "https://https://www.solidigm.com/support-page/support-security.html"
          }
        ]
      }
    }
  ]
}