{
  "totalResults": 16,
  "datePublished": "2024-10-08T15:00:37.803999Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-37179",
        "sourceIdentifier": "cna@sap.com",
        "published": "2024-10-08T04:15:06.600",
        "lastModified": "2024-10-08T04:15:06.600",
        "baseScore": 7.7,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.1,
        "impactScore": 4.0,
        "description": "SAP BusinessObjects Business Intelligence Platform allows an authenticated user to send a specially crafted request to the Web Intelligence Reporting Server to download any file from the machine hosting the service, causing high impact on confidentiality of the application.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          }
        ],
        "references": [
          {
            "url": "https://me.sap.com/notes/3478615"
          },
          {
            "url": "https://url.sap/sapsecuritypatchday"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-39806",
        "sourceIdentifier": "scy@openharmony.io",
        "published": "2024-10-08T04:15:07.183",
        "lastModified": "2024-10-08T04:15:07.183",
        "baseScore": 5.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.8,
        "impactScore": 3.6,
        "description": "in OpenHarmony v4.1.0 and prior versions allow a local attacker cause information leak through out-of-bounds Read.",
        "cweIds": [
          {
            "id": "CWE-125",
            "description": "Out-of-bounds Read"
          }
        ],
        "references": [
          {
            "url": "https://gitee.com/openharmony/security/blob/master/zh/security-disclosure/2024/2024-10.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-39831",
        "sourceIdentifier": "scy@openharmony.io",
        "published": "2024-10-08T04:15:07.447",
        "lastModified": "2024-10-08T04:15:07.447",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.8,
        "impactScore": 2.5,
        "description": "in OpenHarmony v4.1.0 allow a local attacker with high privileges arbitrary code execution in pre-installed apps through use after free.",
        "cweIds": [
          {
            "id": "CWE-416",
            "description": "Use After Free"
          }
        ],
        "references": [
          {
            "url": "https://gitee.com/openharmony/security/blob/master/zh/security-disclosure/2024/2024-10.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43696",
        "sourceIdentifier": "scy@openharmony.io",
        "published": "2024-10-08T04:15:07.680",
        "lastModified": "2024-10-08T04:15:07.680",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "in OpenHarmony v4.1.0 and prior versions allow a local attacker cause DOS by memory leak.",
        "cweIds": [
          {
            "id": "CWE-401",
            "description": "Missing Release of Memory after Effective Lifetime"
          }
        ],
        "references": [
          {
            "url": "https://gitee.com/openharmony/security/blob/master/zh/security-disclosure/2024/2024-10.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43697",
        "sourceIdentifier": "scy@openharmony.io",
        "published": "2024-10-08T04:15:07.913",
        "lastModified": "2024-10-08T04:15:07.913",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "in OpenHarmony v4.1.0 and prior versions allow a local attacker cause DOS through improper input.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://gitee.com/openharmony/security/blob/master/zh/security-disclosure/2024/2024-10.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45277",
        "sourceIdentifier": "cna@sap.com",
        "published": "2024-10-08T04:15:08.133",
        "lastModified": "2024-10-08T10:15:04.770",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The SAP HANA Node.js client package versions from 2.0.0 before 2.21.31 is impacted by Prototype Pollution vulnerability allowing an attacker to add arbitrary properties to global object prototypes. This is due to improper user input sanitation when using the nestTables feature causing low impact on the availability of the application. This has no impact on Confidentiality and Integrity.",
        "cweIds": [
          {
            "id": "CWE-1321",
            "description": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')"
          }
        ],
        "references": [
          {
            "url": "https://me.sap.com/notes/3520100"
          },
          {
            "url": "https://url.sap/sapsecuritypatchday"
          },
          {
            "url": "https://www.npmjs.com/package/@sap/hana-client?activeTab=code"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45278",
        "sourceIdentifier": "cna@sap.com",
        "published": "2024-10-08T04:15:08.400",
        "lastModified": "2024-10-08T04:15:08.400",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 2.7,
        "description": "SAP Commerce Backoffice does not sufficiently encode user controlled inputs, resulting in Cross-Site Scripting (XSS) vulnerability. After successful exploitation, an attacker can cause limited impact on confidentiality and integrity of the application.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://me.sap.com/notes/3507545"
          },
          {
            "url": "https://url.sap/sapsecuritypatchday"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45282",
        "sourceIdentifier": "cna@sap.com",
        "published": "2024-10-08T04:15:08.633",
        "lastModified": "2024-10-08T04:15:08.633",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "Fields which are in 'read only' state in Bank Statement Draft in Manage Bank Statements application, could be modified by MERGE method. The property of an OData entity representing assumably immutable method is not protected against external modifications leading to integrity violations. Confidentiality and Availability are not impacted.",
        "cweIds": [
          {
            "id": "CWE-650",
            "description": "Trusting HTTP Permission Methods on the Server Side"
          }
        ],
        "references": [
          {
            "url": "https://me.sap.com/notes/3251893"
          },
          {
            "url": "https://url.sap/sapsecuritypatchday"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45382",
        "sourceIdentifier": "scy@openharmony.io",
        "published": "2024-10-08T04:15:08.873",
        "lastModified": "2024-10-08T04:15:08.873",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "in OpenHarmony v4.1.0 and prior versions allow a local attacker cause DOS through out-of-bounds write.",
        "cweIds": [
          {
            "id": "CWE-787",
            "description": "Out-of-bounds Write"
          }
        ],
        "references": [
          {
            "url": "https://gitee.com/openharmony/security/blob/master/zh/security-disclosure/2024/2024-10.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47594",
        "sourceIdentifier": "cna@sap.com",
        "published": "2024-10-08T04:15:09.087",
        "lastModified": "2024-10-08T04:15:09.087",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 2.7,
        "description": "SAP NetWeaver Enterprise Portal (KMC) does not sufficiently encode user-controlled inputs, resulting in Cross-Site Scripting vulnerability in KMC servlet. An attacker could craft a script and trick the user into clicking it. When a victim who is registered on the portal clicks on such link, confidentiality and integrity of their web browser session could be compromised.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://me.sap.com/notes/3503462"
          },
          {
            "url": "https://url.sap/sapsecuritypatchday"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8925",
        "sourceIdentifier": "security@php.net",
        "published": "2024-10-08T04:15:09.450",
        "lastModified": "2024-10-08T04:15:09.450",
        "baseScore": 3.1,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.6,
        "impactScore": 1.4,
        "description": "In PHP versionsÂ 8.1.* before 8.1.30, 8.2.* before 8.2.24, 8.3.* before 8.3.12, erroneous parsing of multipart form data contained in an HTTP POST request could lead to legitimate data not being processed. This could lead to malicious attacker able to control part of the submitted data being able to exclude portion of other data, potentially leading to erroneous application behavior.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/php/php-src/security/advisories/GHSA-9pqp-7h25-4f32"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8926",
        "sourceIdentifier": "security@php.net",
        "published": "2024-10-08T04:15:10.637",
        "lastModified": "2024-10-08T04:15:10.637",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.2,
        "impactScore": 5.9,
        "description": "In PHP versions 8.1.* before 8.1.30, 8.2.* before 8.2.24, 8.3.* before 8.3.12,Â when using a certain non-standard configurations of Windows codepages, the fixes forÂ  CVE-2024-4577 https://github.com/advisories/GHSA-vxpp-6299-mxw3 Â may still be bypassed and the same command injection related to Windows \"Best Fit\" codepage behavior can be achieved. ThisÂ may allow a malicious user to pass options to PHP binary being run, and thus reveal the source code of scripts, run arbitrary PHP code on the server, etc.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/advisories/GHSA-vxpp-6299-mxw3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8927",
        "sourceIdentifier": "security@php.net",
        "published": "2024-10-08T04:15:10.867",
        "lastModified": "2024-10-08T04:15:10.867",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "In PHP versions 8.1.* before 8.1.30, 8.2.* before 8.2.24, 8.3.* before 8.3.12,Â HTTP_REDIRECT_STATUS variable is used to check whether or not CGI binary is being run by the HTTP server. However, in certain scenarios, the content of this variable can be controlled by the request submitter via HTTP headers, which can lead toÂ cgi.force_redirect option not being correctly applied. In certain configurations this may lead to arbitrary file inclusion in PHP.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/php/php-src/security/advisories/GHSA-94p6-54jq-9mwp"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9026",
        "sourceIdentifier": "security@php.net",
        "published": "2024-10-08T04:15:11.060",
        "lastModified": "2024-10-08T04:15:11.060",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "In PHP versions 8.1.* before 8.1.30, 8.2.* before 8.2.24, 8.3.* before 8.3.12, when using PHP-FPM SAPI and it isÂ configured to catch workers output through catch_workers_output = yes,Â it may be possible to pollute the final log orÂ remove up to 4 characters from the log messages by manipulating log message content. Additionally, ifÂ PHP-FPM is configured to use syslog output, it may be possible to further remove log data using the same vulnerability.",
        "cweIds": [
          {
            "id": "CWE-117",
            "description": "Improper Output Neutralization for Logs"
          },
          {
            "id": "CWE-158",
            "description": "Improper Neutralization of Null Byte or NUL Character"
          }
        ],
        "references": [
          {
            "url": "https://github.com/php/php-src/security/advisories/GHSA-865w-9rf3-2wh5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-21532",
        "sourceIdentifier": "report@snyk.io",
        "published": "2024-10-08T05:15:13.920",
        "lastModified": "2024-10-08T05:15:13.920",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.4,
        "description": "All versions of the package ggit are vulnerable to Command Injection via the fetchTags(branch) API, which allows user input to specify the branch to be fetched and then concatenates this string along with a git command which is then passed to the unsafe exec() Node.js child process API.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://gist.github.com/lirantal/d8f87b366d2078e6118ab7bf2b005f02"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JS-GGIT-5731320"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-21533",
        "sourceIdentifier": "report@snyk.io",
        "published": "2024-10-08T05:15:14.180",
        "lastModified": "2024-10-08T05:15:14.180",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 2.5,
        "description": "All versions of the package ggit are vulnerable to Arbitrary Argument Injection via the clone() API, which allows specifying the remote URL to clone and the file on disk to clone to. The library does not sanitize for user input or validate a given URL scheme, nor does it properly pass command-line flags to the git binary using the double-dash POSIX characters (--) to communicate the end of options.",
        "cweIds": [
          {
            "id": "CWE-88",
            "description": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')"
          }
        ],
        "references": [
          {
            "url": "https://gist.github.com/lirantal/80c6d59ac1b682a32bc9d2ff92044bb9"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JS-GGIT-5731319"
          }
        ]
      }
    }
  ]
}