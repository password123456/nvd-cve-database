{
  "totalResults": 7,
  "datePublished": "2024-10-05T01:00:08.113707Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-9410",
        "sourceIdentifier": "vulnreport@tenable.com",
        "published": "2024-10-04T14:15:05.577",
        "lastModified": "2024-10-04T14:15:05.577",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Ada.cx's Sentry configuration allowed for blind server-side request forgeries (SSRF) through the use of a data scraping endpoint.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://www.tenable.com/security/research/tra-2024-41"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9514",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-10-04T14:15:05.910",
        "lastModified": "2024-10-04T14:15:05.910",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "A vulnerability was found in D-Link DIR-605L 2.13B01 BETA. It has been declared as critical. This vulnerability affects the function formSetDomainFilter of the file /goform/formSetDomainFilter. The manipulation of the argument curTime leads to buffer overflow. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.",
        "cweIds": [
          {
            "id": "CWE-120",
            "description": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/noahze01/IoT-vulnerable/blob/main/D-Link/DIR-605L/formSetDomainFilter.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.279214"
          },
          {
            "url": "https://vuldb.com/?id.279214"
          },
          {
            "url": "https://vuldb.com/?submit.413874"
          },
          {
            "url": "https://www.dlink.com/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9515",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-10-04T14:15:06.210",
        "lastModified": "2024-10-04T14:15:06.210",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "A vulnerability was found in D-Link DIR-605L 2.13B01 BETA. It has been classified as critical. This affects the function formSetQoS of the file /goform/formSetQoS. The manipulation of the argument curTime leads to buffer overflow. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.",
        "cweIds": [
          {
            "id": "CWE-120",
            "description": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/noahze01/IoT-vulnerable/blob/main/D-Link/DIR-605L/formSetQoS.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.279213"
          },
          {
            "url": "https://vuldb.com/?id.279213"
          },
          {
            "url": "https://vuldb.com/?submit.413878"
          },
          {
            "url": "https://www.dlink.com/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47183",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-04T15:15:13.010",
        "lastModified": "2024-10-04T15:15:13.010",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. If the Parse Server option allowCustomObjectId: true is set, an attacker that is allowed to create a new user can set a custom object ID for that new user that exploits the vulnerability and acquires privileges of a specific role. This vulnerability is fixed in 6.5.9 and 7.3.0.",
        "cweIds": [
          {
            "id": "CWE-285",
            "description": "Improper Authorization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/parse-community/parse-server/commit/13ee52f0d19ef3a3524b3d79aea100e587eb3cfc"
          },
          {
            "url": "https://github.com/parse-community/parse-server/commit/1bfbccf9ee7ea77533b2b2aa7c4c69f3bd35e66f"
          },
          {
            "url": "https://github.com/parse-community/parse-server/pull/9317"
          },
          {
            "url": "https://github.com/parse-community/parse-server/pull/9318"
          },
          {
            "url": "https://github.com/parse-community/parse-server/security/advisories/GHSA-8xq9-g7ch-35hg"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47765",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-04T15:15:13.213",
        "lastModified": "2024-10-04T15:15:13.213",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Minecraft MOTD Parser is a PHP library to parse minecraft server motd. The HtmlGenerator class is subject to potential cross-site scripting (XSS) attack through a parsed malformed Minecraft server MOTD. The HtmlGenerator iterates through objects of MotdItem that are contained in an object of MotdItemCollection to generate a HTML string. An attacker can make malicious inputs to the color and text properties of MotdItem to inject own HTML into a web page during web page generation. For example by sending a malicious MOTD from a Minecraft server under their control that was queried and passed to the HtmlGenerator. This XSS vulnerability exists because the values of these properties are neither filtered nor escaped. This vulnerability is fixed in 1.0.6.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          },
          {
            "id": "CWE-80",
            "description": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/jgniecki/MinecraftMotdParser/commit/b0ab9d68a964cd3d74977f39a9e7af0a94509f7c"
          },
          {
            "url": "https://github.com/jgniecki/MinecraftMotdParser/security/advisories/GHSA-q898-frwq-f3qp"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47768",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-04T15:15:13.323",
        "lastModified": "2024-10-04T15:15:13.323",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Lif Authentication Server is a server used by Lif to do various tasks regarding Lif accounts. This vulnerability has to do with the account recovery system where there does not appear to be a check to make sure the user has been sent the recovery email and entered the correct code. If the attacker knew the email of the target, they could supply the email and immediately prompt the server to update the password without ever needing the code. This issue has been patched in version 1.7.3.",
        "cweIds": [
          {
            "id": "CWE-287",
            "description": "Improper Authentication"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Lif-Platforms/Lif-Auth-Server/commit/8dbd7cad914a8b939451c652bfb716aa796f754e"
          },
          {
            "url": "https://github.com/Lif-Platforms/Lif-Auth-Server/security/advisories/GHSA-hmv6-8fg8-7m6f"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47769",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-10-04T15:15:13.427",
        "lastModified": "2024-10-04T15:15:13.427",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "IDURAR is open source ERP CRM accounting invoicing software. The vulnerability exists in the corePublicRouter.js file. Using the reference usage here, it is identified that the public endpoint is accessible to an unauthenticated user. The user's input is directly appended to the join statement without additional checks. This allows an attacker to send URL encoded malicious payload. The directory structure can be escaped to read system files by adding an encoded string (payload) at subpath location.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          {
            "id": "CWE-23",
            "description": "Relative Path Traversal"
          }
        ],
        "references": [
          {
            "url": "https://github.com/idurar/idurar-erp-crm/commit/949bc6fe31f3175c9e1864d30cf6c8110179ac14"
          },
          {
            "url": "https://github.com/idurar/idurar-erp-crm/security/advisories/GHSA-948g-2vm7-mfv7"
          }
        ]
      }
    }
  ]
}