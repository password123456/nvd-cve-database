{
  "totalResults": 36,
  "datePublished": "2024-10-01T19:00:09.793666Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-7432",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:02.453",
        "lastModified": "2024-10-01T08:15:02.453",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Unseen Blog theme for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.0.0 via deserialization of untrusted input. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.",
        "cweIds": [
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/themes/unseen-blog/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1a14b86f-a5c8-4ec2-9940-68a37a6c4a86?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7433",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:02.727",
        "lastModified": "2024-10-01T08:15:02.727",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Empowerment theme for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.0.2 via deserialization of untrusted input. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.",
        "cweIds": [
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/themes/empowerment/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/3d96d38a-7f0e-4e47-ba49-727705eaaac6?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7434",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:02.943",
        "lastModified": "2024-10-01T08:15:02.943",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The UltraPress theme for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.2.1 via deserialization of untrusted input. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.",
        "cweIds": [
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/themes/ultrapress/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/c9cf97a6-38bb-4499-98f0-ca2b7111f654?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7869",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:03.167",
        "lastModified": "2024-10-01T08:15:03.167",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 2.7,
        "description": "The 123.chat - Video Chat plugin for WordPress is vulnerable to Stored Cross-Site Scripting in all versions up to, and including, 1.3.1 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/123-chat-videochat/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1d4469e4-5d99-4a56-bde8-9a0aaca7794f?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8548",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:03.400",
        "lastModified": "2024-10-01T08:15:03.400",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "The KB Support – WordPress Help Desk and Knowledge Base plugin for WordPress is vulnerable to unauthorized modification and loss of data due to a missing capability check on several functions in all versions up to, and including, 1.6.6. This makes it possible for authenticated attackers, with Subscriber-level access and above, to perform multiple administrative actions, such as replying to arbitrary tickets, updating the status of any post, deleting any post, adding notes to tickets, flagging or unflagging tickets, and adding or removing ticket participants.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L138"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L172"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L211"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L240"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L458"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L531"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L580"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L605"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L630"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L649"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L801"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L869"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/5fb90b3b-08bd-4887-a6bf-054b42d3e403?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8632",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:03.610",
        "lastModified": "2024-10-01T08:15:03.610",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 2.5,
        "description": "The KB Support – WordPress Help Desk and Knowledge Base plugin for WordPress is vulnerable to unauthorized access and modification of data due to a missing capability check on the 'kbs_ajax_load_front_end_replies' and 'kbs_ajax_mark_reply_as_read' functions in all versions up to, and including, 1.6.6. This makes it possible for unauthenticated attackers to read replies of any ticket, and mark any reply as read.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L342"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/kb-support/trunk/includes/ajax-functions.php#L439"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/767b1234-5b4a-4baa-9048-7b2e413cdba5?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8675",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:03.820",
        "lastModified": "2024-10-01T08:15:03.820",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Soumettre.fr plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the soumettre_disconnect_gateway function in all versions up to, and including, 2.1.2. This makes it possible for authenticated attackers, with Subscriber-level access and above, to disconnect the gateway and delete the API key.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/soumettre-fr/trunk/admin/class-soumettre-admin.php#L276"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ad05b088-977e-4f24-b843-dc65f1aa60e9?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8718",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:04.030",
        "lastModified": "2024-10-01T08:15:04.030",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The Gravity Forms Toolbar plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'tab' parameter in all versions up to, and including, 1.7.0 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/gravity-forms-toolbar/tags/1.7.0/admin/form.php#L25"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/gravity-forms-toolbar/tags/1.7.0/admin/form.php#L44"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/4d1c6daf-1799-4f8a-81e3-ef3968f41b8e?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8720",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:04.237",
        "lastModified": "2024-10-01T08:15:04.237",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The RumbleTalk Live Group Chat – HTML5 plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'rumbletalk-admin-button' shortcode in all versions up to, and including, 6.3.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/rumbletalk-chat-a-chat-with-themes/trank/public/class-rumbletalk-public.php#L128"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/4e620ae8-03fc-43b5-8e8f-5b0884e8eefb?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8727",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:04.433",
        "lastModified": "2024-10-01T08:15:04.433",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The DK PDF plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.9.6. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/dk-pdf/trunk/includes/class-dkpdf-settings.php#L420"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d71cdd64-7cd6-4b1a-ae8d-e9bf78e630c7?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8728",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:04.637",
        "lastModified": "2024-10-01T08:15:04.637",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The Easy Load More plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.0.3. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/easy-load-more/trunk/includes/class-easy-load-more-settings.php#L268"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d890e7a5-ea9f-40e5-9549-a6f26421b043?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8989",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:04.840",
        "lastModified": "2024-10-01T08:15:04.840",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Free Responsive Testimonials, Social Proof Reviews, and Customer Reviews – Stars Testimonials plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's stars_testimonials shortcode in all versions up to, and including, 3.3.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/stars-testimonials-with-slider-and-masonry-grid/trunk/plugin.class.php#L1281"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3159818/"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3159818/#file8"
          },
          {
            "url": "https://wordpress.org/plugins/stars-testimonials-with-slider-and-masonry-grid/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/b406f0b8-16b5-49ca-88d8-7717bef1ae61?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8990",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:05.060",
        "lastModified": "2024-10-01T08:15:05.060",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Geo Mashup plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's geo_mashup_visible_posts_list shortcode in all versions up to, and including, 1.13.13 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/geo-mashup/trunk/geo-mashup.php#L1755"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3159868/"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3159868/#file0"
          },
          {
            "url": "https://wordpress.org/plugins/geo-mashup/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/88e74cb2-7b6f-43ac-bb30-4763c5afe493?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9106",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:05.267",
        "lastModified": "2024-10-01T08:15:05.267",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The Wechat Social login plugin for WordPress is vulnerable to authentication bypass in versions up to, and including, 1.3.0. This is due to insufficient verification on the user being supplied during the social login. This makes it possible for unauthenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the user id. This is only exploitable if the app secret is not set, so it has a default empty value.",
        "cweIds": [
          {
            "id": "CWE-288",
            "description": "Authentication Bypass Using an Alternate Path or Channel"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wechat-social-login/trunk/add-ons/social-qq/class-xh-social-channel-qq.php?rev=2080785#L284"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1bd44471-1a9c-4465-a52a-be64d51e7ea1?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9108",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:05.480",
        "lastModified": "2024-10-01T08:15:05.480",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The Wechat Social login plugin for WordPress is vulnerable to arbitrary file uploads due to insufficient file type validation in the 'convert_remoteimage_to_local' function in versions up to, and including, 1.3.0. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wechat-social-login/trunk/includes/social/class-xh-social-wp-api.php?rev=2111074#L39"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/06881386-3c92-426b-948d-58e8a8bee624?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9119",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:05.690",
        "lastModified": "2024-10-01T08:15:05.690",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The SVG Complete plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 1.0.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/svg-complete/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0f8e1495-c5e1-4bb9-92e9-b27b9b997a5f?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9145",
        "sourceIdentifier": "9947ef80-c5d5-474a-bbab-97341a59000e",
        "published": "2024-10-01T08:15:05.913",
        "lastModified": "2024-10-01T14:35:05.940",
        "baseScore": 0.0,
        "baseSeverity": "NONE",
        "exploitabilityScore": 1.8,
        "impactScore": 0.0,
        "description": "Wiz Code Visual Studio Code extension in versions 1.0.0 up to 1.5.3 and Wiz (legacy) Visual Studio Code extension in versions 0.13.0 up to 0.17.8 are vulnerable to local command injection if the user opens a maliciously crafted Dockerfile located in a path that has been marked as a \"trusted folder\" within Visual Studio Code, and initiates a manual scan of the file.",
        "cweIds": [
          {
            "id": "CWE-77",
            "description": "Improper Neutralization of Special Elements used in a Command ('Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://marketplace.visualstudio.com/items/WizCloud.wiz-vscode/changelog"
          },
          {
            "url": "https://marketplace.visualstudio.com/items/WizCloud.wizcli-vscode/changelog"
          },
          {
            "url": "https://www.wiz.io/security-advisories"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9267",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:06.103",
        "lastModified": "2024-10-01T08:15:06.103",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The Easy WordPress Subscribe – Optin Hound plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.4.3. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/opt-in-hound/trunk/includes/subscribers/views/view-submenu-page-subscribers.php#L17"
          },
          {
            "url": "https://wordpress.org/plugins/opt-in-hound/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/b91ec428-8444-4304-8901-4bc3ef146e3e?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9269",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:06.313",
        "lastModified": "2024-10-01T08:15:06.313",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Relogo plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 0.4.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/relogo/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/12515236-753e-49e8-b8c8-b0c8831c6005?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9272",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:06.510",
        "lastModified": "2024-10-01T08:15:06.510",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The R Animated Icon Plugin plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 1.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/r-animated-icon/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/56fd8166-da22-4a0b-a23f-41817acba6df?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9274",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:06.723",
        "lastModified": "2024-10-01T08:15:06.723",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Elastik Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 0.27.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/elastik-page-builder/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/315687d4-9125-440b-9d53-81d71e56d4ef?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9304",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T08:15:06.943",
        "lastModified": "2024-10-01T08:15:06.943",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The LocateAndFilter plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 1.6.14 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/locateandfilter/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/a10ee67a-7f5f-43dd-8f5c-c0e92706c453?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8288",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:02.850",
        "lastModified": "2024-10-01T09:15:02.850",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Guten Post Layout – An Advanced Post Grid Collection for WordPress Gutenberg plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘align’ attribute within the 'wp:guten-post-layout/post-grid' Gutenberg block in all versions up to, and including, 1.2.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/guten-post-layout/trunk/src/blocks/post-grid/post-grid.php#L27"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/guten-post-layout/trunk/src/blocks/post-grid/post-grid.php#L300"
          },
          {
            "url": "https://wordpress.org/plugins/guten-post-layout/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/5d6d9852-424a-4d98-9926-e849bef99c2d?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8324",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:03.293",
        "lastModified": "2024-10-01T09:15:03.293",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The XO Slider plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘get_slider’ function in all versions up to, and including, 3.8.6 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/xo-liteslider/tags/3.8.6/inc/class-xo-slider.php#L247"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/xo-liteslider/tags/3.8.6/inc/class-xo-slider.php#L315"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/be51c54d-b0f7-42b2-b9b3-1b5832e10a6b?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8430",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:03.790",
        "lastModified": "2024-10-01T09:15:03.790",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Spice Starter Sites plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the spice_starter_sites_importer_creater function in all versions up to, and including, 1.2.5. This makes it possible for unauthenticated attackers to import demo content.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/spice-starter-sites/tags/1.2.5/spice-starter-sites.php#L1123"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ec52337f-bdd1-4632-853b-da86d64751e7?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8786",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:04.300",
        "lastModified": "2024-10-01T09:15:04.300",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The Auto Featured Image from Title plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 2.3. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/auto-featured-image-from-title/trunk/auto-featured-image-from-title.php#L822"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/a2bf6102-458f-4930-8880-baa96afb1c15?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8793",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:04.770",
        "lastModified": "2024-10-01T09:15:04.770",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The Store Exporter for WooCommerce – Export Products, Export Orders, Export Subscriptions, and More plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 2.7.2.1. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/woocommerce-exporter/tags/2.7.2.1/includes/settings.php#L195"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/7d3c44eb-ef25-43f5-a872-6ef52c3d9c1f?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8799",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:05.220",
        "lastModified": "2024-10-01T09:15:05.220",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The Custom Banners plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 3.3. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/custom-banners/trunk/include/tgmpa/init.php#L96"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/49618d9f-e6d8-40d5-b19f-7ce987939172?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9018",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:05.610",
        "lastModified": "2024-10-01T09:15:05.610",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The WP Easy Gallery – WordPress Gallery Plugin plugin for WordPress is vulnerable to time-based SQL Injection via the ‘key’ parameter in all versions up to, and including, 4.8.5 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-easy-gallery/trunk/wp-easy-gallery.php#L866"
          },
          {
            "url": "https://wordpress.org/plugins/wp-easy-gallery/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/a1c4c632-66f2-4987-b7da-048dbe4a3044?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9209",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:06.110",
        "lastModified": "2024-10-01T09:15:06.110",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The WP Search Analytics plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.4.10. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/search-analytics/tags/1.4.9/admin/includes/class.stats-table.php#L153"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/275268d6-5b08-441d-9924-3c99682b27d4?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9220",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:06.613",
        "lastModified": "2024-10-01T09:15:06.613",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The LH Copy Media File plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.08. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/lh-copy-media-file/trunk/lh-copy-media-file.php#L31"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/9911e99e-0b3b-4be1-b8cd-28593b6d12ad?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9224",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:07.190",
        "lastModified": "2024-10-01T09:15:07.190",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "The Hello World plugin for WordPress is vulnerable to Arbitrary File Reading in all versions up to, and including, 2.1.1 via the hello_world_lyric() function. This makes it possible for authenticated attackers, with subscriber-level access and above, to read the contents of arbitrary files on the server, which can contain sensitive information.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/hello-world/tags/2.1.1/hello-world.php#L113"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/hello-world/tags/2.1.1/hello-world.php#L35"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2f58df1f-66f7-4e3d-af6d-08174653a2ad?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9228",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:07.750",
        "lastModified": "2024-10-01T09:15:07.750",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The Loggedin – Limit Active Logins plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.3.1. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link. This is only exploitable when the leave a review notice is present.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/loggedin/tags/1.3.1/includes/class-loggedin-admin.php#L255"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/59707c64-a34c-45bc-bbbe-d447fe2ca6ab?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9241",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:08.287",
        "lastModified": "2024-10-01T09:15:08.287",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The PDF Image Generator plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.5.6. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/pdf-image-generator/tags/1.5.6/pdf-image-generator.php#L329"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1454af30-319a-44b7-a83e-2d774cfbc8d1?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9265",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:08.810",
        "lastModified": "2024-10-01T09:15:08.810",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The Echo RSS Feed Post Generator plugin for WordPress is vulnerable to privilege escalation in all versions up to, and including, 5.4.6. This is due to the plugin not properly restricting the roles that can set during registration through the echo_check_post_header_sent() function. This makes it possible for unauthenticated attackers to register as an administrator.",
        "cweIds": [
          {
            "id": "CWE-269",
            "description": "Improper Privilege Management"
          }
        ],
        "references": [
          {
            "url": "https://codecanyon.net/item/echo-rss-feed-post-generator-plugin-for-wordpress/19486974"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/c099f401-4b05-4532-8e31-af1b1dea7eca?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9289",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-10-01T09:15:09.320",
        "lastModified": "2024-10-01T09:15:09.320",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The WordPress & WooCommerce Affiliate Program plugin for WordPress is vulnerable to authentication bypass in all versions up to, and including, 8.4.1. This is due to the rtwwwap_login_request_callback() function not properly validating a user's identity prior to authenticating them to the site. This makes it possible for unauthenticated attackers to log in as any user, including administrators, granted they have access to the administrator's email.",
        "cweIds": [
          {
            "id": "CWE-288",
            "description": "Authentication Bypass Using an Alternate Path or Channel"
          }
        ],
        "references": [
          {
            "url": "https://codecanyon.net/item/wordpress-woocommerce-affiliate-program/23580333"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ed19835f-2718-41d8-95af-47c8b9589529?source=cve"
          }
        ]
      }
    }
  ]
}