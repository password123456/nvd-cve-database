{
  "totalResults": 6,
  "datePublished": "2024-05-31T07:00:09.491826Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-32877",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-30T20:15:08.950",
        "lastModified": "2024-05-30T20:15:08.950",
        "baseScore": 4.2,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 2.5,
        "description": "Yii 2 is a PHP application framework. During internal penetration testing of a product based on Yii2, users discovered a Cross-site Scripting (XSS) vulnerability within the framework itself. This issue is relevant for the latest version of Yii2 (2.0.49.3). This issue lies in the mechanism for displaying function argument values in the stack trace. The vulnerability manifests when an argument's value exceeds 32 characters. For convenience, argument values exceeding this limit are truncated and displayed with an added \"...\". The full argument value becomes visible when hovering over it with the mouse, as it is displayed in the title attribute of a span tag. However, the use of a double quote (\") allows an attacker to break out of the title attribute's value context and inject their own attributes into the span tag, including malicious JavaScript code through event handlers such as onmousemove. This vulnerability allows an attacker to execute arbitrary JavaScript code in the security context of the victim's site via a specially crafted link. This could lead to the theft of cookies (including httpOnly cookies, which are accessible on the page), content substitution, or complete takeover of user accounts. This issue has been addressed in version 2.0.50. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/yiisoft/yii2/commit/f7baab16e79f2369d4838ab5653c3c07ecf26615"
          },
          {
            "url": "https://github.com/yiisoft/yii2/security/advisories/GHSA-qg5r-95m4-mjgj"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-34171",
        "sourceIdentifier": "ics-cert@hq.dhs.gov",
        "published": "2024-05-30T20:15:09.197",
        "lastModified": "2024-05-30T20:15:09.197",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Fuji Electric Monitouch V-SFT \nis vulnerable to a stack-based buffer overflow, which could allow an attacker to execute arbitrary code.",
        "cweIds": [
          {
            "id": "CWE-121",
            "description": "Stack-based Buffer Overflow"
          }
        ],
        "references": [
          {
            "url": "https://www.cisa.gov/news-events/ics-advisories/icsa-24-151-02"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-35189",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-30T20:15:09.457",
        "lastModified": "2024-05-30T20:15:09.457",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "Fides is an open-source privacy engineering platform. The Fides webserver has a number of endpoints that retrieve `ConnectionConfiguration` records and their associated `secrets` which _can_ contain sensitive data (e.g. passwords, private keys, etc.). These `secrets` are stored encrypted at rest (in the application database), and the associated endpoints are not meant to expose that sensitive data in plaintext to API clients, as it could be compromising. Fides's developers have available to them a Pydantic field-attribute (`sensitive`) that they can annotate as `True` to indicate that a given secret field should not be exposed via the API. The application has an internal function that uses `sensitive` annotations to mask the sensitive fields with a `\"**********\"` placeholder value. This vulnerability is due to a bug in that function, which prevented `sensitive` API model fields that were _nested_ below the root-level of a `secrets` object from being masked appropriately. Only the `BigQuery` connection configuration secrets meets these criteria: the secrets schema has a nested sensitive `keyfile_creds.private_key` property that is exposed in plaintext via the APIs. Connection types other than `BigQuery` with sensitive fields at the root-level that are not nested are properly masked with the placeholder and are not affected by this vulnerability. This vulnerability has been patched in Fides version 2.37.0. Users are advised to upgrade to this version or later to secure their systems against this threat. Users are also advised to rotate any Google Cloud secrets used for BigQuery integrations in their Fides deployments. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          },
          {
            "id": "CWE-201",
            "description": "Insertion of Sensitive Information Into Sent Data"
          }
        ],
        "references": [
          {
            "url": "https://cloud.google.com/iam/docs/key-rotation"
          },
          {
            "url": "https://github.com/ethyca/fides/security/advisories/GHSA-rcvg-jj3g-rj7c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5271",
        "sourceIdentifier": "ics-cert@hq.dhs.gov",
        "published": "2024-05-30T20:15:09.773",
        "lastModified": "2024-05-30T20:15:09.773",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "Fuji Electric Monitouch V-SFT is vulnerable to an out-of-bounds write because of a\n type confusion, which could result in arbitrary code execution.",
        "cweIds": [
          {
            "id": "CWE-787",
            "description": "Out-of-bounds Write"
          }
        ],
        "references": [
          {
            "url": "https://www.cisa.gov/news-events/ics-advisories/icsa-24-151-02"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1298",
        "sourceIdentifier": "infosec@edk2.groups.io",
        "published": "2024-05-30T21:15:09.213",
        "lastModified": "2024-05-30T21:15:09.213",
        "baseScore": 6.0,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.5,
        "impactScore": 4.0,
        "description": "EDK2 contains a vulnerability when S3 sleep is activated where an Attacker may cause a Division-By-Zero due to a UNIT32 overflow via local access. A successful exploit of this vulnerability may lead to a loss of Availability.",
        "cweIds": [
          {
            "id": "CWE-369",
            "description": "Divide By Zero"
          }
        ],
        "references": [
          {
            "url": "https://github.com/tianocore/edk2/security/advisories/GHSA-chfw-xj8f-6m53"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36119",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-30T21:15:09.460",
        "lastModified": "2024-05-30T21:15:09.460",
        "baseScore": 1.8,
        "baseSeverity": "LOW",
        "exploitabilityScore": 0.3,
        "impactScore": 1.4,
        "description": "Statamic is a, Laravel + Git powered CMS designed for building websites. In affected versions users registering via the `user:register_form` tag will have their password confirmation stored in plain text in their user file. This only affects sites matching **all** of the following conditions: 1. Running Statamic versions between 5.3.0 and 5.6.1. (This version range represents only one calendar week), 2. Using the `user:register_form` tag. 3. Using file-based user accounts. (Does not affect users stored in a database.), 4. Has users that have registered during that time period. (Existing users are not affected.). Additionally passwords are only visible to users that have access to read user yaml files, typically developers of the application itself. This issue has been patched in version 5.6.2, however any users registered during that time period and using the affected version range will still have the the `password_confirmation` value in their yaml files. We recommend that affected users have their password reset. System administrators are advised to upgrade their deployments. There are no known workarounds for this vulnerability. Anyone who commits their files to a public git repo, may consider clearing the sensitive data from the git history as it is likely that passwords were uploaded.",
        "cweIds": [
          {
            "id": "CWE-312",
            "description": "Cleartext Storage of Sensitive Information"
          }
        ],
        "references": [
          {
            "url": "https://dev.to/balogh08/cleaning-your-git-history-safely-removing-sensitive-data-10i5"
          },
          {
            "url": "https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository"
          },
          {
            "url": "https://github.com/statamic/cms/commit/0b804306c96c99b81755d5bd02df87ddf392853e"
          },
          {
            "url": "https://github.com/statamic/cms/security/advisories/GHSA-qvpj-w7xj-r6w9"
          }
        ]
      }
    }
  ]
}