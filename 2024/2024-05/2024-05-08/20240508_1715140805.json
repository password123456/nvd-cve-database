{
  "totalResults": 7,
  "datePublished": "2024-05-08T13:00:05.916863Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-1929",
        "sourceIdentifier": "patrick@puiterwijk.org",
        "published": "2024-05-08T02:15:09.300",
        "lastModified": "2024-05-08T02:15:09.300",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.1,
        "impactScore": 5.8,
        "description": "Local Root Exploit via Configuration Dictionary  in dnf5daemon-server before 5.1.17 allows a malicious user to impact Confidentiality and Integrity via Configuration Dictionary.\nThere are issues with the D-Bus interface long before Polkit is invoked. The `org.rpm.dnf.v0.SessionManager.open_session` method takes a key/value map of configuration entries. A sub-entry in this map, placed under the \"config\" key, is another key/value map. The configuration values found in it will be forwarded as configuration overrides to the `libdnf5::Base` configuration. \nPractically all libdnf5 configuration aspects can be influenced here. Already when opening the session via D-Bus, the libdnf5 will be initialized using these override configuration values. There is no sanity checking of the content of this \"config\" map, which is untrusted data. It is possible to make the library loading a plug-in shared library under control of an unprivileged user, hence achieving root access. ",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://www.openwall.com/lists/oss-security/2024/03/04/2"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1930",
        "sourceIdentifier": "patrick@puiterwijk.org",
        "published": "2024-05-08T02:15:09.503",
        "lastModified": "2024-05-08T02:15:09.503",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.0,
        "impactScore": 4.0,
        "description": "No Limit on Number of Open Sessions / Bad Session Close Behaviour  in dnf5daemon-server before 5.1.17 allows a malicious user to impact Availability via No Limit on Number of Open Sessions.\nThere is no limit on how many sessions D-Bus clients may create using the `open_session()` D-Bus method. For each session a thread is created in dnf5daemon-server. This spends a couple of hundred megabytes of memory in the process. Further connections will become impossible, likely because no more threads can be spawned by the D-Bus service.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://www.openwall.com/lists/oss-security/2024/03/04/2"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2746",
        "sourceIdentifier": "secalert@redhat.com",
        "published": "2024-05-08T02:15:09.677",
        "lastModified": "2024-05-08T02:15:09.677",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.0,
        "impactScore": 6.0,
        "description": "Incomplete fix for CVE-2024-1929\nThe problem with CVE-2024-1929 was that the dnf5 D-Bus daemon accepted arbitrary configuration parameters from unprivileged users, which allowed a\nlocal root exploit by tricking the daemon into loading a user controlled \"plugin\". All of this happened before Polkit authentication was even started.\nThe dnf5 library code does not check whether non-root users control the directory in question. \nOn one hand, this poses a Denial-of-Service attack vector by making the daemonoperate on a blocking file (e.g. named FIFO special file) or a very large file\nthat causes an out-of-memory situation (e.g. /dev/zero). On the other hand, this can be used to let the daemon process privileged files like /etc/shadow.\nThe file in question is parsed as an INI file. Error diagnostics resulting from parsing privileged files could cause information leaks, if these diagnostics\nare accessible to unprivileged users. In the case of libdnf5, no such user accessible diagnostics should exist, though.\nAlso, a local attacker can place a valid repository configuration file in this directory. This configuration file allows to specify\na plethora of additional configuration options. This makes various additional code paths in libdnf5 accessible to the attacker. ",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://www.openwall.com/lists/oss-security/2024/04/03/5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2860",
        "sourceIdentifier": "sirt@brocade.com",
        "published": "2024-05-08T02:15:09.873",
        "lastModified": "2024-05-08T02:15:09.873",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "The PostgreSQL implementation in Brocade SANnav versions before 2.3.0a is vulnerable to an incorrect local authentication flaw. An attacker accessing the VM where the Brocade SANnav is installed can gain access to sensitive data inside the PostgreSQL database.",
        "cweIds": [
          {
            "id": "CWE-306",
            "description": "Missing Authentication for Critical Function"
          }
        ],
        "references": [
          {
            "url": "https://support.broadcom.com/web/ecx/support-content-notification/-/external/content/SecurityAdvisories/0/24260"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4162",
        "sourceIdentifier": "product-security@gg.jp.panasonic.com",
        "published": "2024-05-08T03:15:06.830",
        "lastModified": "2024-05-08T03:15:06.830",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.8,
        "impactScore": 2.5,
        "description": "A buffer error in Panasonic KW Watcher versions 1.00 through 2.83 may allow attackers malicious read access to memory.",
        "cweIds": [
          {
            "id": "CWE-119",
            "description": "Improper Restriction of Operations within the Bounds of a Memory Buffer"
          }
        ],
        "references": [
          {
            "url": "https://www3.panasonic.biz/ac/e/fasys/software_info/eco/tol_kwwatcher.jsp"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4393",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-05-08T03:15:07.020",
        "lastModified": "2024-05-08T03:15:07.020",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The Social Connect plugin for WordPress is vulnerable to authentication bypass in versions up to, and including, 1.2. This is due to insufficient verification on the OpenID server being supplied during the social login through the plugin. This makes it possible for unauthenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the email.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/social-connect/tags/1.2/openid/openid.php#L575"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2882d9dd-0c73-4c9a-99cb-d10900503103?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4418",
        "sourceIdentifier": "secalert@redhat.com",
        "published": "2024-05-08T03:15:07.203",
        "lastModified": "2024-05-08T03:15:07.203",
        "baseScore": 6.2,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.5,
        "impactScore": 3.6,
        "description": "A race condition leading to a stack use-after-free flaw was found in libvirt. Due to a bad assumption in the virNetClientIOEventLoop() method, the `data` pointer to a stack-allocated virNetClientIOEventData structure ended up being used in the virNetClientIOEventFD callback while the data pointer's stack frame was concurrently being \"freed\" when returning from virNetClientIOEventLoop(). The 'virtproxyd' daemon can be used to trigger requests. If libvirt is configured with fine-grained access control, this issue, in theory, allows a user to escape their otherwise limited access. This flaw allows a local, unprivileged user to access virtproxyd without authenticating. Remote users would need to authenticate before they could access it.",
        "cweIds": [
          {
            "id": "CWE-416",
            "description": "Use After Free"
          }
        ],
        "references": [
          {
            "url": "https://access.redhat.com/security/cve/CVE-2024-4418"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2278616"
          }
        ]
      }
    }
  ]
}