{
  "totalResults": 12,
  "datePublished": "2024-05-23T21:00:07.509689Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-2861",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-05-23T10:15:09.090",
        "lastModified": "2024-05-23T10:15:09.090",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The ProfilePress plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ProfilePress User Panel widget in all versions up to, and including, 4.15.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3090831/wp-user-avatar"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/487731cd-da5a-45b6-8f39-4ae6420dd252?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4779",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-05-23T10:15:09.943",
        "lastModified": "2024-05-23T10:15:09.943",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Unlimited Elements For Elementor (Free Widgets, Addons, Templates) plugin for WordPress is vulnerable to SQL Injection via the ‘data[post_ids][0]’ parameter in all versions up to, and including, 1.5.107 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3090199/unlimited-elements-for-elementor/trunk/provider/functions_wordpress.class.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/b155f8ca-9d09-47d7-a7c2-7744df029c19?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5165",
        "sourceIdentifier": "emo@eclipse.org",
        "published": "2024-05-23T10:15:10.183",
        "lastModified": "2024-05-23T10:15:10.183",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "In Eclipse Ditto versions 3.0.0 to 3.5.5, the user input of several input fields of the Eclipse  Ditto Explorer User Interface https://eclipse.dev/ditto/user-interface.html  was not properly neutralized and thus vulnerable to both Reflected and Stored XSS (Cross Site Scripting).\nSeveral inputs were not persisted at the backend of Eclipse Ditto, but only in local browser storage to save settings of \"environments\" of the UI and e.g. the last performed \"search queries\", resulting in a \"Reflected XSS\" vulnerability.\nHowever, several other inputs were persisted at the backend of Eclipse Ditto, leading to a \"Stored XSS\" vulnerability. Those mean that authenticated and authorized users at Eclipse Ditto can persist Things in Ditto which can - when being displayed by other users also being authorized to see those Things in the Eclipse Ditto UI - cause scripts to be executed in the browser of other users.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://gitlab.eclipse.org/security/cve-assignement/-/issues/23"
          },
          {
            "url": "https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/201"
          },
          {
            "url": "https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/202"
          },
          {
            "url": "https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/204"
          },
          {
            "url": "https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/207"
          },
          {
            "url": "https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/209"
          },
          {
            "url": "https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/210"
          },
          {
            "url": "https://gitlab.eclipse.org/security/vulnerability-reports/-/issues/211"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-6502",
        "sourceIdentifier": "cve@gitlab.com",
        "published": "2024-05-23T11:15:22.913",
        "lastModified": "2024-05-23T11:15:22.913",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "A Denial of Service (DoS) condition has been discovered in GitLab CE/EE affecting all versions before 16.10.6, version 16.11 before 16.11.3, and 17.0 before 17.0.1. It is possible for an attacker to cause a denial of service using a crafted wiki page.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://gitlab.com/gitlab-org/gitlab/-/issues/433534"
          },
          {
            "url": "https://hackerone.com/reports/2263638"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-7045",
        "sourceIdentifier": "cve@gitlab.com",
        "published": "2024-05-23T11:15:23.153",
        "lastModified": "2024-05-23T11:15:23.153",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 2.7,
        "description": "A CSRF vulnerability exists within GitLab CE/EE from versions 13.11 before 16.10.6, from 16.11 before 16.11.3, from 17.0 before 17.0.1. By leveraging this vulnerability, an attacker could exfiltrate anti-CSRF tokens via the Kubernetes Agent Server (KAS).",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://gitlab.com/gitlab-org/gitlab/-/issues/436358"
          },
          {
            "url": "https://hackerone.com/reports/2286823"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1814",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-05-23T11:15:23.383",
        "lastModified": "2024-05-23T11:15:23.383",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Spectra – WordPress Gutenberg Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Testimonial block in all versions up to, and including, 2.12.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3075043/ultimate-addons-for-gutenberg"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d9ed939c-dc9c-46e8-9b23-0a3e5733e8d5?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1815",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-05-23T11:15:23.610",
        "lastModified": "2024-05-23T11:15:23.610",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Spectra – WordPress Gutenberg Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Image Gallery block in all versions up to, and including, 2.12.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3075043/ultimate-addons-for-gutenberg"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1cd877e6-e000-437d-ba9f-0640350277e4?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1947",
        "sourceIdentifier": "cve@gitlab.com",
        "published": "2024-05-23T11:15:23.817",
        "lastModified": "2024-05-23T11:15:23.817",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "A denial of service (DoS) condition was discovered in GitLab CE/EE affecting all versions from 13.2.4 before 16.10.6, 16.11 before 16.11.3, and 17.0 before 17.0.1. By leveraging this vulnerability an attacker could create a DoS condition by sending crafted API calls.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://gitlab.com/gitlab-org/gitlab/-/issues/443559"
          },
          {
            "url": "https://hackerone.com/reports/2380264"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3997",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-05-23T11:15:24.050",
        "lastModified": "2024-05-23T11:15:24.050",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Prime Slider – Addons For Elementor (Revolution of a slider, Hero Slider, Ecommerce Slider) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Pagepiling widget in all versions up to, and including, 3.14.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3074395"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/8736fb91-d05c-4f7e-81ff-00dfa44961f5?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4378",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-05-23T11:15:24.243",
        "lastModified": "2024-05-23T11:15:24.243",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Premium Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's menu and shape widgets in all versions up to, and including, 4.10.30 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/premium-addons-for-elementor/trunk/includes/pa-nav-menu-walker.php#L394"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/premium-addons-for-elementor/trunk/modules/premium-shape-divider/module.php#L1047"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3090037"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/f891a6c8-3d06-432e-8651-bb689015af1c?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4575",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-05-23T11:15:24.443",
        "lastModified": "2024-05-23T11:15:24.443",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The LayerSlider plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's ls_search_form shortcode in version 7.11.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://layerslider.com/release-log/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/4fa4167a-686f-4fd0-a53d-eb61d57228a1?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5258",
        "sourceIdentifier": "cve@gitlab.com",
        "published": "2024-05-23T11:15:24.640",
        "lastModified": "2024-05-23T11:15:24.640",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.3,
        "impactScore": 2.7,
        "description": "An authorization vulnerability exists within GitLab from versions 16.10 before 16.10.6, 16.11 before 16.11.3, and 17.0 before 17.0.1 where an authenticated attacker could utilize a crafted naming convention to bypass pipeline authorization logic.",
        "cweIds": [
          {
            "id": "CWE-639",
            "description": "Authorization Bypass Through User-Controlled Key"
          }
        ],
        "references": [
          {
            "url": "https://gitlab.com/gitlab-org/gitlab/-/issues/443254"
          }
        ]
      }
    }
  ]
}