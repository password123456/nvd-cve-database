{
  "totalResults": 7,
  "datePublished": "2024-05-28T05:00:04.592086Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-27310",
        "sourceIdentifier": "0fc0942c-577d-436f-ae8e-945763c79b02",
        "published": "2024-05-27T18:15:09.693",
        "lastModified": "2024-05-27T18:15:09.693",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Zoho ManageEngine ADSelfService Plus versions below 6401 are vulnerable to the DOS attack due to the malicious LDAP query.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.manageengine.com/products/self-service-password/advisory/CVE-2024-27310.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-35238",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-27T18:15:09.920",
        "lastModified": "2024-05-27T18:15:09.920",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 3.6,
        "description": "Minder by Stacklok is an open source software supply chain security platform. Minder prior to version 0.0.51 is vulnerable to a denial-of-service (DoS) attack which could allow an attacker to crash the Minder server and deny other users access to it. The root cause of the vulnerability is that Minders sigstore verifier reads an untrusted response entirely into memory without enforcing a limit on the response body. An attacker can exploit this by making Minder make a request to an attacker-controlled endpoint which returns a response with a large body which will crash the Minder server. Specifically, the point of failure is where Minder parses the response from the GitHub attestations endpoint in `getAttestationReply`. Here, Minder makes a request to the `orgs/$owner/attestations/$checksumref` GitHub endpoint (line 285) and then parses the response into the `AttestationReply` (line 295). The way Minder parses the response on line 295 makes it prone to DoS if the response is large enough. Essentially, the response needs to be larger than the machine has available memory.  Version 0.0.51 contains a patch for this issue.\nThe content that is hosted at the `orgs/$owner/attestations/$checksumref` GitHub attestation endpoint is controlled by users including unauthenticated users to Minders threat model. However, a user will need to configure their own Minder settings to cause Minder to make Minder send a request to fetch the attestations. The user would need to know of a package whose attestations were configured in such a way that they would return a large response when fetching them. As such, the steps needed to carry out this attack would look as such:\n1. The attacker adds a package to ghcr.io with attestations that can be fetched via the `orgs/$owner/attestations/$checksumref` GitHub endpoint.\n2. The attacker registers on Minder and makes Minder fetch the attestations.\n3. Minder fetches attestations and crashes thereby being denied of service.",
        "cweIds": [
          {
            "id": "CWE-770",
            "description": "Allocation of Resources Without Limits or Throttling"
          }
        ],
        "references": [
          {
            "url": "https://github.com/stacklok/minder/blob/daccbc12e364e2d407d56b87a13f7bb24cbdb074/internal/verifier/sigstore/container/container.go#L271-L300"
          },
          {
            "url": "https://github.com/stacklok/minder/commit/fe321d345b4f738de6a06b13207addc72b59f892"
          },
          {
            "url": "https://github.com/stacklok/minder/security/advisories/GHSA-8fmj-33gw-g7pw"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36036",
        "sourceIdentifier": "0fc0942c-577d-436f-ae8e-945763c79b02",
        "published": "2024-05-27T18:15:10.200",
        "lastModified": "2024-05-27T18:15:10.200",
        "baseScore": 4.2,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.1,
        "impactScore": 2.7,
        "description": "Zoho ManageEngine ADAudit Plus versions 7260 and below allows unauthorized local agent machine users to access sensitive information and modifying the agent configuration.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.manageengine.com/products/active-directory-audit/cve-2024-36036.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36037",
        "sourceIdentifier": "0fc0942c-577d-436f-ae8e-945763c79b02",
        "published": "2024-05-27T18:15:10.407",
        "lastModified": "2024-05-27T18:15:10.407",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "Zoho ManageEngine ADAudit Plus versions 7260 and below allows unauthorized local agent machine users to view the session recordings.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.manageengine.com/products/active-directory-audit/cve-2024-36037.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36105",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-27T18:15:10.613",
        "lastModified": "2024-05-27T18:15:10.613",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "dbt enables data analysts and engineers to transform their data using the same practices that software engineers use to build applications. Prior to versions 1.6.15, 1.7.15, and 1.8.1, Binding to `INADDR_ANY (0.0.0.0)` or `IN6ADDR_ANY (::)` exposes an application on all network interfaces, increasing the risk of unauthorized access. As stated in the Python docs, a special form for address is accepted instead of a host address: `''` represents `INADDR_ANY`, equivalent to `\"0.0.0.0\"`. On systems with IPv6, '' represents `IN6ADDR_ANY`, which is equivalent to `\"::\"`. A user who serves docs on an unsecured public network, may unknowingly be hosting an unsecured (http) web site for any remote user/system to access on the same network. The issue has has been mitigated in dbt-core v1.6.15, dbt-core v1.7.15, and dbt-core v1.8.1 by binding to localhost explicitly by default in `dbt docs serve`.",
        "cweIds": [
          {
            "id": "CWE-1327",
            "description": "Binding to an Unrestricted IP Address"
          }
        ],
        "references": [
          {
            "url": "https://cwe.mitre.org/data/definitions/1327.html"
          },
          {
            "url": "https://docs.python.org/3/library/socket.html#socket-families"
          },
          {
            "url": "https://docs.securesauce.dev/rules/PY030"
          },
          {
            "url": "https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39"
          },
          {
            "url": "https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7"
          },
          {
            "url": "https://github.com/dbt-labs/dbt-core/issues/10209"
          },
          {
            "url": "https://github.com/dbt-labs/dbt-core/pull/10208"
          },
          {
            "url": "https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15"
          },
          {
            "url": "https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15"
          },
          {
            "url": "https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1"
          },
          {
            "url": "https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-35181",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-27T19:15:08.620",
        "lastModified": "2024-05-27T19:15:08.620",
        "baseScore": 5.9,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 4.2,
        "description": "Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function `GetMeshSyncResourcesKinds` at the API URL `/api/system/meshsync/resources/kinds`. The order query parameter is directly used to build a SQL query in `meshync_handler.go`. Version 0.7.22 fixes this issue.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/meshsync_handler.go#L187"
          },
          {
            "url": "https://github.com/meshery/meshery/commit/8e995ce21af02d32ef61689c1e1748a745917f13"
          },
          {
            "url": "https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c"
          },
          {
            "url": "https://github.com/meshery/meshery/pull/10207"
          },
          {
            "url": "https://github.com/meshery/meshery/pull/10280"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-35182",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-27T19:15:08.890",
        "lastModified": "2024-05-27T19:15:08.890",
        "baseScore": 5.9,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 4.2,
        "description": "Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function `GetAllEvents` at the API URL `/api/v2/events`. The sort query parameter read in `events_streamer.go` is directly used to build a SQL query in `events_persister.go`. Version 0.7.22 fixes this issue by using the `SanitizeOrderInput` function.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/events_streamer.go#L52"
          },
          {
            "url": "https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/models/events_persister.go#L47"
          },
          {
            "url": "https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c"
          },
          {
            "url": "https://github.com/meshery/meshery/pull/10280"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery/"
          }
        ]
      }
    }
  ]
}