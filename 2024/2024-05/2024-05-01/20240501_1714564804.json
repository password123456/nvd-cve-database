{
  "totalResults": 4,
  "datePublished": "2024-05-01T21:00:04.326653Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-32973",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-01T11:15:46.200",
        "lastModified": "2024-05-01T13:01:51.263",
        "baseScore": 4.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 3.6,
        "description": "Pluto is a superset of Lua 5.4 with a focus on general-purpose programming. In affected versions an attacker with the ability to actively intercept network traffic would be able to use a specifically-crafted certificate to fool Pluto into trusting it to be the intended remote for the TLS session. This results in the HTTP library and socket.starttls providing less transport integrity than expected. This issue has been patched in pull request #851 which has been included in version 0.9.3. Users are advised to upgrade. there are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/PlutoLang/Pluto/pull/851"
          },
          {
            "url": "https://github.com/PlutoLang/Pluto/security/advisories/GHSA-84hj-7j2v-w665"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32979",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-01T11:15:47.407",
        "lastModified": "2024-05-01T13:01:51.263",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.6,
        "impactScore": 5.3,
        "description": "Nautobot is a Network Source of Truth and Network Automation Platform built as a web application atop the Django Python framework with a PostgreSQL or MySQL database. It was discovered that due to improper handling and escaping of user-provided query parameters, a maliciously crafted Nautobot URL could potentially be used to execute a Reflected Cross-Site Scripting (Reflected XSS) attack against users. All filterable object-list views in Nautobot are vulnerable. This issue has been fixed in Nautobot versions 1.6.20 and 2.2.3. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/nautobot/nautobot/commit/42440ebd9b381534ad89d62420ebea00d703d64e"
          },
          {
            "url": "https://github.com/nautobot/nautobot/pull/5646"
          },
          {
            "url": "https://github.com/nautobot/nautobot/pull/5647"
          },
          {
            "url": "https://github.com/nautobot/nautobot/security/advisories/GHSA-jxgr-gcj5-cqqg"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32984",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-01T11:15:47.633",
        "lastModified": "2024-05-01T13:01:51.263",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Yamux is a stream multiplexer over reliable, ordered connections such as TCP/IP. The Rust implementation of the Yamux stream multiplexer uses a vector for pending frames. This vector is not bounded in length. Every time the Yamux protocol requires sending of a new frame, this frame gets appended to this vector. This can be remotely triggered in a number of ways, for example by: 1. Opening a new libp2p Identify stream. This causes the node to send its Identify message. Of course, every other protocol that causes the sending of data also works. The larger the response, the more data is enqueued. 2. Sending a Yamux Ping frame. This causes a Pong frame to be enqueued. Under normal circumstances, this queue of pending frames would be drained once they’re sent out over the network. However, the attacker can use TCP’s receive window mechanism to prevent the victim from sending out any data: By not reading from the TCP connection, the receive window will never be increased, and the victim won’t be able to send out any new data (this is how TCP implements backpressure). Once this happens, Yamux’s queue of pending frames will start growing indefinitely. The queue will only be drained once the underlying TCP connection is closed. An attacker can cause a remote node to run out of memory, which will result in the corresponding process getting terminated by the operating system.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://github.com/libp2p/rust-yamux/blob/yamux-v0.13.1/yamux/src/connection.rs#L289"
          },
          {
            "url": "https://github.com/libp2p/rust-yamux/security/advisories/GHSA-3999-5ffv-wp2r"
          },
          {
            "url": "https://github.com/sigp/rust-yamux/commit/6689e227a48258a52347cd1d984adfc94afc6f7a"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-33835",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-05-01T11:15:47.827",
        "lastModified": "2024-05-01T13:01:51.263",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Tenda AC18 V15.03.05.05 has a stack overflow vulnerability in the remoteIp parameter from formSetSafeWanWebMan function.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/isBigChen/iot/blob/main/tenda/formSetSafeWanWebMan.md"
          }
        ]
      }
    }
  ]
}