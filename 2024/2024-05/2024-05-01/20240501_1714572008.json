{
  "totalResults": 82,
  "datePublished": "2024-05-01T23:00:08.885468Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2022-38386",
        "sourceIdentifier": "psirt@us.ibm.com",
        "published": "2024-05-01T13:15:47.960",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": 5.9,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.2,
        "impactScore": 3.6,
        "description": "IBM Cloud Pak for Security (CP4S) 1.10.0.0 through 1.10.11.0 and IBM QRadar Suite for Software 1.10.12.0 through 1.10.19.0 does not set the SameSite attribute for sensitive cookies which could allow an attacker to obtain sensitive information using man-in-the-middle techniques.  IBM X-Force ID:  233778.",
        "cweIds": [
          {
            "id": "CWE-1275",
            "description": "Sensitive Cookie with Improper SameSite Attribute"
          }
        ],
        "references": [
          {
            "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/233778"
          },
          {
            "url": "https://www.ibm.com/support/pages/node/7149811"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2022-48669",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.220",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\npowerpc/pseries: Fix potential memleak in papr_get_attr()\n`buf` is allocated in papr_get_attr(), and krealloc() of `buf`\ncould fail. We need to free the original `buf` in the case of failure.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1699fb915b9f61794d559b55114c09a390aaf234"
          },
          {
            "url": "https://git.kernel.org/stable/c/7f7d39fe3d80d6143404940b2413010cf6527029"
          },
          {
            "url": "https://git.kernel.org/stable/c/a3f22feb2220a945d1c3282e34199e8bcdc5afc4"
          },
          {
            "url": "https://git.kernel.org/stable/c/cda9c0d556283e2d4adaa9960b2dc19b16156bae"
          },
          {
            "url": "https://git.kernel.org/stable/c/d0647c3e81eff62b66d46fd4e475318cb8cb3610"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-52649",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.280",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/vkms: Avoid reading beyond LUT array\nWhen the floor LUT index (drm_fixp2int(lut_index) is the last\nindex of the array the ceil LUT index will point to an entry\nbeyond the array. Make sure we guard against it and use the\nvalue of the floor LUT index.\nv3:\n - Drop bits from commit description that didn't contribute\n   anything of value",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/046c1184ce60b0a37d48134f17ddbc1f32ce02bd"
          },
          {
            "url": "https://git.kernel.org/stable/c/2fee84030d12d9fddfa874e4562d71761a129277"
          },
          {
            "url": "https://git.kernel.org/stable/c/92800aaeff51b8358d1e0a7eb74daf8aa2d7ce9d"
          },
          {
            "url": "https://git.kernel.org/stable/c/9556c167673057d48ce4a0da675026fe046654c1"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-52650",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.323",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/tegra: dsi: Add missing check for of_find_device_by_node\nAdd check for the return value of of_find_device_by_node() and return\nthe error if it fails in order to avoid NULL pointer dereference.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/3169eaf1365541fd8e521091010c44fbe14691fc"
          },
          {
            "url": "https://git.kernel.org/stable/c/47a13d0b9d8527518639ab5c39667f69d6203e80"
          },
          {
            "url": "https://git.kernel.org/stable/c/50c0ad785a780c72a2fdaba10b38c645ffb4eae6"
          },
          {
            "url": "https://git.kernel.org/stable/c/52aa507148c4aad41436e2005d742ffcafad9976"
          },
          {
            "url": "https://git.kernel.org/stable/c/92003981a6df5dc84af8a5904f8ee112fa324129"
          },
          {
            "url": "https://git.kernel.org/stable/c/93128052bf832359531c3c0a9e3567b2b8682a2d"
          },
          {
            "url": "https://git.kernel.org/stable/c/afe6fcb9775882230cd29b529203eabd5d2a638d"
          },
          {
            "url": "https://git.kernel.org/stable/c/c5d2342d24ef6e08fc90a529fe3dc59de421a2b9"
          },
          {
            "url": "https://git.kernel.org/stable/c/f05631a8525c3b5e5994ecb1304d2d878956c0f5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-52651",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.377",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: ath10k: fix NULL pointer dereference in ath10k_wmi_tlv_op_pull_mgmt_tx_compl_ev()\nWe should check whether the WMI_TLV_TAG_STRUCT_MGMT_TX_COMPL_EVENT tlv is\npresent before accessing it, otherwise a null pointer deference error will\noccur.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0cd3b0a1dc987697cba1fe93c784365aa1f8a230"
          },
          {
            "url": "https://git.kernel.org/stable/c/10a342fa2fe4c4dd22f2c8fe917d3b1929582076"
          },
          {
            "url": "https://git.kernel.org/stable/c/4c4e592266b6eec748ce90e82bd9cbc9838f3633"
          },
          {
            "url": "https://git.kernel.org/stable/c/835c5d37f4b0ba99e9ec285ffa645bc532714191"
          },
          {
            "url": "https://git.kernel.org/stable/c/88a9dffaec779504ab3680d33cf677741c029420"
          },
          {
            "url": "https://git.kernel.org/stable/c/90f089d77e38db1c48629f111f3c8c336be1bc38"
          },
          {
            "url": "https://git.kernel.org/stable/c/ad25ee36f00172f7d53242dc77c69fff7ced0755"
          },
          {
            "url": "https://git.kernel.org/stable/c/db755cf93f5895bbac491d27a8e2fe04c5f9ae4a"
          },
          {
            "url": "https://git.kernel.org/stable/c/e1dc7aa814a95aeeb1b2c05be2b62af8423b15cc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-52652",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.427",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nNTB: fix possible name leak in ntb_register_device()\nIf device_register() fails in ntb_register_device(), the device name\nallocated by dev_set_name() should be freed. As per the comment in\ndevice_register(), callers should use put_device() to give up the\nreference in the error path. So fix this by calling put_device() in the\nerror path so that the name can be freed in kobject_cleanup().\nAs a result of this, put_device() in the error path of\nntb_register_device() is removed and the actual error is returned.\n[mani: reworded commit message]",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/6632a54ac8057cc0b0d789c6f73883e871bcd25c"
          },
          {
            "url": "https://git.kernel.org/stable/c/913421f9f7fd8324dcc41753d0f28b52e177ef04"
          },
          {
            "url": "https://git.kernel.org/stable/c/a039690d323221eb5865f1f31db3ec264e7a14b6"
          },
          {
            "url": "https://git.kernel.org/stable/c/a62b9f3d7bbfac874cc0c638bc1776dcf1f8ec06"
          },
          {
            "url": "https://git.kernel.org/stable/c/aebfdfe39b9327a3077d0df8db3beb3160c9bdd0"
          },
          {
            "url": "https://git.kernel.org/stable/c/e8025439ef8e16029dc313d78a351ef192469b7b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-52653",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.470",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nSUNRPC: fix a memleak in gss_import_v2_context\nThe ctx->mech_used.data allocated by kmemdup is not freed in neither\ngss_import_v2_context nor it only caller gss_krb5_import_sec_context,\nwhich frees ctx on error.\nThus, this patch reform the last call of gss_import_v2_context to the\ngss_krb5_import_ctx_v2, preventing the memleak while keepping the return\nformation.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/47ac11db93e74ac49cd6c3fc69bcbc5964c4a8b4"
          },
          {
            "url": "https://git.kernel.org/stable/c/99044c01ed5329e73651c054d8a4baacdbb1a27c"
          },
          {
            "url": "https://git.kernel.org/stable/c/d111e30d9cd846bb368faf3637dc0f71fcbcf822"
          },
          {
            "url": "https://git.kernel.org/stable/c/e67b652d8e8591d3b1e569dbcdfcee15993e91fa"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-0334",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-05-01T13:15:48.517",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Jeg Elementor Kit plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the custom attribute of a link in several Elementor widgets in all versions up to, and including, 2.6.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3077328/jeg-elementor-kit"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/950e9042-1364-4200-8f57-171346075764?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-23597",
        "sourceIdentifier": "vultures@jpcert.or.jp",
        "published": "2024-05-01T13:15:48.693",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Cross-site request forgery (CSRF) vulnerability exists in TvRock 0.9t8a. If a logged-in user of TVRock accesses a specially crafted page, unintended operations may be performed. Note that the developer was unreachable, therefore, users should consider stop using TvRock 0.9t8a.",
        "cweIds": null,
        "references": [
          {
            "url": "https://jvn.jp/en/jp/JVN24683352/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-24978",
        "sourceIdentifier": "vultures@jpcert.or.jp",
        "published": "2024-05-01T13:15:48.753",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Denial-of-service (DoS) vulnerability exists in TvRock 0.9t8a. Receiving a specially crafted request by a remote attacker or having a user of TvRock click a specially crafted request may lead to ABEND (abnormal end). Note that the developer was unreachable, therefore, users should consider stop using TvRock 0.9t8a.",
        "cweIds": null,
        "references": [
          {
            "url": "https://jvn.jp/en/jp/JVN40079147/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27023",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.797",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmd: Fix missing release of 'active_io' for flush\nsubmit_flushes\n atomic_set(&mddev->flush_pending, 1);\n rdev_for_each_rcu(rdev, mddev)\n  atomic_inc(&mddev->flush_pending);\n  bi->bi_end_io = md_end_flush\n  submit_bio(bi);\n                        /* flush io is done first */\n                        md_end_flush\n                         if (atomic_dec_and_test(&mddev->flush_pending))\n                          percpu_ref_put(&mddev->active_io)\n                          -> active_io is not released\n if (atomic_dec_and_test(&mddev->flush_pending))\n  -> missing release of active_io\nFor consequence, mddev_suspend() will wait for 'active_io' to be zero\nforever.\nFix this problem by releasing 'active_io' in submit_flushes() if\n'flush_pending' is decreased to zero.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/02dad157ba11064d073f5499dc33552b227d5d3a"
          },
          {
            "url": "https://git.kernel.org/stable/c/11f81438927f84edfaaeb5d5f10856c3a1c1fc82"
          },
          {
            "url": "https://git.kernel.org/stable/c/6b2ff10390b19a2364af622b6666b690443f9f3f"
          },
          {
            "url": "https://git.kernel.org/stable/c/855678ed8534518e2b428bcbcec695de9ba248e8"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27024",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.847",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet/rds: fix WARNING in rds_conn_connect_if_down\nIf connection isn't established yet, get_mr() will fail, trigger connection after\nget_mr().",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/2b505d05280739ce31d5708da840f42df827cb85"
          },
          {
            "url": "https://git.kernel.org/stable/c/786854141057751bc08eb26f1b02e97c1631c8f4"
          },
          {
            "url": "https://git.kernel.org/stable/c/907761307469adecb02461a14120e9a1812a5fb1"
          },
          {
            "url": "https://git.kernel.org/stable/c/997efea2bf3a4adb96c306b9ad6a91442237bf5b"
          },
          {
            "url": "https://git.kernel.org/stable/c/998fd719e6d6468b930ac0c44552ea9ff8b07b80"
          },
          {
            "url": "https://git.kernel.org/stable/c/9dfc15a10dfd44f8ff7f27488651cb5be6af83c2"
          },
          {
            "url": "https://git.kernel.org/stable/c/b562ebe21ed9adcf42242797dd6cb75beef12bf0"
          },
          {
            "url": "https://git.kernel.org/stable/c/c055fc00c07be1f0df7375ab0036cebd1106ed38"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27025",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.890",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnbd: null check for nla_nest_start\nnla_nest_start() may fail and return NULL. Insert a check and set errno\nbased on other call sites within the same source code.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/31edf4bbe0ba27fd03ac7d87eb2ee3d2a231af6d"
          },
          {
            "url": "https://git.kernel.org/stable/c/44214d744be32a4769faebba764510888f1eb19e"
          },
          {
            "url": "https://git.kernel.org/stable/c/4af837db0fd3679fabc7b7758397090b0c06dced"
          },
          {
            "url": "https://git.kernel.org/stable/c/96436365e5d80d0106ea785a4f80a58e7c9edff8"
          },
          {
            "url": "https://git.kernel.org/stable/c/98e60b538e66c90b9a856828c71d4e975ebfa797"
          },
          {
            "url": "https://git.kernel.org/stable/c/b7f5aed55829f376e4f7e5ea5b80ccdcb023e983"
          },
          {
            "url": "https://git.kernel.org/stable/c/ba6a9970ce9e284cbc04099361c58731e308596a"
          },
          {
            "url": "https://git.kernel.org/stable/c/e803040b368d046434fbc8a91945c690332c4fcf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27026",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.940",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nvmxnet3: Fix missing reserved tailroom\nUse rbi->len instead of rcd->len for non-dataring packet.\nFound issue:\n  XDP_WARN: xdp_update_frame_from_buff(line:278): Driver BUG: missing reserved tailroom\n  WARNING: CPU: 0 PID: 0 at net/core/xdp.c:586 xdp_warn+0xf/0x20\n  CPU: 0 PID: 0 Comm: swapper/0 Tainted: G        W  O       6.5.1 #1\n  RIP: 0010:xdp_warn+0xf/0x20\n  ...\n  ? xdp_warn+0xf/0x20\n  xdp_do_redirect+0x15f/0x1c0\n  vmxnet3_run_xdp+0x17a/0x400 [vmxnet3]\n  vmxnet3_process_xdp+0xe4/0x760 [vmxnet3]\n  ? vmxnet3_tq_tx_complete.isra.0+0x21e/0x2c0 [vmxnet3]\n  vmxnet3_rq_rx_complete+0x7ad/0x1120 [vmxnet3]\n  vmxnet3_poll_rx_only+0x2d/0xa0 [vmxnet3]\n  __napi_poll+0x20/0x180\n  net_rx_action+0x177/0x390",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/7c8505ecc2d15473d679b8e06335434b84fffe86"
          },
          {
            "url": "https://git.kernel.org/stable/c/91d017d19d5a9ad153e2dc23ed3c0e2e79ef5262"
          },
          {
            "url": "https://git.kernel.org/stable/c/aba8659caf88017507419feea06069f529329ea6"
          },
          {
            "url": "https://git.kernel.org/stable/c/e127ce7699c1e05279ee5ee61f00893e7bfa9671"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27027",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:48.987",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndpll: fix dpll_xa_ref_*_del() for multiple registrations\nCurrently, if there are multiple registrations of the same pin on the\nsame dpll device, following warnings are observed:\nWARNING: CPU: 5 PID: 2212 at drivers/dpll/dpll_core.c:143 dpll_xa_ref_pin_del.isra.0+0x21e/0x230\nWARNING: CPU: 5 PID: 2212 at drivers/dpll/dpll_core.c:223 __dpll_pin_unregister+0x2b3/0x2c0\nThe problem is, that in both dpll_xa_ref_dpll_del() and\ndpll_xa_ref_pin_del() registration is only removed from list in case the\nreference count drops to zero. That is wrong, the registration has to\nbe removed always.\nTo fix this, remove the registration from the list and free\nit unconditionally, instead of doing it only when the ref reference\ncounter reaches zero.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/769324eb35143462542cdb15483cdaf4877bf661"
          },
          {
            "url": "https://git.kernel.org/stable/c/b27e32e9367dac024cd6f61f22655714f483fd67"
          },
          {
            "url": "https://git.kernel.org/stable/c/b446631f355ece73b13c311dd712c47381a23172"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27028",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.030",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nspi: spi-mt65xx: Fix NULL pointer access in interrupt handler\nThe TX buffer in spi_transfer can be a NULL pointer, so the interrupt\nhandler may end up writing to the invalid memory and cause crashes.\nAdd a check to trans->tx_buf before using it.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1784053cf10a14c4ebd8a890bad5cfe1bee51713"
          },
          {
            "url": "https://git.kernel.org/stable/c/2342b05ec5342a519e00524a507f7a6ea6791a38"
          },
          {
            "url": "https://git.kernel.org/stable/c/55f8ea6731aa64871ee6aef7dba53ee9f9f3b2f6"
          },
          {
            "url": "https://git.kernel.org/stable/c/62b1f837b15cf3ec2835724bdf8577e47d14c753"
          },
          {
            "url": "https://git.kernel.org/stable/c/766ec94cc57492eab97cbbf1595bd516ab0cb0e4"
          },
          {
            "url": "https://git.kernel.org/stable/c/a20ad45008a7c82f1184dc6dee280096009ece55"
          },
          {
            "url": "https://git.kernel.org/stable/c/bcfcdf19698024565eff427706ebbd8df65abd11"
          },
          {
            "url": "https://git.kernel.org/stable/c/bea82355df9e1c299625405b1947fc9b26b4c6d4"
          },
          {
            "url": "https://git.kernel.org/stable/c/c10fed329c1c104f375a75ed97ea3abef0786d62"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27029",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.083",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amdgpu: fix mmhub client id out-of-bounds access\nProperly handle cid 0x140.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1f24b3040f2b6ffcb97151fabb3070328254d923"
          },
          {
            "url": "https://git.kernel.org/stable/c/6540ff6482c1a5a6890ae44b23d0852ba1986d9e"
          },
          {
            "url": "https://git.kernel.org/stable/c/e1e076bda4fd6378ae650f2c6ef1a4ff93c5aea5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27030",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.137",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nocteontx2-af: Use separate handlers for interrupts\nFor PF to AF interrupt vector and VF to AF vector same\ninterrupt handler is registered which is causing race condition.\nWhen two interrupts are raised to two CPUs at same time\nthen two cores serve same event corrupting the data.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/29d2550d79a8cbd31e0fbaa5c0e2a2efdc444e44"
          },
          {
            "url": "https://git.kernel.org/stable/c/4fedae8f9eafa2ac8cdaca58e315f52a7e2a8701"
          },
          {
            "url": "https://git.kernel.org/stable/c/50e60de381c342008c0956fd762e1c26408f372c"
          },
          {
            "url": "https://git.kernel.org/stable/c/766c2627acb2d9d1722cce2e24837044d52d888a"
          },
          {
            "url": "https://git.kernel.org/stable/c/772f18ded0e240cc1fa2b7020cc640e3e5c32b70"
          },
          {
            "url": "https://git.kernel.org/stable/c/94cb17e5cf3a3c484063abc0ce4b8a2b2e8c1cb2"
          },
          {
            "url": "https://git.kernel.org/stable/c/ad6759e233db6fcc131055f8e23b4eafbe81053c"
          },
          {
            "url": "https://git.kernel.org/stable/c/dc29dd00705a62c77de75b6d752259b869aac49d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27031",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.180",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nNFS: Fix nfs_netfs_issue_read() xarray locking for writeback interrupt\nThe loop inside nfs_netfs_issue_read() currently does not disable\ninterrupts while iterating through pages in the xarray to submit\nfor NFS read.  This is not safe though since after taking xa_lock,\nanother page in the mapping could be processed for writeback inside\nan interrupt, and deadlock can occur.  The fix is simple and clean\nif we use xa_for_each_range(), which handles the iteration with RCU\nwhile reducing code complexity.\nThe problem is easily reproduced with the following test:\n mount -o vers=3,fsc 127.0.0.1:/export /mnt/nfs\n dd if=/dev/zero of=/mnt/nfs/file1.bin bs=4096 count=1\n echo 3 > /proc/sys/vm/drop_caches\n dd if=/mnt/nfs/file1.bin of=/dev/null\n umount /mnt/nfs\nOn the console with a lockdep-enabled kernel a message similar to\nthe following will be seen:\n ================================\n WARNING: inconsistent lock state\n 6.7.0-lockdbg+ #10 Not tainted\n --------------------------------\n inconsistent {IN-SOFTIRQ-W} -> {SOFTIRQ-ON-W} usage.\n test5/1708 [HC0[0]:SC0[0]:HE1:SE1] takes:\n ffff888127baa598 (&xa->xa_lock#4){+.?.}-{3:3}, at:\nnfs_netfs_issue_read+0x1b2/0x4b0 [nfs]\n {IN-SOFTIRQ-W} state was registered at:\n   lock_acquire+0x144/0x380\n   _raw_spin_lock_irqsave+0x4e/0xa0\n   __folio_end_writeback+0x17e/0x5c0\n   folio_end_writeback+0x93/0x1b0\n   iomap_finish_ioend+0xeb/0x6a0\n   blk_update_request+0x204/0x7f0\n   blk_mq_end_request+0x30/0x1c0\n   blk_complete_reqs+0x7e/0xa0\n   __do_softirq+0x113/0x544\n   __irq_exit_rcu+0xfe/0x120\n   irq_exit_rcu+0xe/0x20\n   sysvec_call_function_single+0x6f/0x90\n   asm_sysvec_call_function_single+0x1a/0x20\n   pv_native_safe_halt+0xf/0x20\n   default_idle+0x9/0x20\n   default_idle_call+0x67/0xa0\n   do_idle+0x2b5/0x300\n   cpu_startup_entry+0x34/0x40\n   start_secondary+0x19d/0x1c0\n   secondary_startup_64_no_verify+0x18f/0x19b\n irq event stamp: 176891\n hardirqs last  enabled at (176891): [<ffffffffa67a0be4>]\n_raw_spin_unlock_irqrestore+0x44/0x60\n hardirqs last disabled at (176890): [<ffffffffa67a0899>]\n_raw_spin_lock_irqsave+0x79/0xa0\n softirqs last  enabled at (176646): [<ffffffffa515d91e>]\n__irq_exit_rcu+0xfe/0x120\n softirqs last disabled at (176633): [<ffffffffa515d91e>]\n__irq_exit_rcu+0xfe/0x120\n other info that might help us debug this:\n  Possible unsafe locking scenario:\n        CPU0\n        ----\n   lock(&xa->xa_lock#4);\n   <Interrupt>\n     lock(&xa->xa_lock#4);\n  *** DEADLOCK ***\n 2 locks held by test5/1708:\n  #0: ffff888127baa498 (&sb->s_type->i_mutex_key#22){++++}-{4:4}, at:\n      nfs_start_io_read+0x28/0x90 [nfs]\n  #1: ffff888127baa650 (mapping.invalidate_lock#3){.+.+}-{4:4}, at:\n      page_cache_ra_unbounded+0xa4/0x280\n stack backtrace:\n CPU: 6 PID: 1708 Comm: test5 Kdump: loaded Not tainted 6.7.0-lockdbg+\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-1.fc39\n04/01/2014\n Call Trace:\n  dump_stack_lvl+0x5b/0x90\n  mark_lock+0xb3f/0xd20\n  __lock_acquire+0x77b/0x3360\n  _raw_spin_lock+0x34/0x80\n  nfs_netfs_issue_read+0x1b2/0x4b0 [nfs]\n  netfs_begin_read+0x77f/0x980 [netfs]\n  nfs_netfs_readahead+0x45/0x60 [nfs]\n  nfs_readahead+0x323/0x5a0 [nfs]\n  read_pages+0xf3/0x5c0\n  page_cache_ra_unbounded+0x1c8/0x280\n  filemap_get_pages+0x38c/0xae0\n  filemap_read+0x206/0x5e0\n  nfs_file_read+0xb7/0x140 [nfs]\n  vfs_read+0x2a9/0x460\n  ksys_read+0xb7/0x140",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/8a2e5977cecd3cde6a0e3e86b7b914d00240e5dc"
          },
          {
            "url": "https://git.kernel.org/stable/c/8df1678c021ffeb20ef8a203bd9413f3ed9b0e9a"
          },
          {
            "url": "https://git.kernel.org/stable/c/ad27382f8495f8ef6d2c66c413d756bfd13c0598"
          },
          {
            "url": "https://git.kernel.org/stable/c/fd5860ab6341506004219b080aea40213b299d2e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27032",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.230",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nf2fs: fix to avoid potential panic during recovery\nDuring recovery, if FAULT_BLOCK is on, it is possible that\nf2fs_reserve_new_block() will return -ENOSPC during recovery,\nthen it may trigger panic.\nAlso, if fault injection rate is 1 and only FAULT_BLOCK fault\ntype is on, it may encounter deadloop in loop of block reservation.\nLet's change as below to fix these issues:\n- remove bug_on() to avoid panic.\n- limit the loop count of block reservation to avoid potential\ndeadloop.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/21ec68234826b1b54ab980a8df6e33c74cfbee58"
          },
          {
            "url": "https://git.kernel.org/stable/c/8844b2f8a3f0c428b74672f9726f9950b1a7764c"
          },
          {
            "url": "https://git.kernel.org/stable/c/d034810d02a5af8eb74debe29877dcaf5f00fdd1"
          },
          {
            "url": "https://git.kernel.org/stable/c/f26091a981318b5b7451d61f99bc073a6af8db67"
          },
          {
            "url": "https://git.kernel.org/stable/c/fe4de493572a4263554903bf9c3afc5c196e15f0"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27033",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.273",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nf2fs: fix to remove unnecessary f2fs_bug_on() to avoid panic\nverify_blkaddr() will trigger panic once we inject fault into\nf2fs_is_valid_blkaddr(), fix to remove this unnecessary f2fs_bug_on().",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0386408036bfc8b50296d9e544ff91c4d52af2db"
          },
          {
            "url": "https://git.kernel.org/stable/c/6633cdc8b2ebefcddcfcdacfd063105e60f39a49"
          },
          {
            "url": "https://git.kernel.org/stable/c/abe98a05e7162f64759bf9111108ebcb11322dec"
          },
          {
            "url": "https://git.kernel.org/stable/c/b896e302f79678451a94769ddd9e52e954c64fbb"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27034",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.317",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nf2fs: compress: fix to cover normal cluster write with cp_rwsem\nWhen we overwrite compressed cluster w/ normal cluster, we should\nnot unlock cp_rwsem during f2fs_write_raw_pages(), otherwise data\nwill be corrupted if partial blocks were persisted before CP & SPOR,\ndue to cluster metadata wasn't updated atomically.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/2b1b14d9fc94b8feae20808684c8af28ec80f45b"
          },
          {
            "url": "https://git.kernel.org/stable/c/52982edfcefd475cc34af663d5c47c0cddaa5739"
          },
          {
            "url": "https://git.kernel.org/stable/c/542c8b3c774a480bfd0804291a12f6f2391b0cd1"
          },
          {
            "url": "https://git.kernel.org/stable/c/75abfd61392b1db391bde6d738a30d685b843286"
          },
          {
            "url": "https://git.kernel.org/stable/c/7d420eaaa18ec8e2bb4eeab8c65c00492ef6f416"
          },
          {
            "url": "https://git.kernel.org/stable/c/fd244524c2cf07b5f4c3fe8abd6a99225c76544b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27035",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.360",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nf2fs: compress: fix to guarantee persisting compressed blocks by CP\nIf data block in compressed cluster is not persisted with metadata\nduring checkpoint, after SPOR, the data may be corrupted, let's\nguarantee to write compressed page by checkpoint.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/57e8b17d0522c8f4daf0c4d9969b4d7358033532"
          },
          {
            "url": "https://git.kernel.org/stable/c/82704e598d7b33c7e45526e34d3c585426319bed"
          },
          {
            "url": "https://git.kernel.org/stable/c/8a430dd49e9cb021372b0ad91e60aeef9c6ced00"
          },
          {
            "url": "https://git.kernel.org/stable/c/c3311694b9bcced233548574d414c91d39214684"
          },
          {
            "url": "https://git.kernel.org/stable/c/e54cce8137258a550b49cae45d09e024821fb28d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27036",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.407",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ncifs: Fix writeback data corruption\ncifs writeback doesn't correctly handle the case where\ncifs_extend_writeback() hits a point where it is considering an additional\nfolio, but this would overrun the wsize - at which point it drops out of\nthe xarray scanning loop and calls xas_pause().  The problem is that\nxas_pause() advances the loop counter - thereby skipping that page.\nWhat needs to happen is for xas_reset() to be called any time we decide we\ndon't want to process the page we're looking at, but rather send the\nrequest we are building and start a new one.\nFix this by copying and adapting the netfslib writepages code as a\ntemporary measure, with cifs writeback intending to be offloaded to\nnetfslib in the near future.\nThis also fixes the issue with the use of filemap_get_folios_tag() causing\nretry of a bunch of pages which the extender already dealt with.\nThis can be tested by creating, say, a 64K file somewhere not on cifs\n(otherwise copy-offload may get underfoot), mounting a cifs share with a\nwsize of 64000, copying the file to it and then comparing the original file\nand the copy:\n        dd if=/dev/urandom of=/tmp/64K bs=64k count=1\n        mount //192.168.6.1/test /mnt -o user=...,pass=...,wsize=64000\n        cp /tmp/64K /mnt/64K\n        cmp /tmp/64K /mnt/64K\nWithout the fix, the cmp fails at position 64000 (or shortly thereafter).",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/65f2ced695982ccd516196d0a9447d85dbe2eed5"
          },
          {
            "url": "https://git.kernel.org/stable/c/844b4e132f57f1333dc79feaa035075a096762e4"
          },
          {
            "url": "https://git.kernel.org/stable/c/e45deec35bf7f1f4f992a707b2d04a8c162f2240"
          },
          {
            "url": "https://git.kernel.org/stable/c/f3dc1bdb6b0b0693562c7c54a6c28bafa608ba3c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27037",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.450",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nclk: zynq: Prevent null pointer dereference caused by kmalloc failure\nThe kmalloc() in zynq_clk_setup() will return null if the\nphysical memory has run out. As a result, if we use snprintf()\nto write data to the null address, the null pointer dereference\nbug will happen.\nThis patch uses a stack variable to replace the kmalloc().",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/01511ac7be8e45f80e637f6bf61af2d3d2dee9db"
          },
          {
            "url": "https://git.kernel.org/stable/c/0801c893fd48cdba66a3c8f44c3fe43cc67d3b85"
          },
          {
            "url": "https://git.kernel.org/stable/c/58a946ab43501f2eba058d24d96af0ad1122475b"
          },
          {
            "url": "https://git.kernel.org/stable/c/7938e9ce39d6779d2f85d822cc930f73420e54a6"
          },
          {
            "url": "https://git.kernel.org/stable/c/8c4889a9ea861d7be37463c10846eb75e1b49c9d"
          },
          {
            "url": "https://git.kernel.org/stable/c/ca976c6a592f789700200069ef9052493c0b73d8"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27038",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.507",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nclk: Fix clk_core_get NULL dereference\nIt is possible for clk_core_get to dereference a NULL in the following\nsequence:\nclk_core_get()\n    of_clk_get_hw_from_clkspec()\n        __of_clk_get_hw_from_provider()\n            __clk_get_hw()\n__clk_get_hw() can return NULL which is dereferenced by clk_core_get() at\nhw->core.\nPrior to commit dde4eff47c82 (\"clk: Look for parents with clkdev based\nclk_lookups\") the check IS_ERR_OR_NULL() was performed which would have\ncaught the NULL.\nReading the description of this function it talks about returning NULL but\nthat cannot be so at the moment.\nUpdate the function to check for hw before dereferencing it and return NULL\nif hw is NULL.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0efb9ef6fb95384ba631d6819e66f10392aabfa2"
          },
          {
            "url": "https://git.kernel.org/stable/c/239174535dba11f7b83de0eaaa27909024f8c185"
          },
          {
            "url": "https://git.kernel.org/stable/c/6f073b24a9e2becd25ac4505a9780a87e621bb51"
          },
          {
            "url": "https://git.kernel.org/stable/c/a5d9b1aa61b401867b9066d54086b3e4ee91f8ed"
          },
          {
            "url": "https://git.kernel.org/stable/c/a8b2b26fdd011ebe36d68a9a321ca45801685959"
          },
          {
            "url": "https://git.kernel.org/stable/c/c554badcae9c45b737a22d23454170c6020b90e6"
          },
          {
            "url": "https://git.kernel.org/stable/c/d7ae7d1265686b55832a445b1db8cdd69738ac07"
          },
          {
            "url": "https://git.kernel.org/stable/c/e97fe4901e0f59a0bfd524578fe3768f8ca42428"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27039",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.557",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nclk: hisilicon: hi3559a: Fix an erroneous devm_kfree()\n'p_clk' is an array allocated just before the for loop for all clk that\nneed to be registered.\nIt is incremented at each loop iteration.\nIf a clk_register() call fails, 'p_clk' may point to something different\nfrom what should be freed.\nThe best we can do, is to avoid this wrong release of memory.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/2cc572e0085ebd4b662b74a0f43222bc00df9a00"
          },
          {
            "url": "https://git.kernel.org/stable/c/3f8445f1c746fda180a7f75372ed06b24e9cefe2"
          },
          {
            "url": "https://git.kernel.org/stable/c/64c6a38136b74a2f18c42199830975edd9fbc379"
          },
          {
            "url": "https://git.kernel.org/stable/c/95d1f1228c1bb54803ae57525b76db60e99b37e4"
          },
          {
            "url": "https://git.kernel.org/stable/c/d575765b1b62e8bdb00af11caa1aabeb01763d9f"
          },
          {
            "url": "https://git.kernel.org/stable/c/e0b0d1c46a2ce1e46b79d004a7270fdef872e097"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27040",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.600",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: Add 'replay' NULL check in 'edp_set_replay_allow_active()'\nIn the first if statement, we're checking if 'replay' is NULL. But in\nthe second if statement, we're not checking if 'replay' is NULL again\nbefore calling replay->funcs->replay_set_power_opt().\nif (replay == NULL && force_static)\n    return false;\n...\nif (link->replay_settings.replay_feature_enabled &&\n    replay->funcs->replay_set_power_opt) {\n\treplay->funcs->replay_set_power_opt(replay, *power_opts, panel_inst);\n\tlink->replay_settings.replay_power_opt_active = *power_opts;\n}\nIf 'replay' is NULL, this will cause a null pointer dereference.\nFixes the below found by smatch:\ndrivers/gpu/drm/amd/amdgpu/../display/dc/link/protocols/link_edp_panel_control.c:895 edp_set_replay_allow_active() error: we previously assumed 'replay' could be null (see line 887)",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/d0e94f4807ff0df66cf447d6b4bbb8ac830e99c3"
          },
          {
            "url": "https://git.kernel.org/stable/c/e7cadd5d3a8ffe334d0229ba9eda4290138d56e7"
          },
          {
            "url": "https://git.kernel.org/stable/c/f610c46771ef1047e46d61807aa7c69cd29e63d8"
          },
          {
            "url": "https://git.kernel.org/stable/c/f6aed043ee5d75b3d1bfc452b1a9584b63c8f76b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27041",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.647",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: fix NULL checks for adev->dm.dc in amdgpu_dm_fini()\nSince 'adev->dm.dc' in amdgpu_dm_fini() might turn out to be NULL\nbefore the call to dc_enable_dmub_notifications(), check\nbeforehand to ensure there will not be a possible NULL-ptr-deref\nthere.\nAlso, since commit 1e88eb1b2c25 (\"drm/amd/display: Drop\nCONFIG_DRM_AMD_DC_HDCP\") there are two separate checks for NULL in\n'adev->dm.dc' before dc_deinit_callbacks() and dc_dmub_srv_destroy().\nClean up by combining them all under one 'if'.\nFound by Linux Verification Center (linuxtesting.org) with static\nanalysis tool SVACE.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1c62697e4086de988b31124fb8c79c244ea05f2b"
          },
          {
            "url": "https://git.kernel.org/stable/c/2a3cfb9a24a28da9cc13d2c525a76548865e182c"
          },
          {
            "url": "https://git.kernel.org/stable/c/ca2eb375db76fd50f31afdd67d6ca4f833254957"
          },
          {
            "url": "https://git.kernel.org/stable/c/e040f1fbe9abae91b12b074cfc3bbb5367b79811"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27042",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.690",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amdgpu: Fix potential out-of-bounds access in 'amdgpu_discovery_reg_base_init()'\nThe issue arises when the array 'adev->vcn.vcn_config' is accessed\nbefore checking if the index 'adev->vcn.num_vcn_inst' is within the\nbounds of the array.\nThe fix involves moving the bounds check before the array access. This\nensures that 'adev->vcn.num_vcn_inst' is within the bounds of the array\nbefore it is used as an index.\nFixes the below:\ndrivers/gpu/drm/amd/amdgpu/amdgpu_discovery.c:1289 amdgpu_discovery_reg_base_init() error: testing array offset 'adev->vcn.num_vcn_inst' after use.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/8db10cee51e3e11a6658742465edc21986cf1e8d"
          },
          {
            "url": "https://git.kernel.org/stable/c/8f3e68c6a3fff53c2240762a47a0045d89371775"
          },
          {
            "url": "https://git.kernel.org/stable/c/b33d4af102b9c1f7a83d3f0ad3cab7d2bab8f058"
          },
          {
            "url": "https://git.kernel.org/stable/c/cdb637d339572398821204a1142d8d615668f1e9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27043",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.740",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: edia: dvbdev: fix a use-after-free\nIn dvb_register_device, *pdvbdev is set equal to dvbdev, which is freed\nin several error-handling paths. However, *pdvbdev is not set to NULL\nafter dvbdev's deallocation, causing use-after-frees in many places,\nfor example, in the following call chain:\nbudget_register\n  |-> dvb_dmxdev_init\n        |-> dvb_register_device\n  |-> dvb_dmxdev_release\n        |-> dvb_unregister_device\n              |-> dvb_remove_device\n                    |-> dvb_device_put\n                          |-> kref_put\nWhen calling dvb_unregister_device, dmxdev->dvbdev (i.e. *pdvbdev in\ndvb_register_device) could point to memory that had been freed in\ndvb_register_device. Thereafter, this pointer is transferred to\nkref_put and triggering a use-after-free.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/096237039d00c839f3e3a5fe6d001bf0db45b644"
          },
          {
            "url": "https://git.kernel.org/stable/c/0d3fe80b6d175c220b3e252efc6c6777e700e98e"
          },
          {
            "url": "https://git.kernel.org/stable/c/35674111a043b0482a9bc69da8850a83f465b07d"
          },
          {
            "url": "https://git.kernel.org/stable/c/437a111f79a2f5b2a5f21e27fdec6f40c8768712"
          },
          {
            "url": "https://git.kernel.org/stable/c/779e8db7efb22316c8581d6c229636d2f5694a62"
          },
          {
            "url": "https://git.kernel.org/stable/c/8c64f4cdf4e6cc5682c52523713af8c39c94e6d5"
          },
          {
            "url": "https://git.kernel.org/stable/c/b7586e902128e4fb7bfbb661cb52e4215a65637b"
          },
          {
            "url": "https://git.kernel.org/stable/c/d0f5c28333822f9baa5280d813124920720fd856"
          },
          {
            "url": "https://git.kernel.org/stable/c/f20c3270f3ed5aa6919a87e4de9bf6c05fb57086"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27044",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.783",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: Fix potential NULL pointer dereferences in 'dcn10_set_output_transfer_func()'\nThe 'stream' pointer is used in dcn10_set_output_transfer_func() before\nthe check if 'stream' is NULL.\nFixes the below:\ndrivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn10/dcn10_hwseq.c:1892 dcn10_set_output_transfer_func() warn: variable dereferenced before check 'stream' (see line 1875)",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/14613d52bc7fc180df6d2c65ba65fc921fc1dda7"
          },
          {
            "url": "https://git.kernel.org/stable/c/29fde8895b2fcc33f44aea28c644ce2d9b62f9e0"
          },
          {
            "url": "https://git.kernel.org/stable/c/2d9fe7787af01188dc470a649bdbb842d6511fd7"
          },
          {
            "url": "https://git.kernel.org/stable/c/330caa061af53ea6d287d7c43d0703714e510e08"
          },
          {
            "url": "https://git.kernel.org/stable/c/6ac7c7a3a9ab57aba0fe78ecb922d2b20e16efeb"
          },
          {
            "url": "https://git.kernel.org/stable/c/7874ab3105ca4657102fee1cc14b0af70883c484"
          },
          {
            "url": "https://git.kernel.org/stable/c/9ccfe80d022df7c595f1925afb31de2232900656"
          },
          {
            "url": "https://git.kernel.org/stable/c/e019d87e02f1e539ae48b99187f253847744ca7a"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27045",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.837",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: Fix a potential buffer overflow in 'dp_dsc_clock_en_read()'\nTell snprintf() to store at most 10 bytes in the output buffer\ninstead of 30.\nFixes the below:\ndrivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm_debugfs.c:1508 dp_dsc_clock_en_read() error: snprintf() is printing too much 30 vs 10",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/440f059837418fac1695b65d3ebc6080d33be877"
          },
          {
            "url": "https://git.kernel.org/stable/c/4b09715f1504f1b6e8dff0e9643630610bc05141"
          },
          {
            "url": "https://git.kernel.org/stable/c/ad76fd30557d6a106c481e4606a981221ca525f7"
          },
          {
            "url": "https://git.kernel.org/stable/c/cf114d8d4a8d78df272116a745bb43b48cef65f4"
          },
          {
            "url": "https://git.kernel.org/stable/c/d346b3e5b25c95d504478507eb867cd3818775ab"
          },
          {
            "url": "https://git.kernel.org/stable/c/eb9327af3621d26b1d83f767c97a3fe8191a3a65"
          },
          {
            "url": "https://git.kernel.org/stable/c/ff28893c96c5e0927a4da10cd24a3522ca663515"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27046",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.880",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnfp: flower: handle acti_netdevs allocation failure\nThe kmalloc_array() in nfp_fl_lag_do_work() will return null, if\nthe physical memory has run out. As a result, if we dereference\nthe acti_netdevs, the null pointer dereference bugs will happen.\nThis patch adds a check to judge whether allocation failure occurs.\nIf it happens, the delayed work will be rescheduled and try again.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0d387dc503f9a53e6d1f6e9dd0292d38f083eba5"
          },
          {
            "url": "https://git.kernel.org/stable/c/3b1e8a617eb0f4cdc19def530047a95b5abde07d"
          },
          {
            "url": "https://git.kernel.org/stable/c/408ba7fd04f959c61b50db79c983484312fea642"
          },
          {
            "url": "https://git.kernel.org/stable/c/84e95149bd341705f0eca6a7fcb955c548805002"
          },
          {
            "url": "https://git.kernel.org/stable/c/928705e341010dd910fdece61ccb974f494a758f"
          },
          {
            "url": "https://git.kernel.org/stable/c/9d8eb1238377cd994829f9162ae396a84ae037b2"
          },
          {
            "url": "https://git.kernel.org/stable/c/c8df9203bf22c66fa26e8d8c7f8ce181cf88099d"
          },
          {
            "url": "https://git.kernel.org/stable/c/c9b4e220dd18f79507803f38a55d53b483f6c9c3"
          },
          {
            "url": "https://git.kernel.org/stable/c/d746889db75a76aeee95fb705b8e1ac28c684a2e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27047",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.930",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet: phy: fix phy_get_internal_delay accessing an empty array\nThe phy_get_internal_delay function could try to access to an empty\narray in the case that the driver is calling phy_get_internal_delay\nwithout defining delay_values and rx-internal-delay-ps or\ntx-internal-delay-ps is defined to 0 in the device-tree.\nThis will lead to \"unable to handle kernel NULL pointer dereference at\nvirtual address 0\". To avoid this kernel oops, the test should be delay\n>= 0. As there is already delay < 0 test just before, the test could\nonly be size == 0.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0307cf443308ecc6be9b2ca312bb31bae5e5a7ad"
          },
          {
            "url": "https://git.kernel.org/stable/c/06dd21045a7e8bc8701b0ebedcd9a30a6325878b"
          },
          {
            "url": "https://git.kernel.org/stable/c/0e939a002c8a7d66e60bd0ea6b281fb39d713c1a"
          },
          {
            "url": "https://git.kernel.org/stable/c/2a2ff709511617de9c6c072eeee82bcbbdfecaf8"
          },
          {
            "url": "https://git.kernel.org/stable/c/4469c0c5b14a0919f5965c7ceac96b523eb57b79"
          },
          {
            "url": "https://git.kernel.org/stable/c/589ec16174dd9378953b8232ae76fad0a96e1563"
          },
          {
            "url": "https://git.kernel.org/stable/c/c0691de7df1d51482a52cac93b7fe82fd9dd296b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27048",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:49.977",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: brcm80211: handle pmk_op allocation failure\nThe kzalloc() in brcmf_pmksa_v3_op() will return null if the\nphysical memory has run out. As a result, if we dereference\nthe null value, the null pointer dereference bug will happen.\nReturn -ENOMEM from brcmf_pmksa_v3_op() if kzalloc() fails\nfor pmk_op.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/6138a82f3bccfc67ed7ac059493579fc326c02e5"
          },
          {
            "url": "https://git.kernel.org/stable/c/9975908315c13bae2f2ed5ba92870fa935180b0e"
          },
          {
            "url": "https://git.kernel.org/stable/c/b4152222e04cb8afeeca239c90e3fcaf4c553b42"
          },
          {
            "url": "https://git.kernel.org/stable/c/df62e22c2e27420e8990a4f09e30d7bf56c2036f"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27049",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.020",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: mt76: mt7925e: fix use-after-free in free_irq()\nFrom commit a304e1b82808 (\"[PATCH] Debug shared irqs\"), there is a test\nto make sure the shared irq handler should be able to handle the unexpected\nevent after deregistration. For this case, let's apply MT76_REMOVED flag to\nindicate the device was removed and do not run into the resource access\nanymore.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/6d9930096e1f13cf6d9aabfbf95d0e05fb04144f"
          },
          {
            "url": "https://git.kernel.org/stable/c/84470b48af03a818039d587478b415cbcb264ff5"
          },
          {
            "url": "https://git.kernel.org/stable/c/a5a5f4413d91f395cb2d89829d376d7393ad48b9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27050",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.070",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nlibbpf: Use OPTS_SET() macro in bpf_xdp_query()\nWhen the feature_flags and xdp_zc_max_segs fields were added to the libbpf\nbpf_xdp_query_opts, the code writing them did not use the OPTS_SET() macro.\nThis causes libbpf to write to those fields unconditionally, which means\nthat programs compiled against an older version of libbpf (with a smaller\nsize of the bpf_xdp_query_opts struct) will have its stack corrupted by\nlibbpf writing out of bounds.\nThe patch adding the feature_flags field has an early bail out if the\nfeature_flags field is not part of the opts struct (via the OPTS_HAS)\nmacro, but the patch adding xdp_zc_max_segs does not. For consistency, this\nfix just changes the assignments to both fields to use the OPTS_SET()\nmacro.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/682ddd62abd4bdcee7584246903e7a2df005fe0d"
          },
          {
            "url": "https://git.kernel.org/stable/c/92a871ab9fa59a74d013bc04f321026a057618e7"
          },
          {
            "url": "https://git.kernel.org/stable/c/cd3be9843247edb8fc6fcd8d8237cbce2bc19f5e"
          },
          {
            "url": "https://git.kernel.org/stable/c/fa5bef5e80c6a3321b2b1a7070436f3bc5daf07c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27051",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.120",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ncpufreq: brcmstb-avs-cpufreq: add check for cpufreq_cpu_get's return value\ncpufreq_cpu_get may return NULL. To avoid NULL-dereference check it\nand return 0 in case of error.\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/74b84d0d71180330efe67c82f973a87f828323e5"
          },
          {
            "url": "https://git.kernel.org/stable/c/9127599c075caff234359950117018a010dd01db"
          },
          {
            "url": "https://git.kernel.org/stable/c/b25b64a241d769e932a022e5c780cf135ef56035"
          },
          {
            "url": "https://git.kernel.org/stable/c/d951cf510fb0df91d3abac0121a59ebbc63c0567"
          },
          {
            "url": "https://git.kernel.org/stable/c/e6e3e51ffba0784782b1a076d7441605697ea3c6"
          },
          {
            "url": "https://git.kernel.org/stable/c/e72160cb6e23b78b41999d6885a34ce8db536095"
          },
          {
            "url": "https://git.kernel.org/stable/c/f661017e6d326ee187db24194cabb013d81bc2a6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27052",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.170",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: rtl8xxxu: add cancel_work_sync() for c2hcmd_work\nThe workqueue might still be running, when the driver is stopped. To\navoid a use-after-free, call cancel_work_sync() in rtl8xxxu_stop().",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1213acb478a7181cd73eeaf00db430f1e45b1361"
          },
          {
            "url": "https://git.kernel.org/stable/c/156012667b85ca7305cb363790d3ae8519a6f41e"
          },
          {
            "url": "https://git.kernel.org/stable/c/3518cea837de4d106efa84ddac18a07b6de1384e"
          },
          {
            "url": "https://git.kernel.org/stable/c/58fe3bbddfec10c6b216096d8c0e517cd8463e3a"
          },
          {
            "url": "https://git.kernel.org/stable/c/7059cdb69f8e1a2707dd1e2f363348b507ed7707"
          },
          {
            "url": "https://git.kernel.org/stable/c/ac512507ac89c01ed6cd4ca53032f52cdb23ea59"
          },
          {
            "url": "https://git.kernel.org/stable/c/dddedfa3b29a63c2ca4336663806a6128b8545b4"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27053",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.223",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: wilc1000: fix RCU usage in connect path\nWith lockdep enabled, calls to the connect function from cfg802.11 layer\nlead to the following warning:\n=============================\nWARNING: suspicious RCU usage\n6.7.0-rc1-wt+ #333 Not tainted\n-----------------------------\ndrivers/net/wireless/microchip/wilc1000/hif.c:386\nsuspicious rcu_dereference_check() usage!\n[...]\nstack backtrace:\nCPU: 0 PID: 100 Comm: wpa_supplicant Not tainted 6.7.0-rc1-wt+ #333\nHardware name: Atmel SAMA5\n unwind_backtrace from show_stack+0x18/0x1c\n show_stack from dump_stack_lvl+0x34/0x48\n dump_stack_lvl from wilc_parse_join_bss_param+0x7dc/0x7f4\n wilc_parse_join_bss_param from connect+0x2c4/0x648\n connect from cfg80211_connect+0x30c/0xb74\n cfg80211_connect from nl80211_connect+0x860/0xa94\n nl80211_connect from genl_rcv_msg+0x3fc/0x59c\n genl_rcv_msg from netlink_rcv_skb+0xd0/0x1f8\n netlink_rcv_skb from genl_rcv+0x2c/0x3c\n genl_rcv from netlink_unicast+0x3b0/0x550\n netlink_unicast from netlink_sendmsg+0x368/0x688\n netlink_sendmsg from ____sys_sendmsg+0x190/0x430\n ____sys_sendmsg from ___sys_sendmsg+0x110/0x158\n ___sys_sendmsg from sys_sendmsg+0xe8/0x150\n sys_sendmsg from ret_fast_syscall+0x0/0x1c\nThis warning is emitted because in the connect path, when trying to parse\ntarget BSS parameters, we dereference a RCU pointer whithout being in RCU\ncritical section.\nFix RCU dereference usage by moving it to a RCU read critical section. To\navoid wrapping the whole wilc_parse_join_bss_param under the critical\nsection, just use the critical section to copy ies data",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/205c50306acf58a335eb19fa84e40140f4fe814f"
          },
          {
            "url": "https://git.kernel.org/stable/c/4bfd20d5f5c62b5495d6c0016ee6933bd3add7ce"
          },
          {
            "url": "https://git.kernel.org/stable/c/5800ec78775c0cd646f71eb9bf8402fb794807de"
          },
          {
            "url": "https://git.kernel.org/stable/c/745003b5917b610352f52fe0d11ef658d6471ec2"
          },
          {
            "url": "https://git.kernel.org/stable/c/b4bbf38c350acb6500cbe667b1e2e68f896e4b38"
          },
          {
            "url": "https://git.kernel.org/stable/c/d80fc436751cfa6b02a8eda74eb6cce7dadfe5a2"
          },
          {
            "url": "https://git.kernel.org/stable/c/dd50d3ead6e3707bb0a5df7cc832730c93ace3a7"
          },
          {
            "url": "https://git.kernel.org/stable/c/e556006de4ea93abe2b46cba202a2556c544b8b2"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27054",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.270",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ns390/dasd: fix double module refcount decrement\nOnce the discipline is associated with the device, deleting the device\ntakes care of decrementing the module's refcount.  Doing it manually on\nthis error path causes refcount to artificially decrease on each error\nwhile it should just stay the same.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/ad999aa18103fa038787b6a8a55020abcf34df1a"
          },
          {
            "url": "https://git.kernel.org/stable/c/c3116e62ddeff79cae342147753ce596f01fcf06"
          },
          {
            "url": "https://git.kernel.org/stable/c/ebc5a3bd79e54f98c885c26f0862a27a02c487c5"
          },
          {
            "url": "https://git.kernel.org/stable/c/ec09bcab32fc4765e0cc97e1b72cdd067135f37e"
          },
          {
            "url": "https://git.kernel.org/stable/c/edbdb0d94143db46edd373cc93e433832d29fe19"
          },
          {
            "url": "https://git.kernel.org/stable/c/fa18aa507ea71d8914b6acb2c94db311c757c650"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27055",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.317",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nworkqueue: Don't call cpumask_test_cpu() with -1 CPU in wq_update_node_max_active()\nFor wq_update_node_max_active(), @off_cpu of -1 indicates that no CPU is\ngoing down. The function was incorrectly calling cpumask_test_cpu() with -1\nCPU leading to oopses like the following on some archs:\n  Unable to handle kernel paging request at virtual address ffff0002100296e0\n  ..\n  pc : wq_update_node_max_active+0x50/0x1fc\n  lr : wq_update_node_max_active+0x1f0/0x1fc\n  ...\n  Call trace:\n    wq_update_node_max_active+0x50/0x1fc\n    apply_wqattrs_commit+0xf0/0x114\n    apply_workqueue_attrs_locked+0x58/0xa0\n    alloc_workqueue+0x5ac/0x774\n    workqueue_init_early+0x460/0x540\n    start_kernel+0x258/0x684\n    __primary_switched+0xb8/0xc0\n  Code: 9100a273 35000d01 53067f00 d0016dc1 (f8607a60)\n  ---[ end trace 0000000000000000 ]---\n  Kernel panic - not syncing: Attempted to kill the idle task!\n  ---[ end Kernel panic - not syncing: Attempted to kill the idle task! ]---\nFix it.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/15930da42f8981dc42c19038042947b475b19f47"
          },
          {
            "url": "https://git.kernel.org/stable/c/38c19c44cc05ec1e84d2e31a9a289b83b6c7ec85"
          },
          {
            "url": "https://git.kernel.org/stable/c/7df62b8cca38aa452b508b477b16544cba615084"
          },
          {
            "url": "https://git.kernel.org/stable/c/9fc557d489f8163c1aabcb89114b8eba960f4097"
          },
          {
            "url": "https://git.kernel.org/stable/c/a75ac2693d734d20724f0e10e039ca85f1fcfc4e"
          },
          {
            "url": "https://git.kernel.org/stable/c/adc646d2126988a64234502f579e4bc2b080d7cf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27056",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.360",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: iwlwifi: mvm: ensure offloading TID queue exists\nThe resume code path assumes that the TX queue for the offloading TID\nhas been configured. At resume time it then tries to sync the write\npointer as it may have been updated by the firmware.\nIn the unusual event that no packets have been send on TID 0, the queue\nwill not have been allocated and this causes a crash. Fix this by\nensuring the queue exist at suspend time.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/78f65fbf421a61894c14a1b91fe2fb4437b3fe5f"
          },
          {
            "url": "https://git.kernel.org/stable/c/ed35a509390ef4011ea2226da5dd6f62b73873b5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27057",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.400",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nASoC: SOF: ipc4-pcm: Workaround for crashed firmware on system suspend\nWhen the system is suspended while audio is active, the\nsof_ipc4_pcm_hw_free() is invoked to reset the pipelines since during\nsuspend the DSP is turned off, streams will be re-started after resume.\nIf the firmware crashes during while audio is running (or when we reset\nthe stream before suspend) then the sof_ipc4_set_multi_pipeline_state()\nwill fail with IPC error and the state change is interrupted.\nThis will cause misalignment between the kernel and firmware state on next\nDSP boot resulting errors returned by firmware for IPC messages, eventually\nfailing the audio resume.\nOn stream close the errors are ignored so the kernel state will be\ncorrected on the next DSP boot, so the second boot after the DSP panic.\nIf sof_ipc4_trigger_pipelines() is called from sof_ipc4_pcm_hw_free() then\nstate parameter is SOF_IPC4_PIPE_RESET and only in this case.\nTreat a forced pipeline reset similarly to how we treat a pcm_free by\nignoring error on state sending to allow the kernel's state to be\nconsistent with the state the firmware will have after the next boot.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/3cac6eebea9b4bc5f041e157e45c76e212ad6759"
          },
          {
            "url": "https://git.kernel.org/stable/c/c40aad7c81e5fba34b70123ed7ce3397fa62a4d2"
          },
          {
            "url": "https://git.kernel.org/stable/c/d153e8b154f9746ac969c85a4e6474760453647c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27058",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.450",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ntmpfs: fix race on handling dquot rbtree\nA syzkaller reproducer found a race while attempting to remove dquot\ninformation from the rb tree.\nFetching the rb_tree root node must also be protected by the\ndqopt->dqio_sem, otherwise, giving the right timing, shmem_release_dquot()\nwill trigger a warning because it couldn't find a node in the tree, when\nthe real reason was the root node changing before the search starts:\nThread 1\t\t\t\tThread 2\n- shmem_release_dquot()\t\t\t- shmem_{acquire,release}_dquot()\n- fetch ROOT\t\t\t\t- Fetch ROOT\n\t\t\t\t\t- acquire dqio_sem\n- wait dqio_sem\n\t\t\t\t\t- do something, triger a tree rebalance\n\t\t\t\t\t- release dqio_sem\n- acquire dqio_sem\n- start searching for the node, but\n  from the wrong location, missing\n  the node, and triggering a warning.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0a69b6b3a026543bc215ccc866d0aea5579e6ce2"
          },
          {
            "url": "https://git.kernel.org/stable/c/617d55b90e73c7b4aa2733ca6cc3f9b72d1124bb"
          },
          {
            "url": "https://git.kernel.org/stable/c/c7077f43f30d817d10a9f8245e51576ac114b2f0"
          },
          {
            "url": "https://git.kernel.org/stable/c/f82f184874d2761ebaa60dccf577921a0dbb3810"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27059",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.493",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nUSB: usb-storage: Prevent divide-by-0 error in isd200_ata_command\nThe isd200 sub-driver in usb-storage uses the HEADS and SECTORS values\nin the ATA ID information to calculate cylinder and head values when\ncreating a CDB for READ or WRITE commands.  The calculation involves\ndivision and modulus operations, which will cause a crash if either of\nthese values is 0.  While this never happens with a genuine device, it\ncould happen with a flawed or subversive emulation, as reported by the\nsyzbot fuzzer.\nProtect against this possibility by refusing to bind to the device if\neither the ATA_ID_HEADS or ATA_ID_SECTORS value in the device's ID\ninformation is 0.  This requires isd200_Initialization() to return a\nnegative error code when initialization fails; currently it always\nreturns 0 (even when there is an error).",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/014bcf41d946b36a8f0b8e9b5d9529efbb822f49"
          },
          {
            "url": "https://git.kernel.org/stable/c/284fb1003d5da111019b9e0bf99b084fd71ac133"
          },
          {
            "url": "https://git.kernel.org/stable/c/3a67d4ab9e730361d183086dfb0ddd8c61f01636"
          },
          {
            "url": "https://git.kernel.org/stable/c/6c1f36d92c0a8799569055012665d2bb066fb964"
          },
          {
            "url": "https://git.kernel.org/stable/c/871fd7b10b56d280990b7e754f43d888382ca325"
          },
          {
            "url": "https://git.kernel.org/stable/c/9968c701cba7eda42e5f0052b040349d6222ae34"
          },
          {
            "url": "https://git.kernel.org/stable/c/eb7b01ca778170654e1c76950024270ba74b121f"
          },
          {
            "url": "https://git.kernel.org/stable/c/f42ba916689f5c7b1642092266d2f53cf527aaaa"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27060",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.543",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nthunderbolt: Fix NULL pointer dereference in tb_port_update_credits()\nOlliver reported that his system crashes when plugging in Thunderbolt 1\ndevice:\n BUG: kernel NULL pointer dereference, address: 0000000000000020\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: 0000 [#1] PREEMPT SMP NOPTI\n RIP: 0010:tb_port_do_update_credits+0x1b/0x130 [thunderbolt]\n Call Trace:\n  <TASK>\n  ? __die+0x23/0x70\n  ? page_fault_oops+0x171/0x4e0\n  ? exc_page_fault+0x7f/0x180\n  ? asm_exc_page_fault+0x26/0x30\n  ? tb_port_do_update_credits+0x1b/0x130\n  ? tb_switch_update_link_attributes+0x83/0xd0\n  tb_switch_add+0x7a2/0xfe0\n  tb_scan_port+0x236/0x6f0\n  tb_handle_hotplug+0x6db/0x900\n  process_one_work+0x171/0x340\n  worker_thread+0x27b/0x3a0\n  ? __pfx_worker_thread+0x10/0x10\n  kthread+0xe5/0x120\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork+0x31/0x50\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork_asm+0x1b/0x30\n  </TASK>\nThis is due the fact that some Thunderbolt 1 devices only have one lane\nadapter. Fix this by checking for the lane 1 before we read its credits.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/ce64ba1f6ec3439e4b4d880b4db99673f4507228"
          },
          {
            "url": "https://git.kernel.org/stable/c/d3d17e23d1a0d1f959b4fa55b35f1802d9c584fa"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27061",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.593",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ncrypto: sun8i-ce - Fix use after free in unprepare\nsun8i_ce_cipher_unprepare should be called before\ncrypto_finalize_skcipher_request, because client callbacks may\nimmediately free memory, that isn't needed anymore. But it will be\nused by unprepare after free. Before removing prepare/unprepare\ncallbacks it was handled by crypto engine in crypto_finalize_request.\nUsually that results in a pointer dereference problem during a in\ncrypto selftest.\n Unable to handle kernel NULL pointer dereference at\n                                      virtual address 0000000000000030\n Mem abort info:\n   ESR = 0x0000000096000004\n   EC = 0x25: DABT (current EL), IL = 32 bits\n   SET = 0, FnV = 0\n   EA = 0, S1PTW = 0\n   FSC = 0x04: level 0 translation fault\n Data abort info:\n   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000\n   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n user pgtable: 4k pages, 48-bit VAs, pgdp=000000004716d000\n [0000000000000030] pgd=0000000000000000, p4d=0000000000000000\n Internal error: Oops: 0000000096000004 [#1] SMP\nThis problem is detected by KASAN as well.\n ==================================================================\n BUG: KASAN: slab-use-after-free in sun8i_ce_cipher_do_one+0x6e8/0xf80 [sun8i_ce]\n Read of size 8 at addr ffff00000dcdc040 by task 1c15000.crypto-/373\n Hardware name: Pine64 PinePhone (1.2) (DT)\n Call trace:\n  dump_backtrace+0x9c/0x128\n  show_stack+0x20/0x38\n  dump_stack_lvl+0x48/0x60\n  print_report+0xf8/0x5d8\n  kasan_report+0x90/0xd0\n  __asan_load8+0x9c/0xc0\n  sun8i_ce_cipher_do_one+0x6e8/0xf80 [sun8i_ce]\n  crypto_pump_work+0x354/0x620 [crypto_engine]\n  kthread_worker_fn+0x244/0x498\n  kthread+0x168/0x178\n  ret_from_fork+0x10/0x20\n Allocated by task 379:\n  kasan_save_stack+0x3c/0x68\n  kasan_set_track+0x2c/0x40\n  kasan_save_alloc_info+0x24/0x38\n  __kasan_kmalloc+0xd4/0xd8\n  __kmalloc+0x74/0x1d0\n  alg_test_skcipher+0x90/0x1f0\n  alg_test+0x24c/0x830\n  cryptomgr_test+0x38/0x60\n  kthread+0x168/0x178\n  ret_from_fork+0x10/0x20\n Freed by task 379:\n  kasan_save_stack+0x3c/0x68\n  kasan_set_track+0x2c/0x40\n  kasan_save_free_info+0x38/0x60\n  __kasan_slab_free+0x100/0x170\n  slab_free_freelist_hook+0xd4/0x1e8\n  __kmem_cache_free+0x15c/0x290\n  kfree+0x74/0x100\n  kfree_sensitive+0x80/0xb0\n  alg_test_skcipher+0x12c/0x1f0\n  alg_test+0x24c/0x830\n  cryptomgr_test+0x38/0x60\n  kthread+0x168/0x178\n  ret_from_fork+0x10/0x20\n The buggy address belongs to the object at ffff00000dcdc000\n  which belongs to the cache kmalloc-256 of size 256\n The buggy address is located 64 bytes inside of\n  freed 256-byte region [ffff00000dcdc000, ffff00000dcdc100)",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/183420038444547c149a0fc5f58e792c2752860c"
          },
          {
            "url": "https://git.kernel.org/stable/c/51a7d338c212e0640b1aca52ba6590d5bea49879"
          },
          {
            "url": "https://git.kernel.org/stable/c/dc60b25540c82fc4baa95d1458ae96ead21859e0"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27062",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.660",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnouveau: lock the client object tree.\nIt appears the client object tree has no locking unless I've missed\nsomething else. Fix races around adding/removing client objects,\nmostly vram bar mappings.\n 4562.099306] general protection fault, probably for non-canonical address 0x6677ed422bceb80c: 0000 [#1] PREEMPT SMP PTI\n[ 4562.099314] CPU: 2 PID: 23171 Comm: deqp-vk Not tainted 6.8.0-rc6+ #27\n[ 4562.099324] Hardware name: Gigabyte Technology Co., Ltd. Z390 I AORUS PRO WIFI/Z390 I AORUS PRO WIFI-CF, BIOS F8 11/05/2021\n[ 4562.099330] RIP: 0010:nvkm_object_search+0x1d/0x70 [nouveau]\n[ 4562.099503] Code: 90 90 90 90 90 90 90 90 90 90 90 90 90 66 0f 1f 00 0f 1f 44 00 00 48 89 f8 48 85 f6 74 39 48 8b 87 a0 00 00 00 48 85 c0 74 12 <48> 8b 48 f8 48 39 ce 73 15 48 8b 40 10 48 85 c0 75 ee 48 c7 c0 fe\n[ 4562.099506] RSP: 0000:ffffa94cc420bbf8 EFLAGS: 00010206\n[ 4562.099512] RAX: 6677ed422bceb814 RBX: ffff98108791f400 RCX: ffff9810f26b8f58\n[ 4562.099517] RDX: 0000000000000000 RSI: ffff9810f26b9158 RDI: ffff98108791f400\n[ 4562.099519] RBP: ffff9810f26b9158 R08: 0000000000000000 R09: 0000000000000000\n[ 4562.099521] R10: ffffa94cc420bc48 R11: 0000000000000001 R12: ffff9810f02a7cc0\n[ 4562.099526] R13: 0000000000000000 R14: 00000000000000ff R15: 0000000000000007\n[ 4562.099528] FS:  00007f629c5017c0(0000) GS:ffff98142c700000(0000) knlGS:0000000000000000\n[ 4562.099534] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 4562.099536] CR2: 00007f629a882000 CR3: 000000017019e004 CR4: 00000000003706f0\n[ 4562.099541] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 4562.099542] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 4562.099544] Call Trace:\n[ 4562.099555]  <TASK>\n[ 4562.099573]  ? die_addr+0x36/0x90\n[ 4562.099583]  ? exc_general_protection+0x246/0x4a0\n[ 4562.099593]  ? asm_exc_general_protection+0x26/0x30\n[ 4562.099600]  ? nvkm_object_search+0x1d/0x70 [nouveau]\n[ 4562.099730]  nvkm_ioctl+0xa1/0x250 [nouveau]\n[ 4562.099861]  nvif_object_map_handle+0xc8/0x180 [nouveau]\n[ 4562.099986]  nouveau_ttm_io_mem_reserve+0x122/0x270 [nouveau]\n[ 4562.100156]  ? dma_resv_test_signaled+0x26/0xb0\n[ 4562.100163]  ttm_bo_vm_fault_reserved+0x97/0x3c0 [ttm]\n[ 4562.100182]  ? __mutex_unlock_slowpath+0x2a/0x270\n[ 4562.100189]  nouveau_ttm_fault+0x69/0xb0 [nouveau]\n[ 4562.100356]  __do_fault+0x32/0x150\n[ 4562.100362]  do_fault+0x7c/0x560\n[ 4562.100369]  __handle_mm_fault+0x800/0xc10\n[ 4562.100382]  handle_mm_fault+0x17c/0x3e0\n[ 4562.100388]  do_user_addr_fault+0x208/0x860\n[ 4562.100395]  exc_page_fault+0x7f/0x200\n[ 4562.100402]  asm_exc_page_fault+0x26/0x30\n[ 4562.100412] RIP: 0033:0x9b9870\n[ 4562.100419] Code: 85 a8 f7 ff ff 8b 8d 80 f7 ff ff 89 08 e9 18 f2 ff ff 0f 1f 84 00 00 00 00 00 44 89 32 e9 90 fa ff ff 0f 1f 84 00 00 00 00 00 <44> 89 32 e9 f8 f1 ff ff 0f 1f 84 00 00 00 00 00 66 44 89 32 e9 e7\n[ 4562.100422] RSP: 002b:00007fff9ba2dc70 EFLAGS: 00010246\n[ 4562.100426] RAX: 0000000000000004 RBX: 000000000dd65e10 RCX: 000000fff0000000\n[ 4562.100428] RDX: 00007f629a882000 RSI: 00007f629a882000 RDI: 0000000000000066\n[ 4562.100432] RBP: 00007fff9ba2e570 R08: 0000000000000000 R09: 0000000123ddf000\n[ 4562.100434] R10: 0000000000000001 R11: 0000000000000246 R12: 000000007fffffff\n[ 4562.100436] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n[ 4562.100446]  </TASK>\n[ 4562.100448] Modules linked in: nf_conntrack_netbios_ns nf_conntrack_broadcast nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set nf_tables libcrc32c nfnetlink cmac bnep sunrpc iwlmvm intel_rapl_msr intel_rapl_common snd_sof_pci_intel_cnl x86_pkg_temp_thermal intel_powerclamp snd_sof_intel_hda_common mac80211 coretemp snd_soc_acpi_intel_match kvm_intel snd_soc_acpi snd_soc_hdac_hda snd_sof_pci snd_sof_xtensa_dsp snd_sof_intel_hda_mlink \n---truncated---",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/6887314f5356389fc219b8152e951ac084a10ef7"
          },
          {
            "url": "https://git.kernel.org/stable/c/96c8751844171af4b3898fee3857ee180586f589"
          },
          {
            "url": "https://git.kernel.org/stable/c/b7cc4ff787a572edf2c55caeffaa88cd801eb135"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27063",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.707",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nleds: trigger: netdev: Fix kernel panic on interface rename trig notify\nCommit d5e01266e7f5 (\"leds: trigger: netdev: add additional specific link\nspeed mode\") in the various changes, reworked the way to set the LINKUP\nmode in commit cee4bd16c319 (\"leds: trigger: netdev: Recheck\nNETDEV_LED_MODE_LINKUP on dev rename\") and moved it to a generic function.\nThis changed the logic where, in the previous implementation the dev\nfrom the trigger event was used to check if the carrier was ok, but in\nthe new implementation with the generic function, the dev in\ntrigger_data is used instead.\nThis is problematic and cause a possible kernel panic due to the fact\nthat the dev in the trigger_data still reference the old one as the\nnew one (passed from the trigger event) still has to be hold and saved\nin the trigger_data struct (done in the NETDEV_REGISTER case).\nOn calling of get_device_state(), an invalid net_dev is used and this\ncause a kernel panic.\nTo handle this correctly, move the call to get_device_state() after the\nnew net_dev is correctly set in trigger_data (in the NETDEV_REGISTER\ncase) and correctly parse the new dev.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/10f2af1af8ab8a7064f193446abd5579d3def7e3"
          },
          {
            "url": "https://git.kernel.org/stable/c/3f360227cb46edb2cd2494128e1e06ed5768a62e"
          },
          {
            "url": "https://git.kernel.org/stable/c/415798bc07dd1c1ae3a656aa026580816e0b9fe8"
          },
          {
            "url": "https://git.kernel.org/stable/c/acd025c7a7d151261533016a6ca2d38f2de04e87"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27064",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.757",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnetfilter: nf_tables: Fix a memory leak in nf_tables_updchain\nIf nft_netdev_register_hooks() fails, the memory associated with\nnft_stats is not freed, causing a memory leak.\nThis patch fixes it by moving nft_stats_alloc() down after\nnft_netdev_register_hooks() succeeds.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/4e4623a4f6e133e671f65f9ac493bddaaf63e250"
          },
          {
            "url": "https://git.kernel.org/stable/c/79846fdcc548d617b0b321addc6a3821d3b75b20"
          },
          {
            "url": "https://git.kernel.org/stable/c/7eaf837a4eb5f74561e2486972e7f5184b613f6e"
          },
          {
            "url": "https://git.kernel.org/stable/c/e77a6b53a3a547b6dedfc40c37cee4f310701090"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27065",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.803",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnetfilter: nf_tables: do not compare internal table flags on updates\nRestore skipping transaction if table update does not modify flags.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/2531f907d3e40a6173090f10670ae76d117ab27b"
          },
          {
            "url": "https://git.kernel.org/stable/c/3443e57654f90c9a843ab6a6040c10709fd033aa"
          },
          {
            "url": "https://git.kernel.org/stable/c/4a0e7f2decbf9bd72461226f1f5f7dcc4b08f139"
          },
          {
            "url": "https://git.kernel.org/stable/c/4d37f12707ee965d338028732575f0b85f6d9e4f"
          },
          {
            "url": "https://git.kernel.org/stable/c/640dbf688ba955e83e03de84fbdda8e570b7cce4"
          },
          {
            "url": "https://git.kernel.org/stable/c/9683cb6c2c6c0f45537bf0b8868b5d38fcb63fc7"
          },
          {
            "url": "https://git.kernel.org/stable/c/df257c435e51651c43b86326d112ddadda76350e"
          },
          {
            "url": "https://git.kernel.org/stable/c/fcf32a5bfcb8a57ac0ce717fcfa4d688c91f1005"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27066",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.850",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nvirtio: packed: fix unmap leak for indirect desc table\nWhen use_dma_api and premapped are true, then the do_unmap is false.\nBecause the do_unmap is false, vring_unmap_extra_packed is not called by\ndetach_buf_packed.\n  if (unlikely(vq->do_unmap)) {\n                curr = id;\n                for (i = 0; i < state->num; i++) {\n                        vring_unmap_extra_packed(vq,\n                                                 &vq->packed.desc_extra[curr]);\n                        curr = vq->packed.desc_extra[curr].next;\n                }\n  }\nSo the indirect desc table is not unmapped. This causes the unmap leak.\nSo here, we check vq->use_dma_api instead. Synchronously, dma info is\nupdated based on use_dma_api judgment\nThis bug does not occur, because no driver use the premapped with\nindirect.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/51bacd9d29bf98c3ebc65e4a0477bb86306b4140"
          },
          {
            "url": "https://git.kernel.org/stable/c/75450ff8c6fe8755bf5b139b238eaf9739cfd64e"
          },
          {
            "url": "https://git.kernel.org/stable/c/d5c0ed17fea60cca9bc3bf1278b49ba79242bbcd"
          },
          {
            "url": "https://git.kernel.org/stable/c/e142169aca5546ae6619c39a575cda8105362100"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27067",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.893",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nxen/evtchn: avoid WARN() when unbinding an event channel\nWhen unbinding a user event channel, the related handler might be\ncalled a last time in case the kernel was built with\nCONFIG_DEBUG_SHIRQ. This might cause a WARN() in the handler.\nAvoid that by adding an \"unbinding\" flag to struct user_event which\nwill short circuit the handler.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/35485dad6e28f9b17884764d4692b1655cb848d0"
          },
          {
            "url": "https://git.kernel.org/stable/c/51c23bd691c0f1fb95b29731c356c6fd69925d17"
          },
          {
            "url": "https://git.kernel.org/stable/c/99e425032c6ec13584d3cd33846e0c7307501b47"
          },
          {
            "url": "https://git.kernel.org/stable/c/9e2d4b58c1da48a32905802aaeadba7084b46895"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27068",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.937",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nthermal/drivers/mediatek/lvts_thermal: Fix a memory leak in an error handling path\nIf devm_krealloc() fails, then 'efuse' is leaking.\nSo free it to avoid a leak.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/2db869da91afd48e5b9ec76814709be49662b07d"
          },
          {
            "url": "https://git.kernel.org/stable/c/9b02197596671800dd934609384b1aca7c6ad218"
          },
          {
            "url": "https://git.kernel.org/stable/c/a37f3652bee468f879d35fe2da9ede3f1dcbb7be"
          },
          {
            "url": "https://git.kernel.org/stable/c/ca93bf607a44c1f009283dac4af7df0d9ae5e357"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27069",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:50.987",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\novl: relax WARN_ON in ovl_verify_area()\nsyzbot hit an assertion in copy up data loop which looks like it is\nthe result of a lower file whose size is being changed underneath\noverlayfs.\nThis type of use case is documented to cause undefined behavior, so\nreturning EIO error for the copy up makes sense, but it should not be\ncausing a WARN_ON assertion.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/77a28aa476873048024ad56daf8f4f17d58ee48e"
          },
          {
            "url": "https://git.kernel.org/stable/c/c3c85aefc0da1e5074a06c682542a54ccc99bdca"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27070",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.037",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nf2fs: fix to avoid use-after-free issue in f2fs_filemap_fault\nsyzbot reports a f2fs bug as below:\nBUG: KASAN: slab-use-after-free in f2fs_filemap_fault+0xd1/0x2c0 fs/f2fs/file.c:49\nRead of size 8 at addr ffff88807bb22680 by task syz-executor184/5058\nCPU: 0 PID: 5058 Comm: syz-executor184 Not tainted 6.7.0-syzkaller-09928-g052d534373b7 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023\nCall Trace:\n <TASK>\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x1e7/0x2d0 lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:377 [inline]\n print_report+0x163/0x540 mm/kasan/report.c:488\n kasan_report+0x142/0x170 mm/kasan/report.c:601\n f2fs_filemap_fault+0xd1/0x2c0 fs/f2fs/file.c:49\n __do_fault+0x131/0x450 mm/memory.c:4376\n do_shared_fault mm/memory.c:4798 [inline]\n do_fault mm/memory.c:4872 [inline]\n do_pte_missing mm/memory.c:3745 [inline]\n handle_pte_fault mm/memory.c:5144 [inline]\n __handle_mm_fault+0x23b7/0x72b0 mm/memory.c:5285\n handle_mm_fault+0x27e/0x770 mm/memory.c:5450\n do_user_addr_fault arch/x86/mm/fault.c:1364 [inline]\n handle_page_fault arch/x86/mm/fault.c:1507 [inline]\n exc_page_fault+0x456/0x870 arch/x86/mm/fault.c:1563\n asm_exc_page_fault+0x26/0x30 arch/x86/include/asm/idtentry.h:570\nThe root cause is: in f2fs_filemap_fault(), vmf->vma may be not alive after\nfilemap_fault(), so it may cause use-after-free issue when accessing\nvmf->vma->vm_flags in trace_f2fs_filemap_fault(). So it needs to keep vm_flags\nin separated temporary variable for tracepoint use.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/8186e16a766d709a08f188d2f4e84098f364bea1"
          },
          {
            "url": "https://git.kernel.org/stable/c/eb70d5a6c932d9d23f4bb3e7b83782c21ac4b064"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27071",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.083",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nbacklight: hx8357: Fix potential NULL pointer dereference\nThe \"im\" pins are optional. Add missing check in the hx8357_probe().",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/67e578c8ff2d7df03bf8ca9a7f5436b1796f6ad1"
          },
          {
            "url": "https://git.kernel.org/stable/c/b1ba8bcb2d1ffce11b308ce166c9cc28d989e3b9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27072",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.127",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: usbtv: Remove useless locks in usbtv_video_free()\nRemove locks calls in usbtv_video_free() because\nare useless and may led to a deadlock as reported here:\nhttps://syzkaller.appspot.com/x/bisect.txt?x=166dc872180000\nAlso remove usbtv_stop() call since it will be called when\nunregistering the device.\nBefore 'c838530d230b' this issue would only be noticed if you\ndisconnect while streaming and now it is noticeable even when\ndisconnecting while not streaming.\n[hverkuil: fix minor spelling mistake in log message]",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/3e7d82ebb86e94643bdb30b0b5b077ed27dce1c2"
          },
          {
            "url": "https://git.kernel.org/stable/c/65e6a2773d655172143cc0b927cdc89549842895"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27073",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.167",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: ttpci: fix two memleaks in budget_av_attach\nWhen saa7146_register_device and saa7146_vv_init fails, budget_av_attach\nshould free the resources it allocates, like the error-handling of\nttpci_budget_init does. Besides, there are two fixme comment refers to\nsuch deallocations.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1597cd1a88cfcdc4bf8b1b44cd458fed9a5a5d63"
          },
          {
            "url": "https://git.kernel.org/stable/c/24e51d6eb578b82ff292927f14b9f5ec05a46beb"
          },
          {
            "url": "https://git.kernel.org/stable/c/55ca0c7eae8499bb96f4e5d9b26af95e89c4e6a0"
          },
          {
            "url": "https://git.kernel.org/stable/c/656b8cc123d7635dd399d9f02594f27aa797ac3c"
          },
          {
            "url": "https://git.kernel.org/stable/c/7393c681f9aa05ffe2385e8716989565eed2fe06"
          },
          {
            "url": "https://git.kernel.org/stable/c/910363473e4bf97da3c350e08d915546dd6cc30b"
          },
          {
            "url": "https://git.kernel.org/stable/c/af37aed04997e644f7e1b52b696b62dcae3cc016"
          },
          {
            "url": "https://git.kernel.org/stable/c/d0b07f712bf61e1a3cf23c87c663791c42e50837"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27074",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.207",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: go7007: fix a memleak in go7007_load_encoder\nIn go7007_load_encoder, bounce(i.e. go->boot_fw), is allocated without\na deallocation thereafter. After the following call chain:\nsaa7134_go7007_init\n  |-> go7007_boot_encoder\n        |-> go7007_load_encoder\n  |-> kfree(go)\ngo is freed and thus bounce is leaked.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/291cda0b805fc0d6e90d201710311630c8667159"
          },
          {
            "url": "https://git.kernel.org/stable/c/7405a0d4442792988e9ae834e7d84f9d163731a4"
          },
          {
            "url": "https://git.kernel.org/stable/c/790fa2c04dfb9f095ec372bf17909424d6e864b3"
          },
          {
            "url": "https://git.kernel.org/stable/c/7f11dd3d165b178e738fe73dfeea513e383bedb5"
          },
          {
            "url": "https://git.kernel.org/stable/c/b49fe84c6cefcc1c2336d793b53442e716c95073"
          },
          {
            "url": "https://git.kernel.org/stable/c/b9b683844b01d171a72b9c0419a2d760d946ee12"
          },
          {
            "url": "https://git.kernel.org/stable/c/d43988a23c32588ccd0c74219637afb96cd78661"
          },
          {
            "url": "https://git.kernel.org/stable/c/e04d15c8bb3e111dd69f98894acd92d63e87aac3"
          },
          {
            "url": "https://git.kernel.org/stable/c/f31c1cc37411f5f7bcb266133f9a7e1b4bdf2975"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27075",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.257",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: dvb-frontends: avoid stack overflow warnings with clang\nA previous patch worked around a KASAN issue in stv0367, now a similar\nproblem showed up with clang:\ndrivers/media/dvb-frontends/stv0367.c:1222:12: error: stack frame size (3624) exceeds limit (2048) in 'stv0367ter_set_frontend' [-Werror,-Wframe-larger-than]\n 1214 | static int stv0367ter_set_frontend(struct dvb_frontend *fe)\nRework the stv0367_writereg() function to be simpler and mark both\nregister access functions as noinline_for_stack so the temporary\ni2c_msg structures do not get duplicated on the stack when KASAN_STACK\nis enabled.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/107052a8cfeff3a97326277192b4f052e4860a8a"
          },
          {
            "url": "https://git.kernel.org/stable/c/7a4cf27d1f0538f779bf31b8c99eda394e277119"
          },
          {
            "url": "https://git.kernel.org/stable/c/8fad9c5bb00d3a9508d18bbfe832e33a47377730"
          },
          {
            "url": "https://git.kernel.org/stable/c/c073c8cede5abd3836e83d70d72606d11d0759d4"
          },
          {
            "url": "https://git.kernel.org/stable/c/d20b64f156de5d10410963fe238d82a4e7e97a2f"
          },
          {
            "url": "https://git.kernel.org/stable/c/d6b4895197ab5a47cb81c6852d49320b05052960"
          },
          {
            "url": "https://git.kernel.org/stable/c/ed514ecf4f29c80a2f09ae3c877059b401efe893"
          },
          {
            "url": "https://git.kernel.org/stable/c/fa8b472952ef46eb632825051078c21ce0cafe55"
          },
          {
            "url": "https://git.kernel.org/stable/c/fb07104a02e87c06c39914d13ed67fd8f839ca82"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27076",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.307",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: imx: csc/scaler: fix v4l2_ctrl_handler memory leak\nFree the memory allocated in v4l2_ctrl_handler_init on release.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/42492b00156c03a79fd4851190aa63045d6a15ce"
          },
          {
            "url": "https://git.kernel.org/stable/c/4797a3dd46f220e6d83daf54d70c5b33db6deb01"
          },
          {
            "url": "https://git.kernel.org/stable/c/5d9fe604bf9b5b09d2215225df55f22a4cbbc684"
          },
          {
            "url": "https://git.kernel.org/stable/c/6c92224721a439d6350db5933a1060768dcd565e"
          },
          {
            "url": "https://git.kernel.org/stable/c/8c2e4efe1278cd2b230cdbf90a6cefbf00acc282"
          },
          {
            "url": "https://git.kernel.org/stable/c/8df9a3c7044b847e9c4dc7e683fd64c6b873f328"
          },
          {
            "url": "https://git.kernel.org/stable/c/b1d0eebaf87cc9ccd05f779ec4a0589f95d6c18b"
          },
          {
            "url": "https://git.kernel.org/stable/c/d164ddc21e986dd9ad614b4b01746e5457aeb24f"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27077",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.350",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: v4l2-mem2mem: fix a memleak in v4l2_m2m_register_entity\nThe entity->name (i.e. name) is allocated in v4l2_m2m_register_entity\nbut isn't freed in its following error-handling paths. This patch\nadds such deallocation to prevent memleak of entity->name.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0175f2d34c85744f9ad6554f696cf0afb5bd04e4"
          },
          {
            "url": "https://git.kernel.org/stable/c/0c9550b032de48d6a7fa6a4ddc09699d64d9300d"
          },
          {
            "url": "https://git.kernel.org/stable/c/3dd8abb0ed0e0a7c66d6d677c86ccb188cc39333"
          },
          {
            "url": "https://git.kernel.org/stable/c/5dc319cc3c4f7b74f7dfba349aa26f87efb52458"
          },
          {
            "url": "https://git.kernel.org/stable/c/8f94b49a5b5d386c038e355bef6347298aabd211"
          },
          {
            "url": "https://git.kernel.org/stable/c/90029b9c979b60de5cb2b70ade4bbf61d561bc5d"
          },
          {
            "url": "https://git.kernel.org/stable/c/9c23ef30e840fedc66948299509f6c2777c9cf4f"
          },
          {
            "url": "https://git.kernel.org/stable/c/afd2a82fe300032f63f8be5d6cd6981e75f8bbf2"
          },
          {
            "url": "https://git.kernel.org/stable/c/dc866b69cc51af9b8509b4731b8ce2a4950cd0ef"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27078",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.393",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: v4l2-tpg: fix some memleaks in tpg_alloc\nIn tpg_alloc, resources should be deallocated in each and every\nerror-handling paths, since they are allocated in for statements.\nOtherwise there would be memleaks because tpg_free is called only when\ntpg_alloc return 0.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0de691ff547d86dd54c24b40a81f9c925df8dd77"
          },
          {
            "url": "https://git.kernel.org/stable/c/31096da07933598da8522c54bd007376fb152a09"
          },
          {
            "url": "https://git.kernel.org/stable/c/4c86c772fef06f5d7a66151bac42366825db0941"
          },
          {
            "url": "https://git.kernel.org/stable/c/622b1cf38521569869c8f7b9fbe9e4f1a289add7"
          },
          {
            "url": "https://git.kernel.org/stable/c/6bf5c2fade8ed53b2d26fa9875e5b04f36c7145d"
          },
          {
            "url": "https://git.kernel.org/stable/c/770a57922ce36a8476c43f7400b6501c554ea511"
          },
          {
            "url": "https://git.kernel.org/stable/c/8269ab16415f2065cd792c49b0475543936cbd79"
          },
          {
            "url": "https://git.kernel.org/stable/c/8cf9c5051076e0eb958f4361d50d8b0c3ee6691c"
          },
          {
            "url": "https://git.kernel.org/stable/c/94303a06e1852a366e9671fff46d19459f88cb28"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27079",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.443",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\niommu/vt-d: Fix NULL domain on device release\nIn the kdump kernel, the IOMMU operates in deferred_attach mode. In this\nmode, info->domain may not yet be assigned by the time the release_device\nfunction is called. It leads to the following crash in the crash kernel:\n    BUG: kernel NULL pointer dereference, address: 000000000000003c\n    ...\n    RIP: 0010:do_raw_spin_lock+0xa/0xa0\n    ...\n    _raw_spin_lock_irqsave+0x1b/0x30\n    intel_iommu_release_device+0x96/0x170\n    iommu_deinit_device+0x39/0xf0\n    __iommu_group_remove_device+0xa0/0xd0\n    iommu_bus_notifier+0x55/0xb0\n    notifier_call_chain+0x5a/0xd0\n    blocking_notifier_call_chain+0x41/0x60\n    bus_notify+0x34/0x50\n    device_del+0x269/0x3d0\n    pci_remove_bus_device+0x77/0x100\n    p2sb_bar+0xae/0x1d0\n    ...\n    i801_probe+0x423/0x740\nUse the release_domain mechanism to fix it. The scalable mode context\nentry which is not part of release domain should be cleared in\nrelease_device().",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/333fe86968482ca701c609af590003bcea450e8f"
          },
          {
            "url": "https://git.kernel.org/stable/c/81e921fd321614c2ad8ac333b041aae1da7a1c6d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27080",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.497",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: fix race when detecting delalloc ranges during fiemap\nFor fiemap we recently stopped locking the target extent range for the\nwhole duration of the fiemap call, in order to avoid a deadlock in a\nscenario where the fiemap buffer happens to be a memory mapped range of\nthe same file. This use case is very unlikely to be useful in practice but\nit may be triggered by fuzz testing (syzbot, etc).\nThis however introduced a race that makes us miss delalloc ranges for\nfile regions that are currently holes, so the caller of fiemap will not\nbe aware that there's data for some file regions. This can be quite\nserious for some use cases - for example in coreutils versions before 9.0,\nthe cp program used fiemap to detect holes and data in the source file,\ncopying only regions with data (extents or delalloc) from the source file\nto the destination file in order to preserve holes (see the documentation\nfor its --sparse command line option). This means that if cp was used\nwith a source file that had delalloc in a hole, the destination file could\nend up without that data, which is effectively a data loss issue, if it\nhappened to hit the race described below.\nThe race happens like this:\n1) Fiemap is called, without the FIEMAP_FLAG_SYNC flag, for a file that\n   has delalloc in the file range [64M, 65M[, which is currently a hole;\n2) Fiemap locks the inode in shared mode, then starts iterating the\n   inode's subvolume tree searching for file extent items, without having\n   the whole fiemap target range locked in the inode's io tree - the\n   change introduced recently by commit b0ad381fa769 (\"btrfs: fix\n   deadlock with fiemap and extent locking\"). It only locks ranges in\n   the io tree when it finds a hole or prealloc extent since that\n   commit;\n3) Note that fiemap clones each leaf before using it, and this is to\n   avoid deadlocks when locking a file range in the inode's io tree and\n   the fiemap buffer is memory mapped to some file, because writing\n   to the page with btrfs_page_mkwrite() will wait on any ordered extent\n   for the page's range and the ordered extent needs to lock the range\n   and may need to modify the same leaf, therefore leading to a deadlock\n   on the leaf;\n4) While iterating the file extent items in the cloned leaf before\n   finding the hole in the range [64M, 65M[, the delalloc in that range\n   is flushed and its ordered extent completes - meaning the corresponding\n   file extent item is in the inode's subvolume tree, but not present in\n   the cloned leaf that fiemap is iterating over;\n5) When fiemap finds the hole in the [64M, 65M[ range by seeing the gap in\n   the cloned leaf (or a file extent item with disk_bytenr == 0 in case\n   the NO_HOLES feature is not enabled), it will lock that file range in\n   the inode's io tree and then search for delalloc by checking for the\n   EXTENT_DELALLOC bit in the io tree for that range and ordered extents\n   (with btrfs_find_delalloc_in_range()). But it finds nothing since the\n   delalloc in that range was already flushed and the ordered extent\n   completed and is gone - as a result fiemap will not report that there's\n   delalloc or an extent for the range [64M, 65M[, so user space will be\n   mislead into thinking that there's a hole in that range.\nThis could actually be sporadically triggered with test case generic/094\nfrom fstests, which reports a missing extent/delalloc range like this:\n  generic/094 2s ... - output mismatch (see /home/fdmanana/git/hub/xfstests/results//generic/094.out.bad)\n      --- tests/generic/094.out\t2020-06-10 19:29:03.830519425 +0100\n      +++ /home/fdmanana/git/hub/xfstests/results//generic/094.out.bad\t2024-02-28 11:00:00.381071525 +0000\n      @@ -1,3 +1,9 @@\n       QA output created by 094\n       fiemap run with sync\n       fiemap run without sync\n      +ERROR: couldn't find extent at 7\n      +map is 'HHDDHPPDPHPH'\n      +logical: [       5..       6] phys:\n---truncated---",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/49d640d2946c35a17b051d54171a032dd95b0f50"
          },
          {
            "url": "https://git.kernel.org/stable/c/978b63f7464abcfd364a6c95f734282c50f3decf"
          },
          {
            "url": "https://git.kernel.org/stable/c/ced63fffd63072c0ca55d5a451010d71bf08c0b3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27388",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.550",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nSUNRPC: fix some memleaks in gssx_dec_option_array\nThe creds and oa->data need to be freed in the error-handling paths after\ntheir allocation. So this patch add these deallocations in the\ncorresponding paths.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/3cfcfc102a5e57b021b786a755a38935e357797d"
          },
          {
            "url": "https://git.kernel.org/stable/c/5e6013ae2c8d420faea553d363935f65badd32c3"
          },
          {
            "url": "https://git.kernel.org/stable/c/934212a623cbab851848b6de377eb476718c3e4c"
          },
          {
            "url": "https://git.kernel.org/stable/c/9806c2393cd2ab0a8e7bb9ffae02ce20e3112ec4"
          },
          {
            "url": "https://git.kernel.org/stable/c/996997d1fb2126feda550d6adcedcbd94911fc69"
          },
          {
            "url": "https://git.kernel.org/stable/c/b97c37978ca825557d331c9012e0c1ddc0e42364"
          },
          {
            "url": "https://git.kernel.org/stable/c/bb336cd8d5ecb69c430ebe3e7bcff68471d93fa8"
          },
          {
            "url": "https://git.kernel.org/stable/c/bfa9d86d39a0fe4685f90c3529aa9bd62a9d97a8"
          },
          {
            "url": "https://git.kernel.org/stable/c/dd292e884c649f9b1c18af0ec75ca90b390cd044"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27389",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.653",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\npstore: inode: Only d_invalidate() is needed\nUnloading a modular pstore backend with records in pstorefs would\ntrigger the dput() double-drop warning:\n  WARNING: CPU: 0 PID: 2569 at fs/dcache.c:762 dput.part.0+0x3f3/0x410\nUsing the combo of d_drop()/dput() (as mentioned in\nDocumentation/filesystems/vfs.rst) isn't the right approach here, and\nleads to the reference counting problem seen above. Use d_invalidate()\nand update the code to not bother checking for error codes that can\nnever happen.\n---",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/340682ed1932b8e3bd0bfc6c31a0c6354eb57cc6"
          },
          {
            "url": "https://git.kernel.org/stable/c/4cdf9006fc095af71da80e9b5f48a32e991b9ed3"
          },
          {
            "url": "https://git.kernel.org/stable/c/a43e0fc5e9134a46515de2f2f8d4100b74e50de3"
          },
          {
            "url": "https://git.kernel.org/stable/c/cb9e802e49c24eeb3af35e9e8c04d526f35f112a"
          },
          {
            "url": "https://git.kernel.org/stable/c/db6e5e16f1ee9e3b01d2f71c7f0ba945f4bf0f4e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27390",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.697",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nipv6: mcast: remove one synchronize_net() barrier in ipv6_mc_down()\nAs discussed in the past (commit 2d3916f31891 (\"ipv6: fix skb drops\nin igmp6_event_query() and igmp6_event_report()\")) I think the\nsynchronize_net() call in ipv6_mc_down() is not needed.\nUnder load, synchronize_net() can last between 200 usec and 5 ms.\nKASAN seems to agree as well.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/17ef8efc00b34918b966388b2af0993811895a8c"
          },
          {
            "url": "https://git.kernel.org/stable/c/26d4bac55750d535f1f0b8790dc26daf6089e373"
          },
          {
            "url": "https://git.kernel.org/stable/c/5da9a218340a2bc804dc4327e5804392e24a0b88"
          },
          {
            "url": "https://git.kernel.org/stable/c/7eb06ee5921189812e6b4bfe7b0f1e878be16df7"
          },
          {
            "url": "https://git.kernel.org/stable/c/9d159d6637ccce25f879d662a480541ef4ba3a50"
          },
          {
            "url": "https://git.kernel.org/stable/c/a03ede2282ebbd181bd6f5c38cbfcb5765afcd04"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27391",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.750",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: wilc1000: do not realloc workqueue everytime an interface is added\nCommit 09ed8bfc5215 (\"wilc1000: Rename workqueue from \"WILC_wq\" to\n\"NETDEV-wq\"\") moved workqueue creation in wilc_netdev_ifc_init in order to\nset the interface name in the workqueue name. However, while the driver\nneeds only one workqueue, the wilc_netdev_ifc_init is called each time we\nadd an interface over a phy, which in turns overwrite the workqueue with a\nnew one. This can be observed with the following commands:\nfor i in $(seq 0 10)\ndo\n  iw phy phy0 interface add wlan1 type managed\n  iw dev wlan1 del\ndone\nps -eo pid,comm|grep wlan\n 39 kworker/R-wlan0\n 98 kworker/R-wlan1\n102 kworker/R-wlan1\n105 kworker/R-wlan1\n108 kworker/R-wlan1\n111 kworker/R-wlan1\n114 kworker/R-wlan1\n117 kworker/R-wlan1\n120 kworker/R-wlan1\n123 kworker/R-wlan1\n126 kworker/R-wlan1\n129 kworker/R-wlan1\nFix this leakage by putting back hif_workqueue allocation in\nwilc_cfg80211_init. Regarding the workqueue name, it is indeed relevant to\nset it lowercase, however it is not  attached to a specific netdev, so\nenforcing netdev name in the name is not so relevant. Still, enrich the\nname with the wiphy name to make it clear which phy is using the workqueue.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/328efda22af81130c2ad981c110518cb29ff2f1d"
          },
          {
            "url": "https://git.kernel.org/stable/c/4041c60a9d543b3ad50225385b072ba68e96166e"
          },
          {
            "url": "https://git.kernel.org/stable/c/515cc676dfbce40d93c92b1ff3c1070e917f4e52"
          },
          {
            "url": "https://git.kernel.org/stable/c/90ae293d1d255f622318fce6eeea2e18f9fde5c1"
          },
          {
            "url": "https://git.kernel.org/stable/c/9ab0c303ccabfd6bdce14432792d41090070008c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27392",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-05-01T13:15:51.793",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnvme: host: fix double-free of struct nvme_id_ns in ns_update_nuse()\nWhen nvme_identify_ns() fails, it frees the pointer to the struct\nnvme_id_ns before it returns. However, ns_update_nuse() calls kfree()\nfor the pointer even when nvme_identify_ns() fails. This results in\nKASAN double-free, which was observed with blktests nvme/045 with\nproposed patches [1] on the kernel v6.8-rc7. Fix the double-free by\nskipping kfree() when nvme_identify_ns() fails.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/534f9dc7fe495b3f9cc84363898ac50c5a25fccb"
          },
          {
            "url": "https://git.kernel.org/stable/c/8d0d2447394b13fb22a069f0330f9c49b7fff9d3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-28775",
        "sourceIdentifier": "psirt@us.ibm.com",
        "published": "2024-05-01T13:15:51.837",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.3,
        "impactScore": 2.7,
        "description": "IBM WebSphere Automation 1.7.0 is vulnerable to cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.  IBM X-Force ID:  285648.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/285648"
          },
          {
            "url": "https://www.ibm.com/support/pages/node/7149856"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31412",
        "sourceIdentifier": "vultures@jpcert.or.jp",
        "published": "2024-05-01T13:15:52.030",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Out-of-bounds read vulnerability exists in CX-Programmer included in CX-One CXONE-AL[][]D-V4 Ver. 9.81 or lower. Opening a specially crafted project file may lead to information disclosure and/or the product being crashed.",
        "cweIds": null,
        "references": [
          {
            "url": "https://jvn.jp/en/vu/JVNVU98274902/"
          },
          {
            "url": "https://www.fa.omron.co.jp/product/security/assets/pdf/en/OMSR-2024-003_en.pdf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31413",
        "sourceIdentifier": "vultures@jpcert.or.jp",
        "published": "2024-05-01T13:15:52.080",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Free of pointer not at start of buffer vulnerability exists in CX-One CX-One CXONE-AL[][]D-V4 (The version which was installed with a DVD ver. 4.61.1 or lower, and was updated through CX-One V4 auto update in January 2024 or prior) and Sysmac Studio SYSMAC-SE2[][][] (The version which was installed with a DVD ver. 1.56 or lower, and was updated through Sysmac Studio V1 auto update in January 2024 or prior). Opening a specially crafted project file may lead to arbitrary code execution.",
        "cweIds": null,
        "references": [
          {
            "url": "https://jvn.jp/en/vu/JVNVU98274902/"
          },
          {
            "url": "https://www.fa.omron.co.jp/product/security/assets/pdf/en/OMSR-2024-002_en.pdf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-33775",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-05-01T13:15:52.130",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue with the Autodiscover component in Nagios XI 2024R1.01 allows a remote attacker to escalate privileges via a crafted Dashlet.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.nagios.com/changelog/#nagios-xi"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4058",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-05-01T13:15:52.200",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Type confusion in ANGLE in Google Chrome prior to 124.0.6367.78 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: Critical)",
        "cweIds": null,
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/04/stable-channel-update-for-desktop_24.html"
          },
          {
            "url": "https://issues.chromium.org/issues/332546345"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4059",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-05-01T13:15:52.253",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Out of bounds read in V8 API in Google Chrome prior to 124.0.6367.78 allowed a remote attacker to leak cross-site data via a crafted HTML page. (Chromium security severity: High)",
        "cweIds": null,
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/04/stable-channel-update-for-desktop_24.html"
          },
          {
            "url": "https://issues.chromium.org/issues/333182464"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4060",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-05-01T13:15:52.300",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Use after free in Dawn in Google Chrome prior to 124.0.6367.78 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)",
        "cweIds": null,
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/04/stable-channel-update-for-desktop_24.html"
          },
          {
            "url": "https://issues.chromium.org/issues/333420620"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4331",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-05-01T13:15:52.343",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Use after free in Picture In Picture in Google Chrome prior to 124.0.6367.118 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)",
        "cweIds": null,
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/04/stable-channel-update-for-desktop_30.html"
          },
          {
            "url": "https://issues.chromium.org/issues/335003891"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4368",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-05-01T13:15:52.390",
        "lastModified": "2024-05-01T19:50:25.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Use after free in Dawn in Google Chrome prior to 124.0.6367.118 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)",
        "cweIds": null,
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/04/stable-channel-update-for-desktop_30.html"
          },
          {
            "url": "https://issues.chromium.org/issues/333508731"
          }
        ]
      }
    }
  ]
}