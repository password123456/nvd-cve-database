{
  "totalResults": 6,
  "datePublished": "2024-05-21T07:00:07.588734Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-33900",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-05-20T21:15:09.177",
        "lastModified": "2024-05-20T21:15:09.177",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "KeePassXC 2.7.7 allows attackers to recover cleartext credentials.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Fastor01/30c6d89c842feb1865ec2cd2d3806838"
          },
          {
            "url": "https://keepassxc.org/blog/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-33901",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-05-20T21:15:09.243",
        "lastModified": "2024-05-20T21:15:09.243",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Issue in KeePassXC 2.7.7 allows an attacker to recover some passwords stored in the .kdbx database.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/Fastor01/30c6d89c842feb1865ec2cd2d3806838"
          },
          {
            "url": "https://keepassxc.org/blog/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-35191",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-20T21:15:09.307",
        "lastModified": "2024-05-20T21:15:09.307",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.8,
        "impactScore": 3.6,
        "description": "Formie is a Craft CMS plugin for creating forms. Prior to 2.1.6, users with access to a form's settings can include malicious Twig code into fields that support Twig. These might be the Submission Title or the Success Message. This code will then be executed upon creating a submission, or rendering the text.  This has been fixed in Formie 2.1.6.",
        "cweIds": [
          {
            "id": "CWE-1336",
            "description": "Improper Neutralization of Special Elements Used in a Template Engine"
          }
        ],
        "references": [
          {
            "url": "https://github.com/verbb/formie/commit/90296edf7e707f117e760aa57e70dbd43a854420"
          },
          {
            "url": "https://github.com/verbb/formie/security/advisories/GHSA-v45m-hxqp-fwf5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-35192",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-20T21:15:09.550",
        "lastModified": "2024-05-20T21:15:09.550",
        "baseScore": 5.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.0,
        "impactScore": 4.0,
        "description": "Trivy is a security scanner. Prior to 0.51.2, if a malicious actor is able to trigger Trivy to scan container images from a crafted malicious registry, it could result in the leakage of credentials for legitimate registries such as AWS Elastic Container Registry (ECR), Google Cloud Artifact/Container Registry, or Azure Container Registry (ACR). These tokens can then be used to push/pull images from those registries to which the identity/user running Trivy has access. Systems are not affected if the default credential provider chain is unable to obtain valid credentials. This vulnerability only applies when scanning container images directly from a registry. This vulnerability is fixed in 0.51.2.",
        "cweIds": [
          {
            "id": "CWE-522",
            "description": "Insufficiently Protected Credentials"
          }
        ],
        "references": [
          {
            "url": "https://github.com/aquasecurity/trivy/commit/e7f14f729de259551203f313e57d2d9d3aa2ff87"
          },
          {
            "url": "https://github.com/aquasecurity/trivy/security/advisories/GHSA-xcq4-m2r3-cmrj"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-35194",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-20T21:15:09.773",
        "lastModified": "2024-05-20T21:15:09.773",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 3.6,
        "description": "Minder is a software supply chain security platform. Prior to version 0.0.50, Minder engine is susceptible to a denial of service from memory exhaustion that can be triggered from maliciously created templates. Minder engine uses templating to generate strings for various use cases such as URLs, messages for pull requests, descriptions for advisories. In some cases can the user control both the template and the params for it, and in a subset of these cases, Minder reads the generated template entirely into memory. When Minders templating meets both of these conditions, an attacker is able to generate large enough templates that Minder will exhaust memory and crash. This vulnerability is fixed in 0.0.50.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://github.com/stacklok/minder/commit/fe321d345b4f738de6a06b13207addc72b59f892"
          },
          {
            "url": "https://github.com/stacklok/minder/security/advisories/GHSA-crgc-2583-rw27"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-35195",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-05-20T21:15:09.990",
        "lastModified": "2024-05-20T21:15:09.990",
        "baseScore": 5.6,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.3,
        "impactScore": 5.2,
        "description": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0.",
        "cweIds": [
          {
            "id": "CWE-670",
            "description": "Always-Incorrect Control Flow Implementation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/psf/requests/commit/a58d7f2ffb4d00b46dca2d70a3932a0b37e22fac"
          },
          {
            "url": "https://github.com/psf/requests/pull/6655"
          },
          {
            "url": "https://github.com/psf/requests/security/advisories/GHSA-9wx4-h78v-vm56"
          }
        ]
      }
    }
  ]
}