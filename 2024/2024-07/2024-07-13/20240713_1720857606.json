{
  "totalResults": 46,
  "datePublished": "2024-07-13T17:00:06.705739Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-2870",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:02.310",
        "lastModified": "2024-07-13T06:15:02.310",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/688522d2-ee28-44f8-828d-352f06e43885/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3026",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:02.547",
        "lastModified": "2024-07-13T06:15:02.547",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WordPress Button Plugin MaxButtons WordPress plugin before 9.7.8 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/aba9d8a5-20a7-49e5-841c-9cfcb9bc6144/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3632",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:02.617",
        "lastModified": "2024-07-13T06:15:02.617",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Smart Image Gallery WordPress plugin before 1.0.19 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/9b11682d-4705-4595-943f-0fa093d0b644/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3710",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:02.700",
        "lastModified": "2024-07-13T06:15:02.700",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Image Photo Gallery Final Tiles Grid WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/bde10913-4f7e-4590-86eb-33bfa904f95f/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3751",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:02.773",
        "lastModified": "2024-07-13T06:15:02.773",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Seriously Simple Podcasting WordPress plugin before 3.3.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/1c684b05-2545-4fa5-ba9e-91d8b8f725ac/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3753",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:02.840",
        "lastModified": "2024-07-13T06:15:02.840",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Hostel WordPress plugin before 1.1.5.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/e140e109-4176-4b26-bf63-198262a31409/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3919",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:02.900",
        "lastModified": "2024-07-13T06:15:02.900",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The OpenPGP Form Encryption for WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/4e38c7d9-5b6a-4dfc-8f22-3ff30565ce43/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3963",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:02.967",
        "lastModified": "2024-07-13T06:15:02.967",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Giveaways and Contests by RafflePress  WordPress plugin before 1.12.14 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/827d738e-5369-431e-8438-b5c4d8c1f8f1/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3964",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.030",
        "lastModified": "2024-07-13T06:15:03.030",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Product Enquiry for WooCommerce WordPress plugin before 3.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/ff468772-3e6a-439c-a4d7-94bd2ce1a964/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4217",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.097",
        "lastModified": "2024-07-13T06:15:03.097",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The shortcodes-ultimate-pro WordPress plugin before 7.1.5 does not properly escape some of its shortcodes' settings, making it possible for attackers with a Contributor account to conduct Stored XSS attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/55cb43bf-7c8f-4df7-b4de-bf2bb1c2766d/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4269",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.170",
        "lastModified": "2024-07-13T06:15:03.170",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The SVG Block WordPress plugin before 1.1.20 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/8aae7aa1-6170-45d8-903f-8520913276da/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4272",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.230",
        "lastModified": "2024-07-13T06:15:03.230",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Support SVG  WordPress plugin before 1.1.0 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/ed1b1540-a0e2-434e-8769-9532c3ed5e31/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4602",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.297",
        "lastModified": "2024-07-13T06:15:03.297",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Embed Peertube Playlist WordPress plugin before 1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/bc15bac7-8241-472a-a7c1-58070714501d/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4752",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.370",
        "lastModified": "2024-07-13T06:15:03.370",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The EventON WordPress plugin before 2.2.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/70d1f5d5-1a96-494b-9203-96a7780026da/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4977",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.440",
        "lastModified": "2024-07-13T06:15:03.440",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/89791a80-5cff-4a1a-8163-94b5be4081a5/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5002",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.500",
        "lastModified": "2024-07-13T06:15:03.500",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The User Submitted Posts  WordPress plugin before 20240516 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/da09b99a-fa40-428f-80b4-0af764fd2f4f/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5028",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.563",
        "lastModified": "2024-07-13T06:15:03.563",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The CM WordPress Search And Replace Plugin WordPress plugin before 1.3.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/0bae8494-7b01-4203-a4f7-ccc60efbdda7/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5032",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.633",
        "lastModified": "2024-07-13T06:15:03.633",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/4bb92693-23b3-4250-baee-af38b7e615e0/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5033",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.707",
        "lastModified": "2024-07-13T06:15:03.707",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/dd42765a-1300-453f-9835-6e646c87e496/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5034",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.780",
        "lastModified": "2024-07-13T06:15:03.780",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/31f3a3b5-07bf-4cb3-b358-8488808733e0/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5074",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.840",
        "lastModified": "2024-07-13T06:15:03.840",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/174a2ba8-0215-480f-93ec-83ebc4a3200e/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5075",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.910",
        "lastModified": "2024-07-13T06:15:03.910",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/b47d93d6-5511-451a-853f-c8b0fba20969/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5076",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:03.970",
        "lastModified": "2024-07-13T06:15:03.970",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-eMember WordPress plugin before 10.6.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/01cbc841-a30f-4df5-ab7f-0c2c7469657b/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5077",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.033",
        "lastModified": "2024-07-13T06:15:04.033",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-eMember WordPress plugin before 10.6.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/00fcbcf3-41ee-45e7-a0a9-0d46cb7ef859/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5079",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.097",
        "lastModified": "2024-07-13T06:15:04.097",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape some of the fields when members register, which allows unauthenticated users to perform Stored Cross-Site Scripting attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/bdb5509e-80ab-4e47-83a4-9347796eec40/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5080",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.163",
        "lastModified": "2024-07-13T06:15:04.163",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-eMember WordPress plugin before 10.6.6 does not validate files to be uploaded, which could allow admins to upload arbitrary files such as PHP on the server",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/15f78aad-001c-4219-aa7e-46537e1357a2/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5151",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.237",
        "lastModified": "2024-07-13T06:15:04.237",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/1ede4c66-9932-4ba6-bba1-0ba13f5a2f8f/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5167",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.303",
        "lastModified": "2024-07-13T06:15:04.303",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The CM Email Registration Blacklist and Whitelist WordPress plugin before 1.4.9 does not have CSRF check when adding or deleting an item from the blacklist or whitelist, which could allow attackers to make a logged in admin add or delete settings from the blacklist or whitelist menu via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/67bb5ab8-4493-4f5b-a989-41576675b61a/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5280",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.360",
        "lastModified": "2024-07-13T06:15:04.360",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make non-logged in users execute an XSS payload via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/bbc214ba-4e97-4b3a-a21b-2931a9e36973/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5281",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.430",
        "lastModified": "2024-07-13T06:15:04.430",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/3c0bdb0f-a06a-47a8-9198-a2bf2678b8f1/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5282",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.490",
        "lastModified": "2024-07-13T06:15:04.490",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/bf3fb97e-12fa-4b37-b28b-1771ddb5ceb1/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5283",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.553",
        "lastModified": "2024-07-13T06:15:04.553",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/3e1adcd3-7c46-45e8-9e2b-2ede0d79c943/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5284",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.617",
        "lastModified": "2024-07-13T06:15:04.617",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/a601a267-e781-439f-9c76-b4c841e819e5/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5286",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.700",
        "lastModified": "2024-07-13T06:15:04.700",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/a0b3069c-59d3-41ea-9b48-f5a4cf9ca45f/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5287",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.780",
        "lastModified": "2024-07-13T06:15:04.780",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in user change them via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/b4fd535c-a273-419d-9e2e-be1cbd822793/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5442",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.847",
        "lastModified": "2024-07-13T06:15:04.847",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Photo Gallery, Sliders, Proofing and   WordPress plugin before 3.59.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/4f1fa417-f760-4132-95c2-a38d0b631263/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5450",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:04.927",
        "lastModified": "2024-07-13T06:15:04.927",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Bug Library WordPress plugin before 2.1.1 does not check the file type on user-submitted bug reports, allowing an unauthenticated user to upload PHP files",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/d91217bc-9f8f-4971-885e-89edc45b2a4d/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5472",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:05.000",
        "lastModified": "2024-07-13T06:15:05.000",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WP QuickLaTeX WordPress plugin before 3.8.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/dcddc2de-c32c-4f8c-8490-f3d980b05822/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5575",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:05.070",
        "lastModified": "2024-07-13T06:15:05.070",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Ditty  WordPress plugin before 3.1.43 does not sanitise and escape some of its blocks' settings, which could allow high privilege users such as authors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/65d1abb7-92e9-4cc4-a1d0-84985b484af3/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5627",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:05.170",
        "lastModified": "2024-07-13T06:15:05.170",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some parameters, which could allow users with a role as low as subscriber to perform Cross-Site Scripting attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/5b18dc3d-0d5f-44e9-b22f-48ea0a9c9193/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5644",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:05.243",
        "lastModified": "2024-07-13T06:15:05.243",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/afe14c7a-95b2-4d3f-901a-e53ecef70d49/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5713",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:05.313",
        "lastModified": "2024-07-13T06:15:05.313",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/eb3f24a7-3171-42c3-9016-e29da4f384fa/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5715",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:05.393",
        "lastModified": "2024-07-13T06:15:05.393",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/d86bc001-51ae-4dcc-869b-80c91251cc2e/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5744",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:05.457",
        "lastModified": "2024-07-13T06:15:05.457",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The wp-eMember WordPress plugin before 10.6.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/ba50e25c-7250-4025-a72f-74f8eb756246/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6070",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-13T06:15:05.520",
        "lastModified": "2024-07-13T06:15:05.520",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/97bab6cf-011c-4df4-976c-1f3252082f8f/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6574",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-13T06:15:05.587",
        "lastModified": "2024-07-13T06:15:05.587",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Laposta plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 1.12. This is due to the plugin not preventing direct access to several test files. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website. This plugin is no longer being maintained and has been closed for downloads.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/laposta/trunk/includes/laposta-php-1.2/examples/member/all.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/7632fe73-4011-4e6e-8ce7-38a9359ac259?source=cve"
          }
        ]
      }
    }
  ]
}