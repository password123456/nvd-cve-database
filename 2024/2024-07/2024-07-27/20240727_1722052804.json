{
  "totalResults": 15,
  "datePublished": "2024-07-27T13:00:04.529878Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-1798",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:09.800",
        "lastModified": "2024-07-27T02:15:09.800",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Tutor LMS – Migration Tool plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the tutor_lp_export_xml function in all versions up to, and including, 2.2.0. This makes it possible for unauthenticated attackers to export courses, including private and password protected courses.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/tutor-lms-migration-tool/trunk/classes/LPtoTutorMigration.php#L762"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0cb67f55-6d21-4a4e-9651-fcf671788d16?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1804",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:10.060",
        "lastModified": "2024-07-27T02:15:10.060",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Tutor LMS – Migration Tool plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the tutor_import_from_xml function in all versions up to, and including, 2.2.0. This makes it possible for authenticated attackers, with subscriber-level access and above, to import courses.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/tutor-lms-migration-tool/trunk/classes/LPtoTutorMigration.php#L579"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0a49a22e-d54e-461d-83c2-8278494eac13?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4410",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:10.263",
        "lastModified": "2024-07-27T02:15:10.263",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "The IgnitionDeck Crowdfunding Platform plugin for WordPress is vulnerable to Missing Authorization in versions up to, and including, 1.9.8. This is due to missing capability checks on various functions called via AJAX actions in the ~/classes/class-idf-wizard.php file. This makes it possible for authenticated attackers, with subscriber access or higher, to execute various AJAX actions. This includes actions to change the permalink structure, plugin settings and others.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/ignitiondeck/trunk/classes/class-idf-wizard.php#L1162"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/ignitiondeck/trunk/classes/class-idf-wizard.php#L186"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/07b6aad4-fbaf-4c0c-b2b7-6e264a1afb9b?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6152",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:10.473",
        "lastModified": "2024-07-27T02:15:10.473",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Flipbox Builder plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.5 via deserialization of untrusted input in the flipbox_builder_Flipbox_ShortCode function. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.",
        "cweIds": [
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/flipbox-builder/trunk/template-front/shortcode.php#L30"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0e9cd38a-b2cd-4801-a06b-4e965fa72e04?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6431",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:10.677",
        "lastModified": "2024-07-27T02:15:10.677",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Media.net Ads Manager plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation and missing capability check in the 'sendMail' function in all versions up to, and including, 2.10.13. This makes it possible for authenticated attackers, with subscriber-level and above permissions, to upload arbitrary files on the affected site's server which may make remote code execution possible. The vulnerability is only exploitable if anyone has ever logged in through the API.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/media-net-ads-manager/tags/2.10.13/app/admin/MnetAdHandleAjaxCalls.php#L206"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/54fac673-2d83-4d06-a4c0-8bffc269a90c?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6545",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:10.883",
        "lastModified": "2024-07-27T02:15:10.883",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Admin Trim Interface plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 3.5.1. This is due to the plugin utilizing bootstrap and leaving test files with display_errors on. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/admin-trim-interface/trunk/tests/bootstrap.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/92a50f24-7011-4fe4-a095-e7e320bfec81?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6546",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:11.097",
        "lastModified": "2024-07-27T02:15:11.097",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The One Click Close Comments plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 2.7.1. This is due to the plugin utilizing bootstrap and leaving test files with display_errors on. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/one-click-close-comments/trunk/tests/bootstrap.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/feb63b10-fe23-4f89-9ef3-0a61b4190320?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6547",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:11.307",
        "lastModified": "2024-07-27T02:15:11.307",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Add Admin CSS plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 2.0.1.  This is due to the plugin utilizing bootstrap and leaving test files with display_errors on. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/add-admin-css/trunk/tests/phpunit/bootstrap.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0064244b-72a4-486d-aaad-be1f57e4a8a1?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6548",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:11.513",
        "lastModified": "2024-07-27T02:15:11.513",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Add Admin JavaScript plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 2.0. This is due to the plugin utilizing bootstrap and leaving test files with display_errors on. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/add-admin-javascript/trunk/tests/phpunit/bootstrap.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1069c845-30b9-4aca-8a60-8b66c48365af?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6549",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:11.713",
        "lastModified": "2024-07-27T02:15:11.713",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Admin Post Navigation plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 2.1. This is due to the plugin utilizing bootstrap and leaving test files with display_errors on. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/admin-post-navigation/trunk/tests/bootstrap.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d27ef0b4-266f-47b8-a7aa-ddff5adaac7a?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6566",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:11.920",
        "lastModified": "2024-07-27T02:15:11.920",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Aramex Shipping WooCommerce plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 1.1.21. This is due the plugin not preventing direct access to the composer-setup.php file which also has display_errors enabled. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/aramex-shipping-woocommerce/trunk/vendor/jurosh/pdf-merge/bin/composer-setup.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d62bd71c-3d08-4767-b471-a1d5a17fe6ba?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6573",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:12.130",
        "lastModified": "2024-07-27T02:15:12.130",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Intelligence plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 1.4.0. This is due the plugin not preventing direct access to the /vendor/levelten/intel/realtime/index.php file and display_errors being enabled. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/intelligence/trunk/vendor/levelten/intel/realtime/index.php"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/intelligence/trunk/vendor/levelten/intel/realtime/settings.php#L12"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/b5aa0222-1e70-4c06-860f-77643da4356c?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6591",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:12.330",
        "lastModified": "2024-07-27T02:15:12.330",
        "baseScore": 5.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Ultimate WordPress Auction Plugin plugin for WordPress is vulnerable to unauthorized email creation and sending due to a missing capability check on the 'send_auction_email_callback' and 'resend_auction_email_callback' functions in all versions up to, and including, 4.2.6. This makes it possible for unauthenticated attackers to craft emails that include links and send to any email address.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/ultimate-auction/trunk/ultimate-auction.php#L119"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/ultimate-auction/trunk/ultimate-auction.php#L93"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/534a5d1d-cc34-4d84-b3a3-bf2282718656?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6634",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:12.560",
        "lastModified": "2024-07-27T02:15:12.560",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Master Currency WP plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's currencyconverterform shortcode in all versions up to, and including, 1.1.61 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/mastercurrency-wp/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/fea71287-f92e-43e5-adbf-d89fce437e56?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6661",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-27T02:15:12.780",
        "lastModified": "2024-07-27T02:15:12.780",
        "baseScore": 5.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 2.7,
        "description": "The ParityPress – Parity Pricing with Discount Rules plugin for WordPress is vulnerable to Stored Cross-Site Scripting via  'Discount Text' in all versions up to, and including, 1.0.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/paritypress/trunk/app/Hooks/Activator.php#L22"
          },
          {
            "url": "https://wordpress.org/plugins/paritypress/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/f015ff9b-a7dc-47de-83d4-d6b91ec433f7?source=cve"
          }
        ]
      }
    }
  ]
}