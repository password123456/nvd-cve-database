{
  "totalResults": 4,
  "datePublished": "2024-07-11T15:00:10.794368Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-0619",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-11T04:15:03.247",
        "lastModified": "2024-07-11T13:05:54.930",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Payflex Payment Gateway plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the payment_callback() function in all versions up to, and including, 2.5.0. This makes it possible for unauthenticated attackers to update the status of orders, which can potentially lead to revenue loss.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/payflex-payment-gateway/trunk/partpay.php#L751"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/9f740cfa-7163-4634-9705-0e01ee571a11?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6397",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-11T04:15:05.997",
        "lastModified": "2024-07-11T13:05:54.930",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The InstaWP Connect – 1-click WP Staging & Migration plugin for WordPress is vulnerable to authentication bypass in all versions up to, and including, 0.1.0.44. This is due to insufficient verification of the API key. This makes it possible for unauthenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the username, and to perform a variety of other administrative tasks. NOTE: This vulnerability was partially fixed in 0.1.0.44, but was still exploitable via Cross-Site Request Forgery.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/instawp-connect/tags/0.1.0.43/includes/apis/class-instawp-rest-api.php#L256"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/instawp-connect/tags/0.1.0.43/includes/class-instawp-hooks.php#L28"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/instawp-connect/tags/0.1.0.43/includes/class-instawp-hooks.php#L40"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3109305/"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3114674/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/963f2485-3afa-4e17-8278-b75415af3915?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6554",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-11T04:15:06.387",
        "lastModified": "2024-07-11T13:05:54.930",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Branda – White Label WordPress, Custom Login Page Customizer plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 3.4.18. This is due the plugin utilizing composer without preventing direct access to the files. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/branda-white-labeling/trunk/misc/composer/prefix-fixer.php"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3115603%40branda-white-labeling&new=3115603%40branda-white-labeling&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0a79eb25-a7d1-4102-97e6-8fa8db9ed03e?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-22280",
        "sourceIdentifier": "security@vmware.com",
        "published": "2024-07-11T05:15:10.123",
        "lastModified": "2024-07-11T13:05:54.930",
        "baseScore": 8.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.1,
        "impactScore": 4.7,
        "description": "VMware Aria Automation does not apply correct input validation which allows for SQL-injection in the product. An authenticated malicious user could enter specially crafted SQL queries and perform unauthorised read/write operations in the database.",
        "cweIds": null,
        "references": [
          {
            "url": "https://support.broadcom.com/web/ecx/support-content-notification/-/external/content/SecurityAdvisories/0/24598"
          }
        ]
      }
    }
  ]
}