{
  "totalResults": 43,
  "datePublished": "2024-07-09T19:00:09.011467Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-37555",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-07-09T08:15:10.270",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 9.1,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 2.3,
        "impactScore": 6.0,
        "description": "Unrestricted Upload of File with Dangerous Type vulnerability in ZealousWeb Generate PDF using Contact Form 7.This issue affects Generate PDF using Contact Form 7: from n/a through 4.0.6.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/generate-pdf-using-contact-form-7/wordpress-generate-pdf-using-contact-form-7-plugin-4-0-6-arbitrary-file-upload-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37923",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-07-09T08:15:10.573",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "Cross-Site Request Forgery (CSRF) vulnerability in Cliengo – Chatbot.This issue affects Cliengo – Chatbot: from n/a through 3.0.1.",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/cliengo/wordpress-cliengo-chatbot-plugin-3-0-1-cross-site-request-forgery-csrf-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5881",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:10.800",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Webico Slider Flatsome Addons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's wbc_image shortcode in all versions up to, and including, 2.0.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/webico-slider-flatsome-addons/trunk/shortcodes/wbc_slider.php#L4"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/71eeddf4-5693-41bc-93ad-3c93dafdd3bc?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6123",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:10.983",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "The Bit Form plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the 'iconUpload' function in all versions up to, and including, 2.12.2. This makes it possible for authenticated attackers, with administrator-level and above permissions, to upload arbitrary files on the affected site's server which may make remote code execution possible.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/bit-form/tags/2.12.2/includes/Admin/AdminAjax.php#L1176"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/6d1b255f-d775-4bd5-892e-42bf82dd5632?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6161",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:11.160",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Default Thumbnail Plus plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the 'get_cache_image' function in all versions up to, and including, 1.0.2.3. This makes it possible for authenticated attackers, with contributor-level and above permissions, to upload arbitrary files on the affected site's server which may make remote code execution possible.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/default-thumbnail-plus/trunk/default-thumbnail-plus.php?rev=597280#L337"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/046f11b6-7d1a-4bd3-8250-4c5a50fab3ff?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6180",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:11.350",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 2.7,
        "description": "The EventON plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the 'eventon_import_settings' ajax action in all versions up to, and including, 2.2.15. This makes it possible for unauthenticated attackers to update plugin settings, including adding stored cross-site scripting to settings options displayed on event calendar pages.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/eventon-lite/trunk/assets/js/admin/wp_admin.js#L714"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/eventon-lite/trunk/includes/calendar/class-calendar-event-structure.php#L590"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/12f3dc64-322d-4015-8c57-eaa41c9a1829?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6309",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:11.550",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Attachment File Icons (AF Icons) plugin for WordPress is vulnerable to Cross-Site Request Forgery to Arbitrary File Upload in versions up to, and including, 1.3. This is due to missing nonce validation in the 'afi_overview' function and missing file type validation in the 'upload_icons' function. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/attachment-file-icons/tags/1.3/attachment-file-icons.php#L130"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/attachment-file-icons/tags/1.3/attachment-file-icons.php#L337"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/7e3fd472-c8ea-42dc-93df-872361ec97f3?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6310",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:11.733",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Advanced AJAX Page Loader plugin for WordPress is vulnerable to Cross-Site Request Forgery to Arbitrary File Upload in versions up to, and including, 2.7.7. This is due to missing nonce validation in the 'admin_init_AAPL' function and missing file type validation in the 'AAPL_options_validate' function. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/advanced-ajax-page-loader/tags/2.7.7/advanced-ajax-page-loader.php#L131"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/advanced-ajax-page-loader/tags/2.7.7/advanced-ajax-page-loader.php#L41"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ccc75dee-1cf8-4fda-b2a1-f5d68e6c7887?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6313",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:11.907",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The Gutenberg Forms plugin for WordPress is vulnerable to arbitrary file uploads due to the users can specify the allowed file types in the 'upload' function in versions up to, and including, 2.2.9. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/forms-gutenberg/tags/2.2.9/Utils/Bucket.php#L19"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/forms-gutenberg/tags/2.2.9/triggers/email.php#L268"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/b0315b53-46a1-46b4-a53e-0d914866ca50?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6314",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:12.090",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The IQ Testimonials plugin for WordPress is vulnerable to arbitrary file uploads due to insufficient file type validation in the 'process_image_upload' function in versions up to, and including, 2.2.7. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible. This can only be exploited if the 'gd' php extension is not loaded on the server.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/iq-testimonials/tags/2.2.7/lib/iq-testimonials-form.php#L296"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/bec50640-a550-49a8-baf6-2dd53995f90b?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6316",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:12.270",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Generate PDF using Contact Form 7 plugin for WordPress is vulnerable to Cross-Site Request Forgery to Arbitrary File Upload in versions up to, and including, 4.0.6. This is due to missing nonce validation and missing file type validation in the 'wp_cf7_pdf_dashboard_html_page' function. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/generate-pdf-using-contact-form-7/tags/4.0.6/inc/templates/cf7-pdf-generation.admin.html.php#L72"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/52cce49b-49b3-49b0-9f18-4829f07a420f?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6317",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:12.470",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Generate PDF using Contact Form 7 plugin for WordPress is vulnerable to Cross-Site Request Forgery to Arbitrary File Upload in versions up to, and including, 4.0.6. This is due to missing nonce validation and the plugin not properly validating a file or its path prior to deleting it in the 'wp_cf7_pdf_dashboard_html_page' function. This makes it possible for unauthenticated attackers to delete arbitrary files, including the wp-config.php file, which can make site takeover and remote code execution possible via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/generate-pdf-using-contact-form-7/tags/4.0.6/inc/templates/cf7-pdf-generation.admin.html.php#L74"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/455b9695-e140-4bdb-b626-5c1695518563?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6320",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:12.643",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The ScrollTo Top plugin for WordPress is vulnerable to Cross-Site Request Forgery to Arbitrary File Upload in versions up to, and including, 1.2.2. This is due to missing nonce validation and missing file type validation in the 'options_page' function. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/scrollto-top/trunk/scrollto-top.php?rev=662578#L238"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/e11f1a56-d5a2-47a4-a5cc-34345966495a?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6321",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T08:15:12.843",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The ScrollTo Bottom plugin for WordPress is vulnerable to Cross-Site Request Forgery to Arbitrary File Upload in versions up to, and including, 1.1.1. This is due to missing nonce validation and missing file type validation in the 'options_page' function. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/scrollto-bottom/trunk/scrollto-bottom.php?rev=516875#L256"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d560f28f-899c-44cf-8640-55647c1de7dc?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37112",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-07-09T09:15:02.530",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 10.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 6.0,
        "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Membership Software WishList Member X.This issue affects WishList Member X: from n/a before 3.26.7.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/wishlist-member-x/wordpress-wishlist-member-x-plugin-3-25-1-unauthenticated-arbitrary-sql-query-execution-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37225",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-07-09T09:15:02.890",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.1,
        "impactScore": 4.7,
        "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Zoho Marketing Automation.This issue affects Zoho Marketing Automation: from n/a through 1.2.7.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/zoho-marketinghub/wordpress-zoho-marketing-automation-plugin-1-2-7-sql-injection-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37256",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-07-09T09:15:03.157",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 7.6,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.3,
        "impactScore": 4.7,
        "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Themeum Tutor LMS.This issue affects Tutor LMS: from n/a through 2.7.1.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/tutor/wordpress-tutor-lms-plugin-2-7-1-sql-injection-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37486",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-07-09T09:15:03.523",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 7.6,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.3,
        "impactScore": 4.7,
        "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Paid Memberships Pro.This issue affects Paid Memberships Pro: from n/a through 3.0.5.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/paid-memberships-pro/wordpress-paid-memberships-pro-plugin-3-0-5-authenticated-sql-injection-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37494",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-07-09T09:15:03.903",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.1,
        "impactScore": 4.7,
        "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in KaineLabs Youzify.This issue affects Youzify: from n/a through 1.2.5.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/youzify/wordpress-youzify-plugin-1-2-5-sql-injection-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37502",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-07-09T09:15:04.133",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.2,
        "impactScore": 2.7,
        "description": "Deserialization of Untrusted Data vulnerability in wpweb WooCommerce Social Login.This issue affects WooCommerce Social Login: from n/a through 2.6.3.",
        "cweIds": [
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/woo-social-login/wordpress-social-login-wordpress-woocommerce-plugin-plugin-2-6-3-php-object-injection-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3228",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:04.430",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Social Sharing Plugin – Kiwi plugin for WordPress is vulnerable to Information Exposure in all versions up to, and including, 2.1.7 via the 'kiwi-nw-pinterest' class. This makes it possible for unauthenticated attackers to view limited content from password protected posts.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3109786%40kiwi-social-share&new=3109786%40kiwi-social-share&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/896a038f-fe54-4120-842e-093ef236a898?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3563",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:04.670",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Genesis Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Sharing block in all versions up to, and including, 3.1.3 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/genesis-blocks/trunk/src/blocks/block-sharing/index.php#L268"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ef21fae3-65ef-43e8-9792-619dfc4dfda8?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3603",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:04.893",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The OSM – OpenStreetMap plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'osm_map' shortcode in all versions up to, and including, 6.0.2 due to insufficient input sanitization and output escaping on user supplied attributes such as 'theme'. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wordpress.org/plugins/osm/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/845cea77-ea74-4459-817b-cfbdb877b75a?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3604",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:05.147",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 9.9,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.1,
        "impactScore": 6.0,
        "description": "The OSM – OpenStreetMap plugin for WordPress is vulnerable to SQL Injection via the 'tagged_filter' attribute of the 'osm_map_v3' shortcode in all versions up to, and including, 6.0.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wordpress.org/plugins/osm/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/c8eebc67-e590-4d7f-8925-e5e5090cedf0?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3608",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:05.393",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Product Designer plugin for WordPress is vulnerable to unauthorized loss of data due to a missing capability check on the product_designer_ajax_delete_attach_id() function in all versions up to, and including, 1.0.33. This makes it possible for unauthenticated attackers to delete arbitrary attachments.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/product-designer/trunk/includes/designer-function.php#L412"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2f127fe5-67b8-40e1-a916-c607410b08b3?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4100",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:05.610",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Pricing Table plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 2.0.1. This is due to missing or incorrect nonce validation on the ajax() function. This makes it possible for unauthenticated attackers to perform a variety of actions related to managing pricing tables via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/elfsight-pricing-table/trunk/core/includes/widgets-api.php#L71"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/4cb3d2d4-256c-4128-9397-8b9c7be1b9c8?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4102",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:05.820",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "The Pricing Table plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the ajax() function in all versions up to, and including, 2.0.1. This makes it possible for authenticated attackers, with subscriber-level access and above, to perform unauthorized actions like editing pricing tables.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/elfsight-pricing-table/trunk/core/includes/widgets-api.php#L71"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/aa769d51-8718-42e9-9070-0b878442dbc7?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4868",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:06.083",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Extensions for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's EE Events and EE Flipbox widgets in all versions up to, and including, 2.0.31 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/extensions-for-elementor/trunk/modules/events/widgets/ee-events.php#L2632"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/extensions-for-elementor/trunk/modules/flipbox/widgets/ee-flipbox.php#L1515"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/4322d9d6-13b6-4476-9eb5-fea4aff2e5ce?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5456",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:06.310",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Panda Video plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.4.0 via the 'selected_button' parameter. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/pandavideo/trunk/includes/widgets/PandaButton.php#L237"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/94ab250a-387c-431e-9b75-16ede94bf0ef?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5457",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:06.537",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Panda Video plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘id’ parameter in all versions up to, and including, 1.4.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/pandavideo/trunk/includes/assets/buttons/button-1.php#L6"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/pandavideo/trunk/includes/assets/buttons/button-2.php#L7"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/pandavideo/trunk/includes/assets/buttons/button-3.php#L8"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/91a9dcf2-ba6b-4d03-9cdf-f50ea0d259d8?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5479",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:06.743",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 2.7,
        "description": "The Easy Pixels plugin for WordPress is vulnerable to Stored Cross-Site Scripting via plugin settings in all versions up to, and including, 2.13 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/easy-pixels-by-jevnet/trunk/admin/easyPixelsAdmin.php#L48"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/easy-pixels-by-jevnet/trunk/classes/easy-pixels.php#L87"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/easy-pixels-by-jevnet/trunk/easyPixels.php#L66"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0a397025-ada7-4a59-80b9-5a778ea27776?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5600",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:06.960",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "The SCSS Happy Compiler – Compile SCSS to CSS & Automatic Enqueue plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to a missing capability check and insufficient sanitization on the import_settings() function in all versions up to, and including, 1.3.10. This makes it possible for authenticated attackers, with Subscriber-level access and above, to inject malicious web scripts.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/happy-scss-compiler/trunk/admin/class-hm-wp-scss-admin.php#L384"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/3d0ecffe-8543-4d82-a1cc-f2474499f373?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5648",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:07.180",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "The LearnDash LMS – Reports plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on several functions in all versions up to, and including, 1.8.2. This makes it possible for authenticated attackers, with Subscriber-level access and above, to update various plugin settings.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wisdm-reports-for-learndash/trunk/includes/admin/class-admin-functions.php#L261"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wisdm-reports-for-learndash/trunk/includes/admin/class-admin-functions.php#L284"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wisdm-reports-for-learndash/trunk/includes/admin/class-admin-functions.php#L423"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wisdm-reports-for-learndash/trunk/includes/admin/class-admin-functions.php#L455"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wisdm-reports-for-learndash/trunk/includes/admin/class-admin-functions.php#L52"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/7fbbd0d7-882f-4bc8-a67a-4d6dc05cb796?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5669",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:07.430",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The XPlainer – WooCommerce Product FAQ [WooCommerce Accordion FAQ Plugin] plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the 'ffw_activate_template' function in all versions up to, and including, 1.6.4. This makes it possible for authenticated attackers, with Subscriber-level access and above, to store cross-site scripting that will trigger when viewing the dashboard templates or accessing FAQs.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/faq-for-woocommerce/trunk/includes/admin/faq-woocommerce-admin-functions.php#L471"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/c5a404de-ee26-44af-9e4f-f93694da7a77?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5704",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:07.640",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The XPlainer – WooCommerce Product FAQ [WooCommerce Accordion FAQ Plugin plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on several functions in all versions up to, and including, 1.6.4. This makes it possible for authenticated attackers, with Subscriber-level access and above, to add new and update existing FAQs, FAQ lists, and modify FAQ associations with products.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/faq-for-woocommerce/trunk/includes/admin/faq-woocommerce-admin-functions.php#L100"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/faq-for-woocommerce/trunk/includes/admin/faq-woocommerce-admin-functions.php#L216"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/faq-for-woocommerce/trunk/includes/admin/faq-woocommerce-admin-functions.php#L269"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/faq-for-woocommerce/trunk/includes/admin/faq-woocommerce-admin-functions.php#L326"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/faq-for-woocommerce/trunk/includes/admin/faq-woocommerce-admin-functions.php#L385"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1d3e476d-0885-4e8c-a682-bd64d9f13b53?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5810",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:07.883",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The WP2Speed Faster – Optimize PageSpeed Insights Score 90-100 plugin for WordPress is vulnerable to unauthorized access in all versions up to, and including, 1.0.1. This is due to the use of hardcoded credentials to authenticate all the incoming API requests. This makes it possible for unauthenticated attackers to overwrite CSS, update the trial settings, purge the cache, and find attachments.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp2speed/trunk/lib/includes/optimize.php#L152"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp2speed/trunk/lib/includes/optimize.php#L165"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp2speed/trunk/lib/includes/optimize.php#L263"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp2speed/trunk/lib/includes/optimize.php#L372"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp2speed/trunk/lib/includes/optimize.php#L71"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1fe97ac1-cab9-4b6f-bddd-bdcdc9faee40?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5856",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:08.103",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Comment Images Reloaded plugin for WordPress is vulnerable to unauthorized loss of data due to a missing capability check on the cir_delete_image AJAX action in all versions up to, and including, 2.2.1. This makes it possible for authenticated attackers, with Subscriber-level access and above, to delete arbitrary media attachments.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/comment-images-reloaded/trunk/functions/delete-comment.php#L7"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/4f2dc3e7-1e10-4547-8469-726c6747465d?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5937",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:08.490",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Simple Alert Boxes plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Alert shortcode in all versions up to, and including, 1.4.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/simple-alert-boxes/trunk/plugin.php#L71"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/a25ad405-a97e-4821-b57a-0f39d5ce5e70?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5992",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:08.727",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 2.5,
        "description": "The Cliengo – Chatbot plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the 'update_chatbot_token' and 'update_chatbot_position' functions in all versions up to, and including, 3.0.1. This makes it possible for unauthenticated attackers to change chatbot settings, which can lead to unavailability or other changes to the chatbot.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/cliengo/trunk/admin/class-cliengo-form.php#L80"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/cliengo/trunk/admin/class-cliengo-form.php#L99"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/a7f0afe8-234a-4c3f-87c8-f3f23ac94fe3?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5993",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:08.933",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "The Cliengo – Chatbot plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the 'update_session' function in all versions up to, and including, 3.0.1. This makes it possible for authenticated attackers, with Subscriber-level access and above, to update the session token of the chatbot.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/cliengo/trunk/admin/class-cliengo-form.php#L109"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0a13e87d-51cd-43b0-a658-900a174738fc?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6069",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:09.130",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Registration Forms – User Registration Forms, Invitation-Based Registrations, Front-end User Profile, Login Form & Content Restriction plugin for WordPress is vulnerable to unauthorized arbitrary plugin installation and activation/deactivation due to missing capability checks on the pieregister_install_addon, pieregister_activate_addon and pieregister_deactivate_addon functions in all versions up to, and including, 3.8.3.4. This makes it possible for authenticated attackers, with Subscriber-level access and above, to install, activate and deactivate arbitrary plugins. As a result attackers might achieve code execution on the targeted server",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/pie-register/tags/3.8.3.4/pie-register.php#L727"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/pie-register/tags/3.8.3.4/pie-register.php#L761"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/pie-register/tags/3.8.3.4/pie-register.php#L794"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/b946ee73-4cf9-48c8-b456-285b118c6b05?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6167",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:09.373",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Just Custom Fields plugin for WordPress is vulnerable to unauthorized access of functionality due to a missing capability check on several AJAX functions in all versions up to, and including, 3.3.2. This makes it possible for authenticated attackers, with Subscriber-level access and above, to invoke this functionality intended for admin users. This enables subscribers to manage field groups, change visibility of items among other things.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wordpress.org/plugins/just-custom-fields"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/14d71220-be60-498d-92ca-055f1c237060?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6168",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-09T09:15:09.597",
        "lastModified": "2024-07-09T18:19:14.047",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Just Custom Fields plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 3.3.2. This is due to missing or incorrect nonce validation on several AJAX function. This makes it possible for unauthenticated attackers to invoke this functionality intended for admin users via a forged request granted they can trick a site administrator into performing an action such as clicking on a link. This enables subscribers to manage field groups, change visibility of items among other things.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wordpress.org/plugins/just-custom-fields"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/9d98946e-864f-434e-8f45-85d663bbefee?source=cve"
          }
        ]
      }
    }
  ]
}