{
  "totalResults": 18,
  "datePublished": "2024-07-30T05:00:12.630359Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-42091",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-29T18:15:11.657",
        "lastModified": "2024-07-29T18:15:11.657",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/xe: Check pat.ops before dumping PAT settings\nWe may leave pat.ops unset when running on brand new platform or\nwhen running as a VF.  While the former is unlikely, the latter\nis valid (future) use case and will cause NPD when someone will\ntry to dump PAT settings by debugfs.\nIt's better to check pointer to pat.ops instead of specific .dump\nhook, as we have this hook always defined for every .ops variant.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/583ce246c7ff9edeb0de49130cdc3d45db8545cb"
          },
          {
            "url": "https://git.kernel.org/stable/c/a918e771e6fbe1fa68932af5b0cdf473e23090cc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42092",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-29T18:15:11.740",
        "lastModified": "2024-07-29T18:15:11.740",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ngpio: davinci: Validate the obtained number of IRQs\nValue of pdata->gpio_unbanked is taken from Device Tree. In case of broken\nDT due to any error this value can be any. Without this value validation\nthere can be out of chips->irqs array boundaries access in\ndavinci_gpio_probe().\nValidate the obtained nirq value so that it won't exceed the maximum\nnumber of IRQs per bank.\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/2d83492259ad746b655f196cd5d1be4b3d0a3782"
          },
          {
            "url": "https://git.kernel.org/stable/c/70b48899f3f23f98a52c5b1060aefbdc7ba7957b"
          },
          {
            "url": "https://git.kernel.org/stable/c/7aa9b96e9a73e4ec1771492d0527bd5fc5ef9164"
          },
          {
            "url": "https://git.kernel.org/stable/c/89d7008af4945808677662a630643b5ea89c6e8d"
          },
          {
            "url": "https://git.kernel.org/stable/c/a8d78984fdc105bc1a38b73e98d32b1bc4222684"
          },
          {
            "url": "https://git.kernel.org/stable/c/c542e51306d5f1eba3af84daa005826223382470"
          },
          {
            "url": "https://git.kernel.org/stable/c/cd75721984337c38a12aeca33ba301d31ca4b3fd"
          },
          {
            "url": "https://git.kernel.org/stable/c/e44a83bf15c4db053ac6dfe96a23af184c9136d9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42093",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-29T18:15:11.833",
        "lastModified": "2024-07-29T18:15:11.833",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet/dpaa2: Avoid explicit cpumask var allocation on stack\nFor CONFIG_CPUMASK_OFFSTACK=y kernel, explicit allocation of cpumask\nvariable on stack is not recommended since it can cause potential stack\noverflow.\nInstead, kernel code should always use *cpumask_var API(s) to allocate\ncpumask var in config-neutral way, leaving allocation strategy to\nCONFIG_CPUMASK_OFFSTACK.\nUse *cpumask_var API(s) to address it.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/48147337d7efdea6ad6e49f5b8eb894b95868ef0"
          },
          {
            "url": "https://git.kernel.org/stable/c/5e4f25091e6d06e99a23f724c839a58a8776a527"
          },
          {
            "url": "https://git.kernel.org/stable/c/69f49527aea12c23b78fb3d0a421950bf44fb4e2"
          },
          {
            "url": "https://git.kernel.org/stable/c/763896ab62a672d728f5eb10ac90d98c607a8509"
          },
          {
            "url": "https://git.kernel.org/stable/c/a55afc0f5f20ba30970aaf7271929dc00eee5e7d"
          },
          {
            "url": "https://git.kernel.org/stable/c/b2262b3be27cee334a2fa175ae3afb53f38fb0b1"
          },
          {
            "url": "https://git.kernel.org/stable/c/d33fe1714a44ff540629b149d8fab4ac6967585c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42094",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-29T18:15:11.917",
        "lastModified": "2024-07-29T18:15:11.917",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet/iucv: Avoid explicit cpumask var allocation on stack\nFor CONFIG_CPUMASK_OFFSTACK=y kernel, explicit allocation of cpumask\nvariable on stack is not recommended since it can cause potential stack\noverflow.\nInstead, kernel code should always use *cpumask_var API(s) to allocate\ncpumask var in config-neutral way, leaving allocation strategy to\nCONFIG_CPUMASK_OFFSTACK.\nUse *cpumask_var API(s) to address it.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0af718a690acc089aa1bbb95a93df833d864ef53"
          },
          {
            "url": "https://git.kernel.org/stable/c/2b085521be5292016097b5e7ca81b26be3f7098d"
          },
          {
            "url": "https://git.kernel.org/stable/c/2d090c7f7be3b26fcb80ac04d08a4a8062b1d959"
          },
          {
            "url": "https://git.kernel.org/stable/c/724e7965af054079242b8d6f7e50ee226730a756"
          },
          {
            "url": "https://git.kernel.org/stable/c/842afb47d84536fc976fece8fb6c54bea711ad1a"
          },
          {
            "url": "https://git.kernel.org/stable/c/9dadab0db7d904413ea1cdaa13f127da05c31e71"
          },
          {
            "url": "https://git.kernel.org/stable/c/be4e1304419c99a164b4c0e101c7c2a756b635b9"
          },
          {
            "url": "https://git.kernel.org/stable/c/d85ca8179a54ff8cf1e1f8c3c9e3799831319bae"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42095",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-29T18:15:12.007",
        "lastModified": "2024-07-29T18:15:12.007",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nserial: 8250_omap: Implementation of Errata i2310\nAs per Errata i2310[0], Erroneous timeout can be triggered,\nif this Erroneous interrupt is not cleared then it may leads\nto storm of interrupts, therefore apply Errata i2310 solution.\n[0] https://www.ti.com/lit/pdf/sprz536 page 23",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/6270051f656004ca5cde644c73cb1fa4d718792e"
          },
          {
            "url": "https://git.kernel.org/stable/c/87257a28271c828a98f762bf2dd803c1793d2b5b"
          },
          {
            "url": "https://git.kernel.org/stable/c/98840e410d53329f5331ecdce095e740791963d0"
          },
          {
            "url": "https://git.kernel.org/stable/c/9d141c1e615795eeb93cd35501ad144ee997a826"
          },
          {
            "url": "https://git.kernel.org/stable/c/cb879300669881970eabebe64bd509dbbe42b9de"
          },
          {
            "url": "https://git.kernel.org/stable/c/e67d7f38008e56fb691b6a72cadf16c107c2f48b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42096",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-29T18:15:12.087",
        "lastModified": "2024-07-29T18:15:12.087",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nx86: stop playing stack games in profile_pc()\nThe 'profile_pc()' function is used for timer-based profiling, which\nisn't really all that relevant any more to begin with, but it also ends\nup making assumptions based on the stack layout that aren't necessarily\nvalid.\nBasically, the code tries to account the time spent in spinlocks to the\ncaller rather than the spinlock, and while I support that as a concept,\nit's not worth the code complexity or the KASAN warnings when no serious\nprofiling is done using timers anyway these days.\nAnd the code really does depend on stack layout that is only true in the\nsimplest of cases.  We've lost the comment at some point (I think when\nthe 32-bit and 64-bit code was unified), but it used to say:\n\tAssume the lock function has either no stack frame or a copy\n\tof eflags from PUSHF.\nwhich explains why it just blindly loads a word or two straight off the\nstack pointer and then takes a minimal look at the values to just check\nif they might be eflags or the return pc:\n\tEflags always has bits 22 and up cleared unlike kernel addresses\nbut that basic stack layout assumption assumes that there isn't any lock\ndebugging etc going on that would complicate the code and cause a stack\nframe.\nIt causes KASAN unhappiness reported for years by syzkaller [1] and\nothers [2].\nWith no real practical reason for this any more, just remove the code.\nJust for historical interest, here's some background commits relating to\nthis code from 2006:\n  0cb91a229364 (\"i386: Account spinlocks to the caller during profiling for !FP kernels\")\n  31679f38d886 (\"Simplify profile_pc on x86-64\")\nand a code unification from 2009:\n  ef4512882dbe (\"x86: time_32/64.c unify profile_pc\")\nbut the basics of this thing actually goes back to before the git tree.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/093d9603b60093a9aaae942db56107f6432a5dca"
          },
          {
            "url": "https://git.kernel.org/stable/c/161cef818545ecf980f0e2ebaf8ba7326ce53c2b"
          },
          {
            "url": "https://git.kernel.org/stable/c/16222beb9f8e5ceb0beeb5cbe54bef16df501a92"
          },
          {
            "url": "https://git.kernel.org/stable/c/27c3be840911b15a3f24ed623f86153c825b6b29"
          },
          {
            "url": "https://git.kernel.org/stable/c/2d07fea561d64357fb7b3f3751e653bf20306d77"
          },
          {
            "url": "https://git.kernel.org/stable/c/49c09ca35a5f521d7fa18caf62fdf378f15e8aa4"
          },
          {
            "url": "https://git.kernel.org/stable/c/65ebdde16e7f5da99dbf8a548fb635837d78384e"
          },
          {
            "url": "https://git.kernel.org/stable/c/a3b65c8cbc139bfce9541bc81c1bb766e5ba3f68"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42097",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-29T18:15:12.167",
        "lastModified": "2024-07-29T18:15:12.167",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nALSA: emux: improve patch ioctl data validation\nIn load_data(), make the validation of and skipping over the main info\nblock match that in load_guspatch().\nIn load_guspatch(), add checking that the specified patch length matches\nthe actually supplied data, like load_data() already did.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/40d7def67841343c10f8642a41031fecbb248bab"
          },
          {
            "url": "https://git.kernel.org/stable/c/79d9a000f0220cdaba1682d2a23c0d0c61d620a3"
          },
          {
            "url": "https://git.kernel.org/stable/c/7a18293fd8d8519c2f7a03753bc1583b18e3db69"
          },
          {
            "url": "https://git.kernel.org/stable/c/87039b83fb7bfd7d0e0499aaa8e6c049906b4d14"
          },
          {
            "url": "https://git.kernel.org/stable/c/89b32ccb12ae67e630c6453d778ec30a592a212f"
          },
          {
            "url": "https://git.kernel.org/stable/c/d0ff2443fcbb472206d45a5d2a90cc694065804e"
          },
          {
            "url": "https://git.kernel.org/stable/c/d23982ea9aa438f35a8c8a6305943e98a8db90f6"
          },
          {
            "url": "https://git.kernel.org/stable/c/d8f5ce3cb9adf0c72e2ad6089aba02d7a32469c2"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42098",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-29T18:15:12.247",
        "lastModified": "2024-07-29T18:15:12.247",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ncrypto: ecdh - explicitly zeroize private_key\nprivate_key is overwritten with the key parameter passed in by the\ncaller (if present), or alternatively a newly generated private key.\nHowever, it is possible that the caller provides a key (or the newly\ngenerated key) which is shorter than the previous key. In that\nscenario, some key material from the previous key would not be\noverwritten. The easiest solution is to explicitly zeroize the entire\nprivate_key array first.\nNote that this patch slightly changes the behavior of this function:\npreviously, if the ecc_gen_privkey failed, the old private_key would\nremain. Now, the private_key is always zeroized. This behavior is\nconsistent with the case where params.key is set and ecc_is_key_valid\nfails.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/39173b04abda87872b43c331468a4a14f8f05ce8"
          },
          {
            "url": "https://git.kernel.org/stable/c/73e5984e540a76a2ee1868b91590c922da8c24c9"
          },
          {
            "url": "https://git.kernel.org/stable/c/80575b252ab0358b7e93895b2a510beb3cb3f975"
          },
          {
            "url": "https://git.kernel.org/stable/c/d96187eb8e59b572a8e6a68b6a9837a867ea29df"
          },
          {
            "url": "https://git.kernel.org/stable/c/fd7ef325911eba1b7191b83cb580463242f2090d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6726",
        "sourceIdentifier": "security@puppet.com",
        "published": "2024-07-29T18:15:12.433",
        "lastModified": "2024-07-29T18:15:12.433",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "Versions of Delphix Engine prior to Release 25.0.0.0 contain a flaw which results in Remote Code Execution (RCE).",
        "cweIds": [
          {
            "id": "CWE-94",
            "description": "Improper Control of Generation of Code ('Code Injection')"
          }
        ],
        "references": [
          {
            "url": "https://portal.perforce.com/s/detail/a91PA000001SUDtYAO"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6727",
        "sourceIdentifier": "security@puppet.com",
        "published": "2024-07-29T18:15:12.697",
        "lastModified": "2024-07-29T18:15:12.697",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "A flaw in versions of Delphix Data Control Tower (DCT) prior to 19.0.0 results in broken authentication through the enable-scale-testing functionality of the application.",
        "cweIds": [
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://portal.perforce.com/s/detail/a91PA000001SUFVYA4"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-28804",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-07-29T19:15:11.917",
        "lastModified": "2024-07-29T19:15:11.917",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue was discovered in Italtel i-MCS NFV 12.1.0-20211215. Stored Cross-site scripting (XSS) can occur via POST.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.gruppotim.it/it/footer/red-team.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-28805",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-07-29T19:15:11.990",
        "lastModified": "2024-07-29T19:15:11.990",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue was discovered in Italtel i-MCS NFV 12.1.0-20211215. There is Incorrect Access Control.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.gruppotim.it/it/footer/red-team.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-28806",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-07-29T19:15:12.050",
        "lastModified": "2024-07-29T19:15:12.050",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue was discovered in Italtel i-MCS NFV 12.1.0-20211215. Remote unauthenticated attackers can upload files at an arbitrary path.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.gruppotim.it/it/footer/red-team.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37856",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-07-29T19:15:12.177",
        "lastModified": "2024-07-29T19:15:12.177",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Cross Site Scripting vulnerability in Lost and Found Information System 1.0 allows a remote attacker to escalate privileges via the first, last, middle name fields in the User Profile page.",
        "cweIds": null,
        "references": [
          {
            "url": "http://lost.com"
          },
          {
            "url": "https://packetstormsecurity.com/files/179078/Lost-And-Found-Information-System-1.0-Cross-Site-Scripting.html"
          },
          {
            "url": "https://www.sourcecodester.com/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37857",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-07-29T19:15:12.257",
        "lastModified": "2024-07-29T19:15:12.257",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "SQL Injection vulnerability in Lost and Found Information System 1.0 allows a remote attacker to escalate privileges via id parameter to php-lfis/admin/categories/view_category.php.",
        "cweIds": null,
        "references": [
          {
            "url": "http://lost.com"
          },
          {
            "url": "https://packetstormsecurity.com/files/179080/Lost-And-Found-Information-System-1.0-SQL-Injection.html"
          },
          {
            "url": "https://www.sourcecodester.com/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37858",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-07-29T19:15:12.323",
        "lastModified": "2024-07-29T19:15:12.323",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "SQL Injection vulnerability in Lost and Found Information System 1.0 allows a remote attacker to escalate privileges via the id parameter to php-lfis/admin/categories/manage_category.php.",
        "cweIds": null,
        "references": [
          {
            "url": "http://lost.com"
          },
          {
            "url": "https://packetstormsecurity.com/files/179079/Lost-And-Found-Information-System-1.0-SQL-Injection.html"
          },
          {
            "url": "https://www.sourcecodester.com/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-37859",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-07-29T19:15:12.390",
        "lastModified": "2024-07-29T19:15:12.390",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Cross Site Scripting vulnerability in Lost and Found Information System 1.0 allows a remote attacker to escalate privileges via the page parameter to php-lfis/admin/index.php.",
        "cweIds": null,
        "references": [
          {
            "url": "http://lost.com"
          },
          {
            "url": "https://packetstormsecurity.com/files/179081/Lost-And-Found-Information-System-1.0-Cross-Site-Scripting.html"
          },
          {
            "url": "https://www.sourcecodester.com/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6578",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-07-29T19:15:13.170",
        "lastModified": "2024-07-29T19:15:13.170",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 2.7,
        "description": "A stored cross-site scripting (XSS) vulnerability exists in aimhubio/aim version 3.19.3. The vulnerability arises from the improper neutralization of input during web page generation, specifically in the logs-tab for runs. The terminal output logs are displayed using the `dangerouslySetInnerHTML` function in React, which is susceptible to XSS attacks. An attacker can exploit this vulnerability by injecting malicious scripts into the logs, which will be executed when a user views the logs-tab.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/5b1ebc67-5346-44aa-b8b8-3c1c09d79680"
          }
        ]
      }
    }
  ]
}