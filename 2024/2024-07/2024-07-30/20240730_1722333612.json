{
  "totalResults": 90,
  "datePublished": "2024-07-30T19:00:12.982919Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2023-52888",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:02.293",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: mediatek: vcodec: Only free buffer VA that is not NULL\nIn the MediaTek vcodec driver, while mtk_vcodec_mem_free() is mostly\ncalled only when the buffer to free exists, there are some instances\nthat didn't do the check and triggered warnings in practice.\nWe believe those checks were forgotten unintentionally. Add the checks\nback to fix the warnings.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/303d01082edaf817ee2df53a40dca9da637a2c04"
          },
          {
            "url": "https://git.kernel.org/stable/c/5c217253c76c94f76d1df31d0bbdcb88dc07be91"
          },
          {
            "url": "https://git.kernel.org/stable/c/eb005c801ec70ff4307727bd3bd6e8280169ef32"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42099",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:02.503",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ns390/dasd: Fix invalid dereferencing of indirect CCW data pointer\nFix invalid dereferencing of indirect CCW data pointer in\ndasd_eckd_dump_sense() that leads to a kernel panic in error cases.\nWhen using indirect addressing for DASD CCWs (IDAW) the CCW CDA pointer\ndoes not contain the data address itself but a pointer to the IDAL.\nThis needs to be translated from physical to virtual as well before\nusing it.\nThis dereferencing is also used for dasd_page_cache and also fixed\nalthough it is very unlikely that this code path ever gets used.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/b3a58f3b90f564f42a5c35778d8c5107b2c2150b"
          },
          {
            "url": "https://git.kernel.org/stable/c/c116475f7d6410b1e6d399207ac75de6cf9c3652"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42100",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:02.577",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nclk: sunxi-ng: common: Don't call hw_to_ccu_common on hw without common\nIn order to set the rate range of a hw sunxi_ccu_probe calls\nhw_to_ccu_common() assuming all entries in desc->ccu_clks are contained\nin a ccu_common struct. This assumption is incorrect and, in\nconsequence, causes invalid pointer de-references.\nRemove the faulty call. Instead, add one more loop that iterates over\nthe ccu_clks and sets the rate range, if required.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/14c78d69dbca6a28af14095f639ec4318ec07fdc"
          },
          {
            "url": "https://git.kernel.org/stable/c/7a0e2738cb6da5a55c9908dff333600aeb263e07"
          },
          {
            "url": "https://git.kernel.org/stable/c/ea977d742507e534d9fe4f4d74256f6b7f589338"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42101",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:02.647",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/nouveau: fix null pointer dereference in nouveau_connector_get_modes\nIn nouveau_connector_get_modes(), the return value of drm_mode_duplicate()\nis assigned to mode, which will lead to a possible NULL pointer\ndereference on failure of drm_mode_duplicate(). Add a check to avoid npd.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1f32535238493008587a8c5cb17eb2ca097592ef"
          },
          {
            "url": "https://git.kernel.org/stable/c/274cba8d2d1b48c72d8bd90e76c9e2dc1aa0a81d"
          },
          {
            "url": "https://git.kernel.org/stable/c/744b229f09134ccd091427a6f9ea6d97302cfdd9"
          },
          {
            "url": "https://git.kernel.org/stable/c/7db5411c5d0bd9c29b8c2ad93c36b5c16ea46c9e"
          },
          {
            "url": "https://git.kernel.org/stable/c/80bec6825b19d95ccdfd3393cf8ec15ff2a749b4"
          },
          {
            "url": "https://git.kernel.org/stable/c/9baf60323efa992b7c915094529f0a1882c34e7e"
          },
          {
            "url": "https://git.kernel.org/stable/c/e36364f5f3785d054a94e57e971385284886d41a"
          },
          {
            "url": "https://git.kernel.org/stable/c/f48dd3f19614022f2e1b794fbd169d2b4c398c07"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42102",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:02.733",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nRevert \"mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again\"\nPatch series \"mm: Avoid possible overflows in dirty throttling\".\nDirty throttling logic assumes dirty limits in page units fit into\n32-bits.  This patch series makes sure this is true (see patch 2/2 for\nmore details).\nThis patch (of 2):\nThis reverts commit 9319b647902cbd5cc884ac08a8a6d54ce111fc78.\nThe commit is broken in several ways.  Firstly, the removed (u64) cast\nfrom the multiplication will introduce a multiplication overflow on 32-bit\narchs if wb_thresh * bg_thresh >= 1<<32 (which is actually common - the\ndefault settings with 4GB of RAM will trigger this).  Secondly, the\ndiv64_u64() is unnecessarily expensive on 32-bit archs.  We have\ndiv64_ul() in case we want to be safe & cheap.  Thirdly, if dirty\nthresholds are larger than 1<<32 pages, then dirty balancing is going to\nblow up in many other spectacular ways anyway so trying to fix one\npossible overflow is just moot.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/000099d71648504fb9c7a4616f92c2b70c3e44ec"
          },
          {
            "url": "https://git.kernel.org/stable/c/145faa3d03688cbb7bbaaecbd84c01539852942c"
          },
          {
            "url": "https://git.kernel.org/stable/c/23a28f5f3f6ca1e4184bd0e9631cd0944cf1c807"
          },
          {
            "url": "https://git.kernel.org/stable/c/253f9ea7e8e53a5176bd80ceb174907b10724c1a"
          },
          {
            "url": "https://git.kernel.org/stable/c/2820005edae13b140f2d54267d1bd6bb23915f59"
          },
          {
            "url": "https://git.kernel.org/stable/c/30139c702048f1097342a31302cbd3d478f50c63"
          },
          {
            "url": "https://git.kernel.org/stable/c/cbbe17a324437c0ff99881a3ee453da45b228a00"
          },
          {
            "url": "https://git.kernel.org/stable/c/f6620df12cb6bdcad671d269debbb23573502f9d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42103",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:02.817",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: fix adding block group to a reclaim list and the unused list during reclaim\nThere is a potential parallel list adding for retrying in\nbtrfs_reclaim_bgs_work and adding to the unused list. Since the block\ngroup is removed from the reclaim list and it is on a relocation work,\nit can be added into the unused list in parallel. When that happens,\nadding it to the reclaim list will corrupt the list head and trigger\nlist corruption like below.\nFix it by taking fs_info->unused_bgs_lock.\n  [177.504][T2585409] BTRFS error (device nullb1): error relocating ch= unk 2415919104\n  [177.514][T2585409] list_del corruption. next->prev should be ff1100= 0344b119c0, but was ff11000377e87c70. (next=3Dff110002390cd9c0)\n  [177.529][T2585409] ------------[ cut here ]------------\n  [177.537][T2585409] kernel BUG at lib/list_debug.c:65!\n  [177.545][T2585409] Oops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN NOPTI\n  [177.555][T2585409] CPU: 9 PID: 2585409 Comm: kworker/u128:2 Tainted: G        W          6.10.0-rc5-kts #1\n  [177.568][T2585409] Hardware name: Supermicro SYS-520P-WTR/X12SPW-TF, BIOS 1.2 02/14/2022\n  [177.579][T2585409] Workqueue: events_unbound btrfs_reclaim_bgs_work[btrfs]\n  [177.589][T2585409] RIP: 0010:__list_del_entry_valid_or_report.cold+0x70/0x72\n  [177.624][T2585409] RSP: 0018:ff11000377e87a70 EFLAGS: 00010286\n  [177.633][T2585409] RAX: 000000000000006d RBX: ff11000344b119c0 RCX:0000000000000000\n  [177.644][T2585409] RDX: 000000000000006d RSI: 0000000000000008 RDI:ffe21c006efd0f40\n  [177.655][T2585409] RBP: ff110002e0509f78 R08: 0000000000000001 R09:ffe21c006efd0f08\n  [177.665][T2585409] R10: ff11000377e87847 R11: 0000000000000000 R12:ff110002390cd9c0\n  [177.676][T2585409] R13: ff11000344b119c0 R14: ff110002e0508000 R15:dffffc0000000000\n  [177.687][T2585409] FS:  0000000000000000(0000) GS:ff11000fec880000(0000) knlGS:0000000000000000\n  [177.700][T2585409] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [177.709][T2585409] CR2: 00007f06bc7b1978 CR3: 0000001021e86005 CR4:0000000000771ef0\n  [177.720][T2585409] DR0: 0000000000000000 DR1: 0000000000000000 DR2:0000000000000000\n  [177.731][T2585409] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:0000000000000400\n  [177.742][T2585409] PKRU: 55555554\n  [177.748][T2585409] Call Trace:\n  [177.753][T2585409]  <TASK>\n  [177.759][T2585409]  ? __die_body.cold+0x19/0x27\n  [177.766][T2585409]  ? die+0x2e/0x50\n  [177.772][T2585409]  ? do_trap+0x1ea/0x2d0\n  [177.779][T2585409]  ? __list_del_entry_valid_or_report.cold+0x70/0x72\n  [177.788][T2585409]  ? do_error_trap+0xa3/0x160\n  [177.795][T2585409]  ? __list_del_entry_valid_or_report.cold+0x70/0x72\n  [177.805][T2585409]  ? handle_invalid_op+0x2c/0x40\n  [177.812][T2585409]  ? __list_del_entry_valid_or_report.cold+0x70/0x72\n  [177.820][T2585409]  ? exc_invalid_op+0x2d/0x40\n  [177.827][T2585409]  ? asm_exc_invalid_op+0x1a/0x20\n  [177.834][T2585409]  ? __list_del_entry_valid_or_report.cold+0x70/0x72\n  [177.843][T2585409]  btrfs_delete_unused_bgs+0x3d9/0x14c0 [btrfs]\nThere is a similar retry_list code in btrfs_delete_unused_bgs(), but it is\nsafe, AFAICS. Since the block group was in the unused list, the used bytes\nshould be 0 when it was added to the unused list. Then, it checks\nblock_group->{used,reserved,pinned} are still 0 under the\nblock_group->lock. So, they should be still eligible for the unused list,\nnot the reclaim list.\nThe reason it is safe there it's because because we're holding\nspace_info->groups_sem in write mode.\nThat means no other task can allocate from the block group, so while we\nare at deleted_unused_bgs() it's not possible for other tasks to\nallocate and deallocate extents from the block group, so it can't be\nadded to the unused list or the reclaim list by anyone else.\nThe bug can be reproduced by btrfs/166 after a few rounds. In practice\nthis can be hit when relocation cannot find more chunk space and ends\nwith ENOSPC.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/326fa14549d7969ef80d3f5beea5470cd1c8e67f"
          },
          {
            "url": "https://git.kernel.org/stable/c/48f091fd50b2eb33ae5eaea9ed3c4f81603acf38"
          },
          {
            "url": "https://git.kernel.org/stable/c/522b39bd7163e8dc49f8cf10b9b782218ac48746"
          },
          {
            "url": "https://git.kernel.org/stable/c/aa1d8cc0cc500e06b316cd6732d4e6c1388fe33c"
          },
          {
            "url": "https://git.kernel.org/stable/c/f8e960be923f74a273c62478c9cab9523936752b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42104",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:02.900",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnilfs2: add missing check for inode numbers on directory entries\nSyzbot reported that mounting and unmounting a specific pattern of\ncorrupted nilfs2 filesystem images causes a use-after-free of metadata\nfile inodes, which triggers a kernel bug in lru_add_fn().\nAs Jan Kara pointed out, this is because the link count of a metadata file\ngets corrupted to 0, and nilfs_evict_inode(), which is called from iput(),\ntries to delete that inode (ifile inode in this case).\nThe inconsistency occurs because directories containing the inode numbers\nof these metadata files that should not be visible in the namespace are\nread without checking.\nFix this issue by treating the inode numbers of these internal files as\nerrors in the sanity check helper when reading directory folios/pages.\nAlso thanks to Hillf Danton and Matthew Wilcox for their initial mm-layer\nanalysis.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/07c176e7acc5579c133bb923ab21316d192d0a95"
          },
          {
            "url": "https://git.kernel.org/stable/c/1b7d549ed2c1fa202c751b69423a0d3a6bd5a180"
          },
          {
            "url": "https://git.kernel.org/stable/c/265fff1a01cdc083aeaf0d934c929db5cc64aebf"
          },
          {
            "url": "https://git.kernel.org/stable/c/2f2fa9cf7c3537958a82fbe8c8595a5eb0861ad7"
          },
          {
            "url": "https://git.kernel.org/stable/c/3ab40870edb883b9633dc5cd55f5a2a11afa618d"
          },
          {
            "url": "https://git.kernel.org/stable/c/b11e8fb93ea5eefb2e4e719497ea177a58ff6131"
          },
          {
            "url": "https://git.kernel.org/stable/c/bb76c6c274683c8570ad788f79d4b875bde0e458"
          },
          {
            "url": "https://git.kernel.org/stable/c/c33c2b0d92aa1c2262d999b2598ad6fbd53bd479"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42105",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.000",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnilfs2: fix inode number range checks\nPatch series \"nilfs2: fix potential issues related to reserved inodes\".\nThis series fixes one use-after-free issue reported by syzbot, caused by\nnilfs2's internal inode being exposed in the namespace on a corrupted\nfilesystem, and a couple of flaws that cause problems if the starting\nnumber of non-reserved inodes written in the on-disk super block is\nintentionally (or corruptly) changed from its default value.  \nThis patch (of 3):\nIn the current implementation of nilfs2, \"nilfs->ns_first_ino\", which\ngives the first non-reserved inode number, is read from the superblock,\nbut its lower limit is not checked.\nAs a result, if a number that overlaps with the inode number range of\nreserved inodes such as the root directory or metadata files is set in the\nsuper block parameter, the inode number test macros (NILFS_MDT_INODE and\nNILFS_VALID_INODE) will not function properly.\nIn addition, these test macros use left bit-shift calculations using with\nthe inode number as the shift count via the BIT macro, but the result of a\nshift calculation that exceeds the bit width of an integer is undefined in\nthe C specification, so if \"ns_first_ino\" is set to a large value other\nthan the default value NILFS_USER_INO (=11), the macros may potentially\nmalfunction depending on the environment.\nFix these issues by checking the lower bound of \"nilfs->ns_first_ino\" and\nby preventing bit shifts equal to or greater than the NILFS_USER_INO\nconstant in the inode number test macros.\nAlso, change the type of \"ns_first_ino\" from signed integer to unsigned\ninteger to avoid the need for type casting in comparisons such as the\nlower bound check introduced this time.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/08cab183a624ba71603f3754643ae11cab34dbc4"
          },
          {
            "url": "https://git.kernel.org/stable/c/1c91058425a01131ea30dda6cf43c67b17884d6a"
          },
          {
            "url": "https://git.kernel.org/stable/c/3be4dcc8d7bea52ea41f87aa4bbf959efe7a5987"
          },
          {
            "url": "https://git.kernel.org/stable/c/57235c3c88bb430043728d0d02f44a4efe386476"
          },
          {
            "url": "https://git.kernel.org/stable/c/731011ac6c37cbe97ece229fc6daa486276052c5"
          },
          {
            "url": "https://git.kernel.org/stable/c/9194f8ca57527958bee207919458e372d638d783"
          },
          {
            "url": "https://git.kernel.org/stable/c/e2fec219a36e0993642844be0f345513507031f4"
          },
          {
            "url": "https://git.kernel.org/stable/c/fae1959d6ab2c52677b113935e36ab4e25df37ea"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42106",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.100",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ninet_diag: Initialize pad field in struct inet_diag_req_v2\nKMSAN reported uninit-value access in raw_lookup() [1]. Diag for raw\nsockets uses the pad field in struct inet_diag_req_v2 for the\nunderlying protocol. This field corresponds to the sdiag_raw_protocol\nfield in struct inet_diag_req_raw.\ninet_diag_get_exact_compat() converts inet_diag_req to\ninet_diag_req_v2, but leaves the pad field uninitialized. So the issue\noccurs when raw_lookup() accesses the sdiag_raw_protocol field.\nFix this by initializing the pad field in\ninet_diag_get_exact_compat(). Also, do the same fix in\ninet_diag_dump_compat() to avoid the similar issue in the future.\n[1]\nBUG: KMSAN: uninit-value in raw_lookup net/ipv4/raw_diag.c:49 [inline]\nBUG: KMSAN: uninit-value in raw_sock_get+0x657/0x800 net/ipv4/raw_diag.c:71\n raw_lookup net/ipv4/raw_diag.c:49 [inline]\n raw_sock_get+0x657/0x800 net/ipv4/raw_diag.c:71\n raw_diag_dump_one+0xa1/0x660 net/ipv4/raw_diag.c:99\n inet_diag_cmd_exact+0x7d9/0x980\n inet_diag_get_exact_compat net/ipv4/inet_diag.c:1404 [inline]\n inet_diag_rcv_msg_compat+0x469/0x530 net/ipv4/inet_diag.c:1426\n sock_diag_rcv_msg+0x23d/0x740 net/core/sock_diag.c:282\n netlink_rcv_skb+0x537/0x670 net/netlink/af_netlink.c:2564\n sock_diag_rcv+0x35/0x40 net/core/sock_diag.c:297\n netlink_unicast_kernel net/netlink/af_netlink.c:1335 [inline]\n netlink_unicast+0xe74/0x1240 net/netlink/af_netlink.c:1361\n netlink_sendmsg+0x10c6/0x1260 net/netlink/af_netlink.c:1905\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0x332/0x3d0 net/socket.c:745\n ____sys_sendmsg+0x7f0/0xb70 net/socket.c:2585\n ___sys_sendmsg+0x271/0x3b0 net/socket.c:2639\n __sys_sendmsg net/socket.c:2668 [inline]\n __do_sys_sendmsg net/socket.c:2677 [inline]\n __se_sys_sendmsg net/socket.c:2675 [inline]\n __x64_sys_sendmsg+0x27e/0x4a0 net/socket.c:2675\n x64_sys_call+0x135e/0x3ce0 arch/x86/include/generated/asm/syscalls_64.h:47\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xd9/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nUninit was stored to memory at:\n raw_sock_get+0x650/0x800 net/ipv4/raw_diag.c:71\n raw_diag_dump_one+0xa1/0x660 net/ipv4/raw_diag.c:99\n inet_diag_cmd_exact+0x7d9/0x980\n inet_diag_get_exact_compat net/ipv4/inet_diag.c:1404 [inline]\n inet_diag_rcv_msg_compat+0x469/0x530 net/ipv4/inet_diag.c:1426\n sock_diag_rcv_msg+0x23d/0x740 net/core/sock_diag.c:282\n netlink_rcv_skb+0x537/0x670 net/netlink/af_netlink.c:2564\n sock_diag_rcv+0x35/0x40 net/core/sock_diag.c:297\n netlink_unicast_kernel net/netlink/af_netlink.c:1335 [inline]\n netlink_unicast+0xe74/0x1240 net/netlink/af_netlink.c:1361\n netlink_sendmsg+0x10c6/0x1260 net/netlink/af_netlink.c:1905\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0x332/0x3d0 net/socket.c:745\n ____sys_sendmsg+0x7f0/0xb70 net/socket.c:2585\n ___sys_sendmsg+0x271/0x3b0 net/socket.c:2639\n __sys_sendmsg net/socket.c:2668 [inline]\n __do_sys_sendmsg net/socket.c:2677 [inline]\n __se_sys_sendmsg net/socket.c:2675 [inline]\n __x64_sys_sendmsg+0x27e/0x4a0 net/socket.c:2675\n x64_sys_call+0x135e/0x3ce0 arch/x86/include/generated/asm/syscalls_64.h:47\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xd9/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nLocal variable req.i created at:\n inet_diag_get_exact_compat net/ipv4/inet_diag.c:1396 [inline]\n inet_diag_rcv_msg_compat+0x2a6/0x530 net/ipv4/inet_diag.c:1426\n sock_diag_rcv_msg+0x23d/0x740 net/core/sock_diag.c:282\nCPU: 1 PID: 8888 Comm: syz-executor.6 Not tainted 6.10.0-rc4-00217-g35bb670d65fc #32\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0184bf0a349f4cf9e663abbe862ff280e8e4dfa2"
          },
          {
            "url": "https://git.kernel.org/stable/c/61cf1c739f08190a4cbf047b9fbb192a94d87e3f"
          },
          {
            "url": "https://git.kernel.org/stable/c/7094a5fd20ab66028f1da7f06e0f2692d70346f9"
          },
          {
            "url": "https://git.kernel.org/stable/c/76965648fe6858db7c5f3c700fef7aa5f124ca1c"
          },
          {
            "url": "https://git.kernel.org/stable/c/7ef519c8efde152e0d632337f2994f6921e0b7e4"
          },
          {
            "url": "https://git.kernel.org/stable/c/8366720519ea8d322a20780debdfd23d9fc0904a"
          },
          {
            "url": "https://git.kernel.org/stable/c/d6f487e0704de2f2d15f8dd5d7d723210f2b2fdb"
          },
          {
            "url": "https://git.kernel.org/stable/c/f9b2010e8af49fac9d9562146fb81744d8a9b051"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42107",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.220",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nice: Don't process extts if PTP is disabled\nThe ice_ptp_extts_event() function can race with ice_ptp_release() and\nresult in a NULL pointer dereference which leads to a kernel panic.\nPanic occurs because the ice_ptp_extts_event() function calls\nptp_clock_event() with a NULL pointer. The ice driver has already\nreleased the PTP clock by the time the interrupt for the next external\ntimestamp event occurs.\nTo fix this, modify the ice_ptp_extts_event() function to check the\nPTP state and bail early if PTP is not ready.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1c4e524811918600683b1ea87a5e0fc2db64fa9b"
          },
          {
            "url": "https://git.kernel.org/stable/c/996422e3230e41468f652d754fefd1bdbcd4604e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42108",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.333",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet: rswitch: Avoid use-after-free in rswitch_poll()\nThe use-after-free is actually in rswitch_tx_free(), which is inlined in\nrswitch_poll(). Since `skb` and `gq->skbs[gq->dirty]` are in fact the\nsame pointer, the skb is first freed using dev_kfree_skb_any(), then the\nvalue in skb->len is used to update the interface statistics.\nLet's move around the instructions to use skb->len before the skb is\nfreed.\nThis bug is trivial to reproduce using KFENCE. It will trigger a splat\nevery few packets. A simple ARP request or ICMP echo request is enough.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/92cbbe7759193e3418f38d0d73f8fe125312c58b"
          },
          {
            "url": "https://git.kernel.org/stable/c/9a0c28efeec6383ef22e97437616b920e7320b67"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42109",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.407",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnetfilter: nf_tables: unconditionally flush pending work before notifier\nsyzbot reports:\nKASAN: slab-uaf in nft_ctx_update include/net/netfilter/nf_tables.h:1831\nKASAN: slab-uaf in nft_commit_release net/netfilter/nf_tables_api.c:9530\nKASAN: slab-uaf int nf_tables_trans_destroy_work+0x152b/0x1750 net/netfilter/nf_tables_api.c:9597\nRead of size 2 at addr ffff88802b0051c4 by task kworker/1:1/45\n[..]\nWorkqueue: events nf_tables_trans_destroy_work\nCall Trace:\n nft_ctx_update include/net/netfilter/nf_tables.h:1831 [inline]\n nft_commit_release net/netfilter/nf_tables_api.c:9530 [inline]\n nf_tables_trans_destroy_work+0x152b/0x1750 net/netfilter/nf_tables_api.c:9597\nProblem is that the notifier does a conditional flush, but its possible\nthat the table-to-be-removed is still referenced by transactions being\nprocessed by the worker, so we need to flush unconditionally.\nWe could make the flush_work depend on whether we found a table to delete\nin nf-next to avoid the flush for most cases.\nAFAICS this problem is only exposed in nf-next, with\ncommit e169285f8c56 (\"netfilter: nf_tables: do not store nft_ctx in transaction objects\"),\nwith this commit applied there is an unconditional fetch of\ntable->family which is whats triggering the above splat.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/09e650c3a3a7d804430260510534ccbf71c75b2e"
          },
          {
            "url": "https://git.kernel.org/stable/c/3325628cb36b7f216c5716e7b5124d9dc81199e4"
          },
          {
            "url": "https://git.kernel.org/stable/c/4c06c13317b9a08decedcd7aaf706691e336277c"
          },
          {
            "url": "https://git.kernel.org/stable/c/55a40406aac555defe9bdd0adec9508116ce7cb1"
          },
          {
            "url": "https://git.kernel.org/stable/c/9f6958ba2e902f9820c594869bd710ba74b7c4c0"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42110",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.487",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet: ntb_netdev: Move ntb_netdev_rx_handler() to call netif_rx() from __netif_rx()\nThe following is emitted when using idxd (DSA) dmanegine as the data\nmover for ntb_transport that ntb_netdev uses.\n[74412.546922] BUG: using smp_processor_id() in preemptible [00000000] code: irq/52-idxd-por/14526\n[74412.556784] caller is netif_rx_internal+0x42/0x130\n[74412.562282] CPU: 6 PID: 14526 Comm: irq/52-idxd-por Not tainted 6.9.5 #5\n[74412.569870] Hardware name: Intel Corporation ArcherCity/ArcherCity, BIOS EGSDCRB1.E9I.1752.P05.2402080856 02/08/2024\n[74412.581699] Call Trace:\n[74412.584514]  <TASK>\n[74412.586933]  dump_stack_lvl+0x55/0x70\n[74412.591129]  check_preemption_disabled+0xc8/0xf0\n[74412.596374]  netif_rx_internal+0x42/0x130\n[74412.600957]  __netif_rx+0x20/0xd0\n[74412.604743]  ntb_netdev_rx_handler+0x66/0x150 [ntb_netdev]\n[74412.610985]  ntb_complete_rxc+0xed/0x140 [ntb_transport]\n[74412.617010]  ntb_rx_copy_callback+0x53/0x80 [ntb_transport]\n[74412.623332]  idxd_dma_complete_txd+0xe3/0x160 [idxd]\n[74412.628963]  idxd_wq_thread+0x1a6/0x2b0 [idxd]\n[74412.634046]  irq_thread_fn+0x21/0x60\n[74412.638134]  ? irq_thread+0xa8/0x290\n[74412.642218]  irq_thread+0x1a0/0x290\n[74412.646212]  ? __pfx_irq_thread_fn+0x10/0x10\n[74412.651071]  ? __pfx_irq_thread_dtor+0x10/0x10\n[74412.656117]  ? __pfx_irq_thread+0x10/0x10\n[74412.660686]  kthread+0x100/0x130\n[74412.664384]  ? __pfx_kthread+0x10/0x10\n[74412.668639]  ret_from_fork+0x31/0x50\n[74412.672716]  ? __pfx_kthread+0x10/0x10\n[74412.676978]  ret_from_fork_asm+0x1a/0x30\n[74412.681457]  </TASK>\nThe cause is due to the idxd driver interrupt completion handler uses\nthreaded interrupt and the threaded handler is not hard or soft interrupt\ncontext. However __netif_rx() can only be called from interrupt context.\nChange the call to netif_rx() in order to allow completion via normal\ncontext for dmaengine drivers that utilize threaded irq handling.\nWhile the following commit changed from netif_rx() to __netif_rx(),\nbaebdf48c360 (\"net: dev: Makes sure netif_rx() can be invoked in any context.\"),\nthe change should've been a noop instead. However, the code precedes this\nfix should've been using netif_rx_ni() or netif_rx_any_context().",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/4b3b6c7efee69f077b86ef7f088fb96768e46e1f"
          },
          {
            "url": "https://git.kernel.org/stable/c/858ae09f03677a4ab907a15516893bc2cc79d4c3"
          },
          {
            "url": "https://git.kernel.org/stable/c/e15a5d821e5192a3769d846079bc9aa380139baf"
          },
          {
            "url": "https://git.kernel.org/stable/c/e3af5b14e7632bf12058533d69055393e2d126c9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42111",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.563",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: always do the basic checks for btrfs_qgroup_inherit structure\n[BUG]\nSyzbot reports the following regression detected by KASAN:\n  BUG: KASAN: slab-out-of-bounds in btrfs_qgroup_inherit+0x42e/0x2e20 fs/btrfs/qgroup.c:3277\n  Read of size 8 at addr ffff88814628ca50 by task syz-executor318/5171\n  CPU: 0 PID: 5171 Comm: syz-executor318 Not tainted 6.10.0-rc2-syzkaller-00010-g2ab795141095 #0\n  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024\n  Call Trace:\n   <TASK>\n   __dump_stack lib/dump_stack.c:88 [inline]\n   dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n   print_address_description mm/kasan/report.c:377 [inline]\n   print_report+0x169/0x550 mm/kasan/report.c:488\n   kasan_report+0x143/0x180 mm/kasan/report.c:601\n   btrfs_qgroup_inherit+0x42e/0x2e20 fs/btrfs/qgroup.c:3277\n   create_pending_snapshot+0x1359/0x29b0 fs/btrfs/transaction.c:1854\n   create_pending_snapshots+0x195/0x1d0 fs/btrfs/transaction.c:1922\n   btrfs_commit_transaction+0xf20/0x3740 fs/btrfs/transaction.c:2382\n   create_snapshot+0x6a1/0x9e0 fs/btrfs/ioctl.c:875\n   btrfs_mksubvol+0x58f/0x710 fs/btrfs/ioctl.c:1029\n   btrfs_mksnapshot+0xb5/0xf0 fs/btrfs/ioctl.c:1075\n   __btrfs_ioctl_snap_create+0x387/0x4b0 fs/btrfs/ioctl.c:1340\n   btrfs_ioctl_snap_create_v2+0x1f2/0x3a0 fs/btrfs/ioctl.c:1422\n   btrfs_ioctl+0x99e/0xc60\n   vfs_ioctl fs/ioctl.c:51 [inline]\n   __do_sys_ioctl fs/ioctl.c:907 [inline]\n   __se_sys_ioctl+0xfc/0x170 fs/ioctl.c:893\n   do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n   do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n   entry_SYSCALL_64_after_hwframe+0x77/0x7f\n  RIP: 0033:0x7fcbf1992509\n  RSP: 002b:00007fcbf1928218 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\n  RAX: ffffffffffffffda RBX: 00007fcbf1a1f618 RCX: 00007fcbf1992509\n  RDX: 0000000020000280 RSI: 0000000050009417 RDI: 0000000000000003\n  RBP: 00007fcbf1a1f610 R08: 00007ffea1298e97 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000246 R12: 00007fcbf19eb660\n  R13: 00000000200002b8 R14: 00007fcbf19e60c0 R15: 0030656c69662f2e\n   </TASK>\nAnd it also pinned it down to commit b5357cb268c4 (\"btrfs: qgroup: do not\ncheck qgroup inherit if qgroup is disabled\").\n[CAUSE]\nThat offending commit skips the whole qgroup inherit check if qgroup is\nnot enabled.\nBut that also skips the very basic checks like\nnum_ref_copies/num_excl_copies and the structure size checks.\nMeaning if a qgroup enable/disable race is happening at the background,\nand we pass a btrfs_qgroup_inherit structure when the qgroup is\ndisabled, the check would be completely skipped.\nThen at the time of transaction commitment, qgroup is re-enabled and\nbtrfs_qgroup_inherit() is going to use the incorrect structure and\ncausing the above KASAN error.\n[FIX]\nMake btrfs_qgroup_check_inherit() only skip the source qgroup checks.\nSo that even if invalid btrfs_qgroup_inherit structure is passed in, we\ncan still reject invalid ones no matter if qgroup is enabled or not.\nFurthermore we do already have an extra safety inside\nbtrfs_qgroup_inherit(), which would just ignore invalid qgroup sources,\nso even if we only skip the qgroup source check we're still safe.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/724d8042cef84496ddb4492dc120291f997ae26b"
          },
          {
            "url": "https://git.kernel.org/stable/c/ebe5ea02577b2c527958af1b76ac472c7ab53a56"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42112",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.640",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet: txgbe: free isb resources at the right time\nWhen using MSI/INTx interrupt, the shared interrupts are still being\nhandled in the device remove routine, before free IRQs. So isb memory\nis still read after it is freed. Thus move wx_free_isb_resources()\nfrom txgbe_close() to txgbe_remove(). And fix the improper isb free\naction in txgbe_open() error handling path.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/935124dd5883b5de68dc5a94f582480a10643dc9"
          },
          {
            "url": "https://git.kernel.org/stable/c/efdc3f54299835ddef23bea651c753c4d467010b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42113",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.713",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet: txgbe: initialize num_q_vectors for MSI/INTx interrupts\nWhen using MSI/INTx interrupts, wx->num_q_vectors is uninitialized.\nThus there will be kernel panic in wx_alloc_q_vectors() to allocate\nqueue vectors.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/7c36711a2cd8059c2d24f5e5c1d76e8ea2d5613c"
          },
          {
            "url": "https://git.kernel.org/stable/c/9edc7a83cd40ac96ff14fe3a17a38f7ace6611df"
          },
          {
            "url": "https://git.kernel.org/stable/c/c98969226d1fe0c1dd779db8b1c444bc5294fc83"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42114",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.797",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: cfg80211: restrict NL80211_ATTR_TXQ_QUANTUM values\nsyzbot is able to trigger softlockups, setting NL80211_ATTR_TXQ_QUANTUM\nto 2^31.\nWe had a similar issue in sch_fq, fixed with commit\nd9e15a273306 (\"pkt_sched: fq: do not accept silly TCA_FQ_QUANTUM\")\nwatchdog: BUG: soft lockup - CPU#1 stuck for 26s! [kworker/1:0:24]\nModules linked in:\nirq event stamp: 131135\n hardirqs last  enabled at (131134): [<ffff80008ae8778c>] __exit_to_kernel_mode arch/arm64/kernel/entry-common.c:85 [inline]\n hardirqs last  enabled at (131134): [<ffff80008ae8778c>] exit_to_kernel_mode+0xdc/0x10c arch/arm64/kernel/entry-common.c:95\n hardirqs last disabled at (131135): [<ffff80008ae85378>] __el1_irq arch/arm64/kernel/entry-common.c:533 [inline]\n hardirqs last disabled at (131135): [<ffff80008ae85378>] el1_interrupt+0x24/0x68 arch/arm64/kernel/entry-common.c:551\n softirqs last  enabled at (125892): [<ffff80008907e82c>] neigh_hh_init net/core/neighbour.c:1538 [inline]\n softirqs last  enabled at (125892): [<ffff80008907e82c>] neigh_resolve_output+0x268/0x658 net/core/neighbour.c:1553\n softirqs last disabled at (125896): [<ffff80008904166c>] local_bh_disable+0x10/0x34 include/linux/bottom_half.h:19\nCPU: 1 PID: 24 Comm: kworker/1:0 Not tainted 6.9.0-rc7-syzkaller-gfda5695d692c #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nWorkqueue: mld mld_ifc_work\npstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : __list_del include/linux/list.h:195 [inline]\n pc : __list_del_entry include/linux/list.h:218 [inline]\n pc : list_move_tail include/linux/list.h:310 [inline]\n pc : fq_tin_dequeue include/net/fq_impl.h:112 [inline]\n pc : ieee80211_tx_dequeue+0x6b8/0x3b4c net/mac80211/tx.c:3854\n lr : __list_del_entry include/linux/list.h:218 [inline]\n lr : list_move_tail include/linux/list.h:310 [inline]\n lr : fq_tin_dequeue include/net/fq_impl.h:112 [inline]\n lr : ieee80211_tx_dequeue+0x67c/0x3b4c net/mac80211/tx.c:3854\nsp : ffff800093d36700\nx29: ffff800093d36a60 x28: ffff800093d36960 x27: dfff800000000000\nx26: ffff0000d800ad50 x25: ffff0000d800abe0 x24: ffff0000d800abf0\nx23: ffff0000e0032468 x22: ffff0000e00324d4 x21: ffff0000d800abf0\nx20: ffff0000d800abf8 x19: ffff0000d800abf0 x18: ffff800093d363c0\nx17: 000000000000d476 x16: ffff8000805519dc x15: ffff7000127a6cc8\nx14: 1ffff000127a6cc8 x13: 0000000000000004 x12: ffffffffffffffff\nx11: ffff7000127a6cc8 x10: 0000000000ff0100 x9 : 0000000000000000\nx8 : 0000000000000000 x7 : 0000000000000000 x6 : 0000000000000000\nx5 : ffff80009287aa08 x4 : 0000000000000008 x3 : ffff80008034c7fc\nx2 : ffff0000e0032468 x1 : 00000000da0e46b8 x0 : ffff0000e0032470\nCall trace:\n  __list_del include/linux/list.h:195 [inline]\n  __list_del_entry include/linux/list.h:218 [inline]\n  list_move_tail include/linux/list.h:310 [inline]\n  fq_tin_dequeue include/net/fq_impl.h:112 [inline]\n  ieee80211_tx_dequeue+0x6b8/0x3b4c net/mac80211/tx.c:3854\n  wake_tx_push_queue net/mac80211/util.c:294 [inline]\n  ieee80211_handle_wake_tx_queue+0x118/0x274 net/mac80211/util.c:315\n  drv_wake_tx_queue net/mac80211/driver-ops.h:1350 [inline]\n  schedule_and_wake_txq net/mac80211/driver-ops.h:1357 [inline]\n  ieee80211_queue_skb+0x18e8/0x2244 net/mac80211/tx.c:1664\n  ieee80211_tx+0x260/0x400 net/mac80211/tx.c:1966\n  ieee80211_xmit+0x278/0x354 net/mac80211/tx.c:2062\n  __ieee80211_subif_start_xmit+0xab8/0x122c net/mac80211/tx.c:4338\n  ieee80211_subif_start_xmit+0xe0/0x438 net/mac80211/tx.c:4532\n  __netdev_start_xmit include/linux/netdevice.h:4903 [inline]\n  netdev_start_xmit include/linux/netdevice.h:4917 [inline]\n  xmit_one net/core/dev.c:3531 [inline]\n  dev_hard_start_xmit+0x27c/0x938 net/core/dev.c:3547\n  __dev_queue_xmit+0x1678/0x33fc net/core/dev.c:4341\n  dev_queue_xmit include/linux/netdevice.h:3091 [inline]\n  neigh_resolve_output+0x558/0x658 net/core/neighbour.c:1563\n  neigh_output include/net/neighbour.h:542 [inline]\n  ip6_fini\n---truncated---",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/d1cba2ea8121e7fdbe1328cea782876b1dd80993"
          },
          {
            "url": "https://git.kernel.org/stable/c/e87c2f098f52aa2fe20258a5bb1738d6a74e9ed7"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42115",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.867",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\njffs2: Fix potential illegal address access in jffs2_free_inode\nDuring the stress testing of the jffs2 file system,the following\nabnormal printouts were found:\n[ 2430.649000] Unable to handle kernel paging request at virtual address 0069696969696948\n[ 2430.649622] Mem abort info:\n[ 2430.649829]   ESR = 0x96000004\n[ 2430.650115]   EC = 0x25: DABT (current EL), IL = 32 bits\n[ 2430.650564]   SET = 0, FnV = 0\n[ 2430.650795]   EA = 0, S1PTW = 0\n[ 2430.651032]   FSC = 0x04: level 0 translation fault\n[ 2430.651446] Data abort info:\n[ 2430.651683]   ISV = 0, ISS = 0x00000004\n[ 2430.652001]   CM = 0, WnR = 0\n[ 2430.652558] [0069696969696948] address between user and kernel address ranges\n[ 2430.653265] Internal error: Oops: 96000004 [#1] PREEMPT SMP\n[ 2430.654512] CPU: 2 PID: 20919 Comm: cat Not tainted 5.15.25-g512f31242bf6 #33\n[ 2430.655008] Hardware name: linux,dummy-virt (DT)\n[ 2430.655517] pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[ 2430.656142] pc : kfree+0x78/0x348\n[ 2430.656630] lr : jffs2_free_inode+0x24/0x48\n[ 2430.657051] sp : ffff800009eebd10\n[ 2430.657355] x29: ffff800009eebd10 x28: 0000000000000001 x27: 0000000000000000\n[ 2430.658327] x26: ffff000038f09d80 x25: 0080000000000000 x24: ffff800009d38000\n[ 2430.658919] x23: 5a5a5a5a5a5a5a5a x22: ffff000038f09d80 x21: ffff8000084f0d14\n[ 2430.659434] x20: ffff0000bf9a6ac0 x19: 0169696969696940 x18: 0000000000000000\n[ 2430.659969] x17: ffff8000b6506000 x16: ffff800009eec000 x15: 0000000000004000\n[ 2430.660637] x14: 0000000000000000 x13: 00000001000820a1 x12: 00000000000d1b19\n[ 2430.661345] x11: 0004000800000000 x10: 0000000000000001 x9 : ffff8000084f0d14\n[ 2430.662025] x8 : ffff0000bf9a6b40 x7 : ffff0000bf9a6b48 x6 : 0000000003470302\n[ 2430.662695] x5 : ffff00002e41dcc0 x4 : ffff0000bf9aa3b0 x3 : 0000000003470342\n[ 2430.663486] x2 : 0000000000000000 x1 : ffff8000084f0d14 x0 : fffffc0000000000\n[ 2430.664217] Call trace:\n[ 2430.664528]  kfree+0x78/0x348\n[ 2430.664855]  jffs2_free_inode+0x24/0x48\n[ 2430.665233]  i_callback+0x24/0x50\n[ 2430.665528]  rcu_do_batch+0x1ac/0x448\n[ 2430.665892]  rcu_core+0x28c/0x3c8\n[ 2430.666151]  rcu_core_si+0x18/0x28\n[ 2430.666473]  __do_softirq+0x138/0x3cc\n[ 2430.666781]  irq_exit+0xf0/0x110\n[ 2430.667065]  handle_domain_irq+0x6c/0x98\n[ 2430.667447]  gic_handle_irq+0xac/0xe8\n[ 2430.667739]  call_on_irq_stack+0x28/0x54\nThe parameter passed to kfree was 5a5a5a5a, which corresponds to the target field of\nthe jffs_inode_info structure. It was found that all variables in the jffs_inode_info\nstructure were 5a5a5a5a, except for the first member sem. It is suspected that these\nvariables are not initialized because they were set to 5a5a5a5a during memory testing,\nwhich is meant to detect uninitialized memory.The sem variable is initialized in the\nfunction jffs2_i_init_once, while other members are initialized in\nthe function jffs2_init_inode_info.\nThe function jffs2_init_inode_info is called after iget_locked,\nbut in the iget_locked function, the destroy_inode process is triggered,\nwhich releases the inode and consequently, the target member of the inode\nis not initialized.In concurrent high pressure scenarios, iget_locked\nmay enter the destroy_inode branch as described in the code.\nSince the destroy_inode functionality of jffs2 only releases the target,\nthe fix method is to set target to NULL in jffs2_i_init_once.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/05fc1ef892f862c1197b11b288bc00f602d2df0c"
          },
          {
            "url": "https://git.kernel.org/stable/c/0b3246052e01e61a55bb3a15b76acb006759fe67"
          },
          {
            "url": "https://git.kernel.org/stable/c/5ca26334fc8a3711fed14db7f9eb1c621be4df65"
          },
          {
            "url": "https://git.kernel.org/stable/c/6d6d94287f6365282bbf41e9a5b5281985970789"
          },
          {
            "url": "https://git.kernel.org/stable/c/751987a5d8ead0cc405fad96e83ebbaa51c82dbc"
          },
          {
            "url": "https://git.kernel.org/stable/c/af9a8730ddb6a4b2edd779ccc0aceb994d616830"
          },
          {
            "url": "https://git.kernel.org/stable/c/b6c8b3e31eb88c85094d848a0bd8b4bafe67e4d8"
          },
          {
            "url": "https://git.kernel.org/stable/c/d0bbbf31462a400bef4df33e22de91864f475455"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42116",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:03.950",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nigc: fix a log entry using uninitialized netdev\nDuring successful probe, igc logs this:\n[    5.133667] igc 0000:01:00.0 (unnamed net_device) (uninitialized): PHC added\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nThe reason is that igc_ptp_init() is called very early, even before\nregister_netdev() has been called. So the netdev_info() call works\non a partially uninitialized netdev.\nFix this by calling igc_ptp_init() after register_netdev(), right\nafter the media autosense check, just as in igb.  Add a comment,\njust as in igb.\nNow the log message is fine:\n[    5.200987] igc 0000:01:00.0 eth0: PHC added",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/86167183a17e03ec77198897975e9fdfbd53cb0b"
          },
          {
            "url": "https://git.kernel.org/stable/c/96839f3f588236593de36465f142b0126267f8b6"
          },
          {
            "url": "https://git.kernel.org/stable/c/98c8958980e829f023a490b9a9816ca1fe2f8b79"
          },
          {
            "url": "https://git.kernel.org/stable/c/991f036cabc3d13e886a37faeea1b6800181fdda"
          },
          {
            "url": "https://git.kernel.org/stable/c/d478ec838cf2b1e1051a8709cfc744fe1c03110f"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42117",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.030",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: ASSERT when failing to find index by plane/stream id\n[WHY]\nfind_disp_cfg_idx_by_plane_id and find_disp_cfg_idx_by_stream_id returns\nan array index and they return -1 when not found; however, -1 is not a\nvalid index number.\n[HOW]\nWhen this happens, call ASSERT(), and return a positive number (which is\nfewer than callers' array size) instead.\nThis fixes 4 OVERRUN and 2 NEGATIVE_RETURNS issues reported by Coverity.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/01eb50e53c1ce505bf449348d433181310288765"
          },
          {
            "url": "https://git.kernel.org/stable/c/a9c047a5cf3135b8b66bd28fbe2c698b9cace0b3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42118",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.097",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: Do not return negative stream id for array\n[WHY]\nresource_stream_to_stream_idx returns an array index and it return -1\nwhen not found; however, -1 is not a valid array index number.\n[HOW]\nWhen this happens, call ASSERT(), and return a zero instead.\nThis fixes an OVERRUN and an NEGATIVE_RETURNS issues reported by Coverity.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/3ac31c9a707dd1c7c890b95333182f955e9dcb57"
          },
          {
            "url": "https://git.kernel.org/stable/c/a76fa9c4f0fc0aa6f517da3fa7d7c23e8a32c7d0"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42119",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.187",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: Skip finding free audio for unknown engine_id\n[WHY]\nENGINE_ID_UNKNOWN = -1 and can not be used as an array index. Plus, it\nalso means it is uninitialized and does not need free audio.\n[HOW]\nSkip and return NULL.\nThis fixes 2 OVERRUN issues reported by Coverity.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1357b2165d9ad94faa4c4a20d5e2ce29c2ff29c3"
          },
          {
            "url": "https://git.kernel.org/stable/c/874261358d31fc772f2823604167e670983cc1ca"
          },
          {
            "url": "https://git.kernel.org/stable/c/881fb6afc0004c5e6392ae2848f825bf051dae14"
          },
          {
            "url": "https://git.kernel.org/stable/c/95ad20ee3c4efbb91f9a4ab08e070aa3697f5879"
          },
          {
            "url": "https://git.kernel.org/stable/c/9eb4db08a808e3a3ba59193aeb84a57a6dc4d8c9"
          },
          {
            "url": "https://git.kernel.org/stable/c/afaaebdee9bb9f26d9e13cc34b33bd0a7bf59488"
          },
          {
            "url": "https://git.kernel.org/stable/c/eacca028a623f608607d02457122ee5284491e18"
          },
          {
            "url": "https://git.kernel.org/stable/c/ffa7bd3ca9cfa902b857d1dc9a5f46fededf86c8"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42120",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.273",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: Check pipe offset before setting vblank\npipe_ctx has a size of MAX_PIPES so checking its index before accessing\nthe array.\nThis fixes an OVERRUN issue reported by Coverity.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0b3702f9d43d163fd05e43b7d7e22e766dbef329"
          },
          {
            "url": "https://git.kernel.org/stable/c/5396a70e8cf462ec5ccf2dc8de103c79de9489e6"
          },
          {
            "url": "https://git.kernel.org/stable/c/96bf81cc1bd058bb8af6e755a548e926e934dfd1"
          },
          {
            "url": "https://git.kernel.org/stable/c/b2e9abc95583ac7bbb2c47da4d476a798146dfd6"
          },
          {
            "url": "https://git.kernel.org/stable/c/c5ec2afeeee4c91cebc4eff6d4f1ecf4047259f4"
          },
          {
            "url": "https://git.kernel.org/stable/c/d2c3645a4a5ae5d933b4116c305d9d82b8199dbf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42121",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.353",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: Check index msg_id before read or write\n[WHAT]\nmsg_id is used as an array index and it cannot be a negative value, and\ntherefore cannot be equal to MOD_HDCP_MESSAGE_ID_INVALID (-1).\n[HOW]\nCheck whether msg_id is valid before reading and setting.\nThis fixes 4 OVERRUN issues reported by Coverity.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/59d99deb330af206a4541db0c4da8f73880fba03"
          },
          {
            "url": "https://git.kernel.org/stable/c/9933eca6ada0cd612e19522e7a319bcef464c0eb"
          },
          {
            "url": "https://git.kernel.org/stable/c/a31ea49dc8064a557565725cf045944307476a6e"
          },
          {
            "url": "https://git.kernel.org/stable/c/ae91ffbc8b8d942e3e7f188728cad557b7ed5ee4"
          },
          {
            "url": "https://git.kernel.org/stable/c/b5b8837d066cc182ff69fb5629ad32ade5484567"
          },
          {
            "url": "https://git.kernel.org/stable/c/fbb0701af9734cff13917a4b98b5ee9da2fde48d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42122",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.430",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: Add NULL pointer check for kzalloc\n[Why & How]\nCheck return pointer of kzalloc before using it.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/062edd612fcd300f0f79a36fca5b8b6a5e2fce70"
          },
          {
            "url": "https://git.kernel.org/stable/c/8e65a1b7118acf6af96449e1e66b7adbc9396912"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42123",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.500",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amdgpu: fix double free err_addr pointer warnings\nIn amdgpu_umc_bad_page_polling_timeout, the amdgpu_umc_handle_bad_pages\nwill be run many times so that double free err_addr in some special case.\nSo set the err_addr to NULL to avoid the warnings.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/506c245f3f1cd989cb89811a7f06e04ff8813a0d"
          },
          {
            "url": "https://git.kernel.org/stable/c/8e24beb3c2b08a4763f920399a9cc577ed440a1a"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42124",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.577",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nscsi: qedf: Make qedf_execute_tmf() non-preemptible\nStop calling smp_processor_id() from preemptible code in\nqedf_execute_tmf90.  This results in BUG_ON() when running an RT kernel.\n[ 659.343280] BUG: using smp_processor_id() in preemptible [00000000] code: sg_reset/3646\n[ 659.343282] caller is qedf_execute_tmf+0x8b/0x360 [qedf]",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0a8a91932b2772e75bf3f6d133ca4225d1d3e920"
          },
          {
            "url": "https://git.kernel.org/stable/c/0d8b637c9c5eeaa1a4e3dfb336f3ff918eb64fec"
          },
          {
            "url": "https://git.kernel.org/stable/c/2b9c7787cfcd1e76d873a78f16cf45bfa4b100ea"
          },
          {
            "url": "https://git.kernel.org/stable/c/4f314aadeed8cdf42c8cf30769425b5e44702748"
          },
          {
            "url": "https://git.kernel.org/stable/c/5ceb40cdee721e13cbe15a0515cacf984e11236b"
          },
          {
            "url": "https://git.kernel.org/stable/c/b6ded5316ec56e973dcf5f9997945aad01a9f062"
          },
          {
            "url": "https://git.kernel.org/stable/c/fa49c65a1cec6a3901ef884fdb24d98068b63493"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42125",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.667",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: rtw89: fw: scan offload prohibit all 6 GHz channel if no 6 GHz sband\nWe have some policy via BIOS to block uses of 6 GHz. In this case, 6 GHz\nsband will be NULL even if it is WiFi 7 chip. So, add NULL handling here\nto avoid crash.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/bb38626f3f97e16e6d368a9ff6daf320f3fe31d9"
          },
          {
            "url": "https://git.kernel.org/stable/c/ce4ba62f8bc5195a9a0d49c6235a9c99e619cadc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42126",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.743",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\npowerpc: Avoid nmi_enter/nmi_exit in real mode interrupt.\nnmi_enter()/nmi_exit() touches per cpu variables which can lead to kernel\ncrash when invoked during real mode interrupt handling (e.g. early HMI/MCE\ninterrupt handler) if percpu allocation comes from vmalloc area.\nEarly HMI/MCE handlers are called through DEFINE_INTERRUPT_HANDLER_NMI()\nwrapper which invokes nmi_enter/nmi_exit calls. We don't see any issue when\npercpu allocation is from the embedded first chunk. However with\nCONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK enabled there are chances where percpu\nallocation can come from the vmalloc area.\nWith kernel command line \"percpu_alloc=page\" we can force percpu allocation\nto come from vmalloc area and can see kernel crash in machine_check_early:\n[    1.215714] NIP [c000000000e49eb4] rcu_nmi_enter+0x24/0x110\n[    1.215717] LR [c0000000000461a0] machine_check_early+0xf0/0x2c0\n[    1.215719] --- interrupt: 200\n[    1.215720] [c000000fffd73180] [0000000000000000] 0x0 (unreliable)\n[    1.215722] [c000000fffd731b0] [0000000000000000] 0x0\n[    1.215724] [c000000fffd73210] [c000000000008364] machine_check_early_common+0x134/0x1f8\nFix this by avoiding use of nmi_enter()/nmi_exit() in real mode if percpu\nfirst chunk is not embedded.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0db880fc865ffb522141ced4bfa66c12ab1fbb70"
          },
          {
            "url": "https://git.kernel.org/stable/c/0f37946c62c48a907625348cbc720a7a0c547d1e"
          },
          {
            "url": "https://git.kernel.org/stable/c/2c78c9411e685dbc9eac8c2845111b03501975b8"
          },
          {
            "url": "https://git.kernel.org/stable/c/8d3f83dfb23674540c827a8d65fba20aa300b252"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42127",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.820",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/lima: fix shared irq handling on driver remove\nlima uses a shared interrupt, so the interrupt handlers must be prepared\nto be called at any time. At driver removal time, the clocks are\ndisabled early and the interrupts stay registered until the very end of\nthe remove process due to the devm usage.\nThis is potentially a bug as the interrupts access device registers\nwhich assumes clocks are enabled. A crash can be triggered by removing\nthe driver in a kernel with CONFIG_DEBUG_SHIRQ enabled.\nThis patch frees the interrupts at each lima device finishing callback\nso that the handlers are already unregistered by the time we fully\ndisable clocks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/04d531b9a1875846d4f89953b469ad463aa7a770"
          },
          {
            "url": "https://git.kernel.org/stable/c/0a487e977cb8897ae4c51ecd34bbaa2b005266c9"
          },
          {
            "url": "https://git.kernel.org/stable/c/0d60c43df59ef01c08dc7b0c45495178f9d05a13"
          },
          {
            "url": "https://git.kernel.org/stable/c/17fe8b75aaf0bb1bdc31368963446b421c22d0af"
          },
          {
            "url": "https://git.kernel.org/stable/c/25d0d9b83d855cbc5d5aa5ae3cd79d55ea0c84a8"
          },
          {
            "url": "https://git.kernel.org/stable/c/a6683c690bbfd1f371510cb051e8fa49507f3f5e"
          },
          {
            "url": "https://git.kernel.org/stable/c/b5daf9217a50636a969bc1965f827878aeb09ffe"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42128",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.903",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nleds: an30259a: Use devm_mutex_init() for mutex initialization\nIn this driver LEDs are registered using devm_led_classdev_register()\nso they are automatically unregistered after module's remove() is done.\nled_classdev_unregister() calls module's led_set_brightness() to turn off\nthe LEDs and that callback uses mutex which was destroyed already\nin module's remove() so use devm API instead.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/3ead19aa341de89a8c3d88a091d8093ebea622e8"
          },
          {
            "url": "https://git.kernel.org/stable/c/9dba44460bfca657ca43f03ea9bafa4f9f7dd077"
          },
          {
            "url": "https://git.kernel.org/stable/c/c382e2e3eccb6b7ca8c7aff5092c1668428e7de6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42129",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:04.977",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nleds: mlxreg: Use devm_mutex_init() for mutex initialization\nIn this driver LEDs are registered using devm_led_classdev_register()\nso they are automatically unregistered after module's remove() is done.\nled_classdev_unregister() calls module's led_set_brightness() to turn off\nthe LEDs and that callback uses mutex which was destroyed already\nin module's remove() so use devm API instead.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/3b62888307ae44b68512d3f7735c26a4c8e45b51"
          },
          {
            "url": "https://git.kernel.org/stable/c/efc347b9efee1c2b081f5281d33be4559fa50a16"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42130",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.053",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnfc/nci: Add the inconsistency check between the input data length and count\nwrite$nci(r0, &(0x7f0000000740)=ANY=[@ANYBLOB=\"610501\"], 0xf)\nSyzbot constructed a write() call with a data length of 3 bytes but a count value\nof 15, which passed too little data to meet the basic requirements of the function\nnci_rf_intf_activated_ntf_packet().\nTherefore, increasing the comparison between data length and count value to avoid\nproblems caused by inconsistent data length and count.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/056478b4321b36ca33567089d39ac992f6c9c37a"
          },
          {
            "url": "https://git.kernel.org/stable/c/068648aab72c9ba7b0597354ef4d81ffaac7b979"
          },
          {
            "url": "https://git.kernel.org/stable/c/22a72c1c10f43ca645a98725e0faff34592f4d08"
          },
          {
            "url": "https://git.kernel.org/stable/c/41f5e2840cd0629f049ce5ce2f8dd10a8299de42"
          },
          {
            "url": "https://git.kernel.org/stable/c/f07bcd8bba803c9e6ad2048543185d6c56587a2f"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42131",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.130",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmm: avoid overflows in dirty throttling logic\nThe dirty throttling logic is interspersed with assumptions that dirty\nlimits in PAGE_SIZE units fit into 32-bit (so that various multiplications\nfit into 64-bits).  If limits end up being larger, we will hit overflows,\npossible divisions by 0 etc.  Fix these problems by never allowing so\nlarge dirty limits as they have dubious practical value anyway.  For\ndirty_bytes / dirty_background_bytes interfaces we can just refuse to set\nso large limits.  For dirty_ratio / dirty_background_ratio it isn't so\nsimple as the dirty limit is computed from the amount of available memory\nwhich can change due to memory hotplug etc.  So when converting dirty\nlimits from ratios to numbers of pages, we just don't allow the result to\nexceed UINT_MAX.\nThis is root-only triggerable problem which occurs when the operator\nsets dirty limits to >16 TB.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/385d838df280eba6c8680f9777bfa0d0bfe7e8b2"
          },
          {
            "url": "https://git.kernel.org/stable/c/7a49389771ae7666f4dc3426e2a4594bf23ae290"
          },
          {
            "url": "https://git.kernel.org/stable/c/8e0b5e7f2895eccef5c2a0018b589266f90c4805"
          },
          {
            "url": "https://git.kernel.org/stable/c/a25e8536184516b55ef89ab91dd2eea429de28d2"
          },
          {
            "url": "https://git.kernel.org/stable/c/bd16a7ee339aef3ee4c90cb23902afb6af379ea0"
          },
          {
            "url": "https://git.kernel.org/stable/c/c83ed422c24f0d4b264f89291d4fabe285f80dbc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42132",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.213",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nbluetooth/hci: disallow setting handle bigger than HCI_CONN_HANDLE_MAX\nSyzbot hit warning in hci_conn_del() caused by freeing handle that was\nnot allocated using ida allocator.\nThis is caused by handle bigger than HCI_CONN_HANDLE_MAX passed by\nhci_le_big_sync_established_evt(), which makes code think it's unset\nconnection.\nAdd same check for handle upper bound as in hci_conn_set_handle() to\nprevent warning.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1cc18c2ab2e8c54c355ea7c0423a636e415a0c23"
          },
          {
            "url": "https://git.kernel.org/stable/c/4970e48f83dbd21d2a6a7cdaaafc2a71f7f45dc4"
          },
          {
            "url": "https://git.kernel.org/stable/c/d311036696fed778301d08a71a4bef737b86d8c5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42133",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.290",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nBluetooth: Ignore too large handle values in BIG\nhci_le_big_sync_established_evt is necessary to filter out cases where the\nhandle value is belonging to ida id range, otherwise ida will be erroneously\nreleased in hci_conn_cleanup.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/015d79c96d62cd8a4a359fcf5be40d58088c936b"
          },
          {
            "url": "https://git.kernel.org/stable/c/38263088b845abeeeb98dda5b87c0de3063b6dbb"
          },
          {
            "url": "https://git.kernel.org/stable/c/dad0003ccc68457baf005a6ed75b4d321463fe3d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42134",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.360",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nvirtio-pci: Check if is_avq is NULL\n[bug]\nIn the virtio_pci_common.c function vp_del_vqs, vp_dev->is_avq is involved\nto determine whether it is admin virtqueue, but this function vp_dev->is_avq\n may be empty. For installations, virtio_pci_legacy does not assign a value\n to vp_dev->is_avq.\n[fix]\nCheck whether it is vp_dev->is_avq before use.\n[test]\nTest with virsh Attach device\nBefore this patch, the following command would crash the guest system\nAfter applying the patch, everything seems to be working fine.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/5e2024b0b9b3d5709e3f7e9b92951d7e29154106"
          },
          {
            "url": "https://git.kernel.org/stable/c/c8fae27d141a32a1624d0d0d5419d94252824498"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42135",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.433",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nvhost_task: Handle SIGKILL by flushing work and exiting\nInstead of lingering until the device is closed, this has us handle\nSIGKILL by:\n1. marking the worker as killed so we no longer try to use it with\n   new virtqueues and new flush operations.\n2. setting the virtqueue to worker mapping so no new works are queued.\n3. running all the exiting works.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/abe067dc3a662eef7d5cddbbc41ed50a0b68b0af"
          },
          {
            "url": "https://git.kernel.org/stable/c/db5247d9bf5c6ade9fd70b4e4897441e0269b233"
          },
          {
            "url": "https://git.kernel.org/stable/c/dec987fe2df670827eb53b97c9552ed8dfc63ad4"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42136",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.507",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ncdrom: rearrange last_media_change check to avoid unintentional overflow\nWhen running syzkaller with the newly reintroduced signed integer wrap\nsanitizer we encounter this splat:\n[  366.015950] UBSAN: signed-integer-overflow in ../drivers/cdrom/cdrom.c:2361:33\n[  366.021089] -9223372036854775808 - 346321 cannot be represented in type '__s64' (aka 'long long')\n[  366.025894] program syz-executor.4 is using a deprecated SCSI ioctl, please convert it to SG_IO\n[  366.027502] CPU: 5 PID: 28472 Comm: syz-executor.7 Not tainted 6.8.0-rc2-00035-gb3ef86b5a957 #1\n[  366.027512] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\n[  366.027518] Call Trace:\n[  366.027523]  <TASK>\n[  366.027533]  dump_stack_lvl+0x93/0xd0\n[  366.027899]  handle_overflow+0x171/0x1b0\n[  366.038787] ata1.00: invalid multi_count 32 ignored\n[  366.043924]  cdrom_ioctl+0x2c3f/0x2d10\n[  366.063932]  ? __pm_runtime_resume+0xe6/0x130\n[  366.071923]  sr_block_ioctl+0x15d/0x1d0\n[  366.074624]  ? __pfx_sr_block_ioctl+0x10/0x10\n[  366.077642]  blkdev_ioctl+0x419/0x500\n[  366.080231]  ? __pfx_blkdev_ioctl+0x10/0x10\n...\nHistorically, the signed integer overflow sanitizer did not work in the\nkernel due to its interaction with `-fwrapv` but this has since been\nchanged [1] in the newest version of Clang. It was re-enabled in the\nkernel with Commit 557f8c582a9ba8ab (\"ubsan: Reintroduce signed overflow\nsanitizer\").\nLet's rearrange the check to not perform any arithmetic, thus not\ntripping the sanitizer.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0c97527e916054acc4a46ffb02842988acb2e92b"
          },
          {
            "url": "https://git.kernel.org/stable/c/3ee21e14c8c329168a0b66bab00ecd18f5d0dee3"
          },
          {
            "url": "https://git.kernel.org/stable/c/e809bc112712da8f7e15822674c6562da6cdf24c"
          },
          {
            "url": "https://git.kernel.org/stable/c/efb905aeb44b0e99c0e6b07865b1885ae0471ebf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42137",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.583",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nBluetooth: qca: Fix BT enable failure again for QCA6390 after warm reboot\nCommit 272970be3dab (\"Bluetooth: hci_qca: Fix driver shutdown on closed\nserdev\") will cause below regression issue:\nBT can't be enabled after below steps:\ncold boot -> enable BT -> disable BT -> warm reboot -> BT enable failure\nif property enable-gpios is not configured within DT|ACPI for QCA6390.\nThe commit is to fix a use-after-free issue within qca_serdev_shutdown()\nby adding condition to avoid the serdev is flushed or wrote after closed\nbut also introduces this regression issue regarding above steps since the\nVSC is not sent to reset controller during warm reboot.\nFixed by sending the VSC to reset controller within qca_serdev_shutdown()\nonce BT was ever enabled, and the use-after-free issue is also fixed by\nthis change since the serdev is still opened before it is flushed or wrote.\nVerified by the reported machine Dell XPS 13 9310 laptop over below two\nkernel commits:\ncommit e00fc2700a3f (\"Bluetooth: btusb: Fix triggering coredump\nimplementation for QCA\") of bluetooth-next tree.\ncommit b23d98d46d28 (\"Bluetooth: btusb: Fix triggering coredump\nimplementation for QCA\") of linus mainline tree.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/215a26c2404fa34625c725d446967fa328a703eb"
          },
          {
            "url": "https://git.kernel.org/stable/c/4ca6013cd18e58ac1044908c40d4006a92093a11"
          },
          {
            "url": "https://git.kernel.org/stable/c/88e72239ead9814b886db54fc4ee39ef3c2b8f26"
          },
          {
            "url": "https://git.kernel.org/stable/c/977b9dc65e14fb80de4763d949c7dec2ecb15b9b"
          },
          {
            "url": "https://git.kernel.org/stable/c/e2d8aa4c763593704ac21e7591aed4f13e32f3b5"
          },
          {
            "url": "https://git.kernel.org/stable/c/e6e200b264271f62a3fadb51ada9423015ece37b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42138",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.680",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmlxsw: core_linecards: Fix double memory deallocation in case of invalid INI file\nIn case of invalid INI file mlxsw_linecard_types_init() deallocates memory\nbut doesn't reset pointer to NULL and returns 0. In case of any error\noccurred after mlxsw_linecard_types_init() call, mlxsw_linecards_init()\ncalls mlxsw_linecard_types_fini() which performs memory deallocation again.\nAdd pointer reset to NULL.\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/8ce34dccbe8fa7d2ef86f2d8e7db2a9b67cabfc3"
          },
          {
            "url": "https://git.kernel.org/stable/c/9af7437669b72f804fc4269f487528dbbed142a2"
          },
          {
            "url": "https://git.kernel.org/stable/c/ab557f5cd993a3201b09593633d04b891263d5c0"
          },
          {
            "url": "https://git.kernel.org/stable/c/f8b55a465b0e8a500179808166fe9420f5c091a1"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42139",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.757",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nice: Fix improper extts handling\nExtts events are disabled and enabled by the application ts2phc.\nHowever, in case where the driver is removed when the application is\nrunning, a specific extts event remains enabled and can cause a kernel\ncrash.\nAs a side effect, when the driver is reloaded and application is started\nagain, remaining extts event for the channel from a previous run will\nkeep firing and the message \"extts on unexpected channel\" might be\nprinted to the user.\nTo avoid that, extts events shall be disabled when PTP is released.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/00d3b4f54582d4e4a02cda5886bb336eeab268cc"
          },
          {
            "url": "https://git.kernel.org/stable/c/9f69b31ae9e25dec27ad31fbc64dd99af16ee3d3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42140",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.837",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nriscv: kexec: Avoid deadlock in kexec crash path\nIf the kexec crash code is called in the interrupt context, the\nmachine_kexec_mask_interrupts() function will trigger a deadlock while\ntrying to acquire the irqdesc spinlock and then deactivate irqchip in\nirq_set_irqchip_state() function.\nUnlike arm64, riscv only requires irq_eoi handler to complete EOI and\nkeeping irq_set_irqchip_state() will only leave this possible deadlock\nwithout any use. So we simply remove it.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/484dd545271d02d1571e1c6b62ea7df9dbe5e692"
          },
          {
            "url": "https://git.kernel.org/stable/c/653deee48a4682ea17a05b96fb6842795ab5943c"
          },
          {
            "url": "https://git.kernel.org/stable/c/7692c9b6baacdee378435f58f19baf0eb69e4155"
          },
          {
            "url": "https://git.kernel.org/stable/c/bb80a7911218bbab2a69b5db7d2545643ab0073d"
          },
          {
            "url": "https://git.kernel.org/stable/c/c562ba719df570c986caf0941fea2449150bcbc4"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42141",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.917",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nBluetooth: ISO: Check socket flag instead of hcon\nThis fixes the following Smatch static checker warning:\nnet/bluetooth/iso.c:1364 iso_sock_recvmsg()\nerror: we previously assumed 'pi->conn->hcon' could be null (line 1359)\nnet/bluetooth/iso.c\n1347 static int iso_sock_recvmsg(struct socket *sock, struct msghdr *msg,\n1348                             size_t len, int flags)\n1349 {\n1350         struct sock *sk = sock->sk;\n1351         struct iso_pinfo *pi = iso_pi(sk);\n1352\n1353         BT_DBG(\"sk %p\", sk);\n1354\n1355         if (test_and_clear_bit(BT_SK_DEFER_SETUP,\n                                      &bt_sk(sk)->flags)) {\n1356                 lock_sock(sk);\n1357                 switch (sk->sk_state) {\n1358                 case BT_CONNECT2:\n1359                         if (pi->conn->hcon &&\n                                     ^^^^^^^^^^^^^^ If ->hcon is NULL\n1360                             test_bit(HCI_CONN_PA_SYNC,\n                                         &pi->conn->hcon->flags)) {\n1361                                 iso_conn_big_sync(sk);\n1362                                 sk->sk_state = BT_LISTEN;\n1363                         } else {\n--> 1364                         iso_conn_defer_accept(pi->conn->hcon);\n                                                       ^^^^^^^^^^^^^^\n                                                       then we're toast\n1365                                 sk->sk_state = BT_CONFIG;\n1366                         }\n1367                         release_sock(sk);\n1368                         return 0;\n1369                 case BT_CONNECTED:\n1370                         if (test_bit(BT_SK_PA_SYNC,",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/045669710464a21c67e690ef14698fd71857cb11"
          },
          {
            "url": "https://git.kernel.org/stable/c/33fabef489169c6db87843ef23351ed0d5e51ad8"
          },
          {
            "url": "https://git.kernel.org/stable/c/596b6f081336e77764ca35cfeab66d0fcdbe544e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42142",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:05.993",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet/mlx5: E-switch, Create ingress ACL when needed\nCurrently, ingress acl is used for three features. It is created only\nwhen vport metadata match and prio tag are enabled. But active-backup\nlag mode also uses it. It is independent of vport metadata match and\nprio tag. And vport metadata match can be disabled using the\nfollowing devlink command:\n # devlink dev param set pci/0000:08:00.0 name esw_port_metadata \\\n\tvalue false cmode runtime\nIf ingress acl is not created, will hit panic when creating drop rule\nfor active-backup lag mode. If always create it, there will be about\n5% performance degradation.\nFix it by creating ingress acl when needed. If esw_port_metadata is\ntrue, ingress acl exists, then create drop rule using existing\ningress acl. If esw_port_metadata is false, create ingress acl and\nthen create drop rule.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/3e3551f8702978cd2221d2614ca6d6727e785324"
          },
          {
            "url": "https://git.kernel.org/stable/c/83bc1a129f7fd0d7d05036ceb7ee69102624e320"
          },
          {
            "url": "https://git.kernel.org/stable/c/b20c2fb45470d0c7a603613c9cfa5d45720e17f2"
          },
          {
            "url": "https://git.kernel.org/stable/c/bc3ff8d3c05044de57865ebbb78cca8f7da3e595"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42143",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.073",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\norangefs: fix out-of-bounds fsid access\nArnd Bergmann sent a patch to fsdevel, he says:\n\"orangefs_statfs() copies two consecutive fields of the superblock into\nthe statfs structure, which triggers a warning from the string fortification\nhelpers\"\nJan Kara suggested an alternate way to do the patch to make it more readable.\nI ran both ideas through xfstests and both seem fine. This patch\nis based on Jan Kara's suggestion.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/137a06dc0ff8b2d2069c2345d015ef0fa71df1ed"
          },
          {
            "url": "https://git.kernel.org/stable/c/1617249e24bd04c8047956afb43feec4876d1715"
          },
          {
            "url": "https://git.kernel.org/stable/c/53e4efa470d5fc6a96662d2d3322cfc925818517"
          },
          {
            "url": "https://git.kernel.org/stable/c/556edaa27c27db24a0f34c78cebef90e5bb6e167"
          },
          {
            "url": "https://git.kernel.org/stable/c/6a3cacf6d3cf0278aa90392aef2fc3fe2717a047"
          },
          {
            "url": "https://git.kernel.org/stable/c/74159d409da82269311a60256aad8ae8753da450"
          },
          {
            "url": "https://git.kernel.org/stable/c/b90176a9553775e23966650e445b1866e62e4924"
          },
          {
            "url": "https://git.kernel.org/stable/c/de8a5f7b71800a11fbaffc8ddacf08ead78afcc5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42144",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.157",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nthermal/drivers/mediatek/lvts_thermal: Check NULL ptr on lvts_data\nVerify that lvts_data is not NULL before using it.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/79ef1a5593fdb8aa4dbccf6085c48f1739338bc9"
          },
          {
            "url": "https://git.kernel.org/stable/c/a1191a77351e25ddf091bb1a231cae12ee598b5d"
          },
          {
            "url": "https://git.kernel.org/stable/c/fd7ae1cabfedd727be5bee774c87acbc7b10b886"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42145",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.227",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nIB/core: Implement a limit on UMAD receive List\nThe existing behavior of ib_umad, which maintains received MAD\npackets in an unbounded list, poses a risk of uncontrolled growth.\nAs user-space applications extract packets from this list, the rate\nof extraction may not match the rate of incoming packets, leading\nto potential list overflow.\nTo address this, we introduce a limit to the size of the list. After\nconsidering typical scenarios, such as OpenSM processing, which can\nhandle approximately 100k packets per second, and the 1-second retry\ntimeout for most packets, we set the list size limit to 200k. Packets\nreceived beyond this limit are dropped, assuming they are likely timed\nout by the time they are handled by user-space.\nNotably, packets queued on the receive list due to reasons like\ntimed-out sends are preserved even when the list is full.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1288cf1cceb0e6df276e182f5412370fb4169bcb"
          },
          {
            "url": "https://git.kernel.org/stable/c/62349fbf86b5e13b02721bdadf98c29afd1e7b5f"
          },
          {
            "url": "https://git.kernel.org/stable/c/63d202d948bb6d3a28cd8e8b96b160fa53e18baa"
          },
          {
            "url": "https://git.kernel.org/stable/c/a6627fba793cc75b7365d9504a0095fb2902dda4"
          },
          {
            "url": "https://git.kernel.org/stable/c/b4913702419d064ec4c4bbf7270643c95cc89a1b"
          },
          {
            "url": "https://git.kernel.org/stable/c/b8c5f635997f49c625178d1a0cb32a80ed33abe6"
          },
          {
            "url": "https://git.kernel.org/stable/c/ca0b44e20a6f3032224599f02e7c8fb49525c894"
          },
          {
            "url": "https://git.kernel.org/stable/c/d73cb8862e4d6760ccc94d3b57b9ef6271400607"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42146",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.313",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/xe: Add outer runtime_pm protection to xe_live_ktest@xe_dma_buf\nAny kunit doing any memory access should get their own runtime_pm\nouter references since they don't use the standard driver API\nentries. In special this dma_buf from the same driver.\nFound by pre-merge CI on adding WARN calls for unprotected\ninner callers:\n<6> [318.639739]     # xe_dma_buf_kunit: running xe_test_dmabuf_import_same_driver\n<4> [318.639957] ------------[ cut here ]------------\n<4> [318.639967] xe 0000:4d:00.0: Missing outer runtime PM protection\n<4> [318.640049] WARNING: CPU: 117 PID: 3832 at drivers/gpu/drm/xe/xe_pm.c:533 xe_pm_runtime_get_noresume+0x48/0x60 [xe]",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0888d15ea45ba8ef4508edd1123ea5ad95b58994"
          },
          {
            "url": "https://git.kernel.org/stable/c/f9116f658a6217b101e3b4e89f845775b6fb05d9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42147",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.383",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ncrypto: hisilicon/debugfs - Fix debugfs uninit process issue\nDuring the zip probe process, the debugfs failure does not stop\nthe probe. When debugfs initialization fails, jumping to the\nerror branch will also release regs, in addition to its own\nrollback operation.\nAs a result, it may be released repeatedly during the regs\nuninit process. Therefore, the null check needs to be added to\nthe regs uninit process.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/7fc8d9a525b5c3f8dfa5ed50901e764d8ede7e1e"
          },
          {
            "url": "https://git.kernel.org/stable/c/8be0913389718e8d27c4f1d4537b5e1b99ed7739"
          },
          {
            "url": "https://git.kernel.org/stable/c/e0a2d2df9ba7bd6bd7e0a9b6a5e3894f7e8445b3"
          },
          {
            "url": "https://git.kernel.org/stable/c/eda60520cfe3aba9f088c68ebd5bcbca9fc6ac3c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42148",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.453",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nbnx2x: Fix multiple UBSAN array-index-out-of-bounds\nFix UBSAN warnings that occur when using a system with 32 physical\ncpu cores or more, or when the user defines a number of Ethernet\nqueues greater than or equal to FP_SB_MAX_E1x using the num_queues\nmodule parameter.\nCurrently there is a read/write out of bounds that occurs on the array\n\"struct stats_query_entry query\" present inside the \"bnx2x_fw_stats_req\"\nstruct in \"drivers/net/ethernet/broadcom/bnx2x/bnx2x.h\".\nLooking at the definition of the \"struct stats_query_entry query\" array:\nstruct stats_query_entry query[FP_SB_MAX_E1x+\n         BNX2X_FIRST_QUEUE_QUERY_IDX];\nFP_SB_MAX_E1x is defined as the maximum number of fast path interrupts and\nhas a value of 16, while BNX2X_FIRST_QUEUE_QUERY_IDX has a value of 3\nmeaning the array has a total size of 19.\nSince accesses to \"struct stats_query_entry query\" are offset-ted by\nBNX2X_FIRST_QUEUE_QUERY_IDX, that means that the total number of Ethernet\nqueues should not exceed FP_SB_MAX_E1x (16). However one of these queues\nis reserved for FCOE and thus the number of Ethernet queues should be set\nto [FP_SB_MAX_E1x -1] (15) if FCOE is enabled or [FP_SB_MAX_E1x] (16) if\nit is not.\nThis is also described in a comment in the source code in\ndrivers/net/ethernet/broadcom/bnx2x/bnx2x.h just above the Macro definition\nof FP_SB_MAX_E1x. Below is the part of this explanation that it important\nfor this patch\n/*\n  * The total number of L2 queues, MSIX vectors and HW contexts (CIDs) is\n  * control by the number of fast-path status blocks supported by the\n  * device (HW/FW). Each fast-path status block (FP-SB) aka non-default\n  * status block represents an independent interrupts context that can\n  * serve a regular L2 networking queue. However special L2 queues such\n  * as the FCoE queue do not require a FP-SB and other components like\n  * the CNIC may consume FP-SB reducing the number of possible L2 queues\n  *\n  * If the maximum number of FP-SB available is X then:\n  * a. If CNIC is supported it consumes 1 FP-SB thus the max number of\n  *    regular L2 queues is Y=X-1\n  * b. In MF mode the actual number of L2 queues is Y= (X-1/MF_factor)\n  * c. If the FCoE L2 queue is supported the actual number of L2 queues\n  *    is Y+1\n  * d. The number of irqs (MSIX vectors) is either Y+1 (one extra for\n  *    slow-path interrupts) or Y+2 if CNIC is supported (one additional\n  *    FP interrupt context for the CNIC).\n  * e. The number of HW context (CID count) is always X or X+1 if FCoE\n  *    L2 queue is supported. The cid for the FCoE L2 queue is always X.\n  */\nHowever this driver also supports NICs that use the E2 controller which can\nhandle more queues due to having more FP-SB represented by FP_SB_MAX_E2.\nLooking at the commits when the E2 support was added, it was originally\nusing the E1x parameters: commit f2e0899f0f27 (\"bnx2x: Add 57712 support\").\nBack then FP_SB_MAX_E2 was set to 16 the same as E1x. However the driver\nwas later updated to take full advantage of the E2 instead of having it be\nlimited to the capabilities of the E1x. But as far as we can tell, the\narray \"stats_query_entry query\" was still limited to using the FP-SB\navailable to the E1x cards as part of an oversignt when the driver was\nupdated to take full advantage of the E2, and now with the driver being\naware of the greater queue size supported by E2 NICs, it causes the UBSAN\nwarnings seen in the stack traces below.\nThis patch increases the size of the \"stats_query_entry query\" array by\nreplacing FP_SB_MAX_E1x with FP_SB_MAX_E2 to be large enough to handle\nboth types of NICs.\nStack traces:\nUBSAN: array-index-out-of-bounds in\n       drivers/net/ethernet/broadcom/bnx2x/bnx2x_stats.c:1529:11\nindex 20 is out of range for type 'stats_query_entry [19]'\nCPU: 12 PID: 858 Comm: systemd-network Not tainted 6.9.0-060900rc7-generic\n\t     #202405052133\nHardware name: HP ProLiant DL360 Gen9/ProLiant DL360 \n---truncated---",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/0edae06b4c227bcfaf3ce21208d49191e1009d3b"
          },
          {
            "url": "https://git.kernel.org/stable/c/134061163ee5ca4759de5c24ca3bd71608891ba7"
          },
          {
            "url": "https://git.kernel.org/stable/c/8b17cec33892a66bbd71f8d9a70a45e2072ae84f"
          },
          {
            "url": "https://git.kernel.org/stable/c/9504a1550686f53b0bab4cab31d435383b1ee2ce"
          },
          {
            "url": "https://git.kernel.org/stable/c/b9ea38e767459111a511ed4fb74abc37db95a59d"
          },
          {
            "url": "https://git.kernel.org/stable/c/cbe53087026ad929cd3950508397e8892a6a2a0f"
          },
          {
            "url": "https://git.kernel.org/stable/c/cfb04472ce33bee2579caf4dc9f4242522f6e26e"
          },
          {
            "url": "https://git.kernel.org/stable/c/f1313ea92f82451923e28ab45a4aaa0e70e80b98"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42149",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.543",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nfs: don't misleadingly warn during thaw operations\nThe block device may have been frozen before it was claimed by a\nfilesystem. Concurrently another process might try to mount that\nfrozen block device and has temporarily claimed the block device for\nthat purpose causing a concurrent fs_bdev_thaw() to end up here. The\nmounter is already about to abort mounting because they still saw an\nelevanted bdev->bd_fsfreeze_count so get_bdev_super() will return\nNULL in that case.\nFor example, P1 calls dm_suspend() which calls into bdev_freeze() before\nthe block device has been claimed by the filesystem. This brings\nbdev->bd_fsfreeze_count to 1 and no call into fs_bdev_freeze() is\nrequired.\nNow P2 tries to mount that frozen block device. It claims it and checks\nbdev->bd_fsfreeze_count. As it's elevated it aborts mounting.\nIn the meantime P3 called dm_resume(). P3 sees that the block device is\nalready claimed by a filesystem and calls into fs_bdev_thaw().\nP3 takes a passive reference and realizes that the filesystem isn't\nready yet. P3 puts itself to sleep to wait for the filesystem to become\nready.\nP2 now puts the last active reference to the filesystem and marks it as\ndying. P3 gets woken, sees that the filesystem is dying and\nget_bdev_super() fails.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/25b1e3906e050d452427bc51620bb7f0a591373a"
          },
          {
            "url": "https://git.kernel.org/stable/c/2ae4db5647d807efb6a87c09efaa6d1db9c905d7"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42150",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.620",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet: txgbe: remove separate irq request for MSI and INTx\nWhen using MSI or INTx interrupts, request_irq() for pdev->irq will\nconflict with request_threaded_irq() for txgbe->misc.irq, to cause\nsystem crash. So remove txgbe_request_irq() for MSI/INTx case, and\nrename txgbe_request_msix_irqs() since it only request for queue irqs.\nAdd wx->misc_irq_domain to determine whether the driver creates an IRQ\ndomain and threaded request the IRQs.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/850103ebe6b062ee0ab0f6670205f861acc76ace"
          },
          {
            "url": "https://git.kernel.org/stable/c/bd07a98178462e7a02ed2bf7dec90a00944c1da5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42151",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.690",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nbpf: mark bpf_dummy_struct_ops.test_1 parameter as nullable\nTest case dummy_st_ops/dummy_init_ret_value passes NULL as the first\nparameter of the test_1() function. Mark this parameter as nullable to\nmake verifier aware of such possibility.\nOtherwise, NULL check in the test_1() code:\n      SEC(\"struct_ops/test_1\")\n      int BPF_PROG(test_1, struct bpf_dummy_ops_state *state)\n      {\n            if (!state)\n                    return ...;\n            ... access state ...\n      }\nMight be removed by verifier, thus triggering NULL pointer dereference\nunder certain conditions.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1479eaff1f16983d8fda7c5a08a586c21891087d"
          },
          {
            "url": "https://git.kernel.org/stable/c/7f79097b0de97a486b137b750d7dd7b20b519d23"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42152",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.763",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnvmet: fix a possible leak when destroy a ctrl during qp establishment\nIn nvmet_sq_destroy we capture sq->ctrl early and if it is non-NULL we\nknow that a ctrl was allocated (in the admin connect request handler)\nand we need to release pending AERs, clear ctrl->sqs and sq->ctrl\n(for nvme-loop primarily), and drop the final reference on the ctrl.\nHowever, a small window is possible where nvmet_sq_destroy starts (as\na result of the client giving up and disconnecting) concurrently with\nthe nvme admin connect cmd (which may be in an early stage). But *before*\nkill_and_confirm of sq->ref (i.e. the admin connect managed to get an sq\nlive reference). In this case, sq->ctrl was allocated however after it was\ncaptured in a local variable in nvmet_sq_destroy.\nThis prevented the final reference drop on the ctrl.\nSolve this by re-capturing the sq->ctrl after all inflight request has\ncompleted, where for sure sq->ctrl reference is final, and move forward\nbased on that.\nThis issue was observed in an environment with many hosts connecting\nmultiple ctrls simoutanuosly, creating a delay in allocating a ctrl\nleading up to this race window.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/2f3c22b1d3d7e86712253244797a651998c141fa"
          },
          {
            "url": "https://git.kernel.org/stable/c/5502c1f1d0d7472706cc1f201aecf1c935d302d1"
          },
          {
            "url": "https://git.kernel.org/stable/c/818004f2a380420c19872171be716174d4985e33"
          },
          {
            "url": "https://git.kernel.org/stable/c/940a71f08ef153ef807f751310b0648d1fa5d0da"
          },
          {
            "url": "https://git.kernel.org/stable/c/b4fed1443a6571d49c6ffe7d97af3bbe5ee6dff5"
          },
          {
            "url": "https://git.kernel.org/stable/c/c758b77d4a0a0ed3a1292b3fd7a2aeccd1a169a4"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42153",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.847",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ni2c: pnx: Fix potential deadlock warning from del_timer_sync() call in isr\nWhen del_timer_sync() is called in an interrupt context it throws a warning\nbecause of potential deadlock. The timer is used only to exit from\nwait_for_completion() after a timeout so replacing the call with\nwait_for_completion_timeout() allows to remove the problematic timer and\nits related functions altogether.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/27cd3873fa76ebeb9f948baae40cb9a6d8692289"
          },
          {
            "url": "https://git.kernel.org/stable/c/2849a1b747cf37aa5b684527104d3a53f1e296d2"
          },
          {
            "url": "https://git.kernel.org/stable/c/3503372d0bf7b324ec0bd6b90606703991426176"
          },
          {
            "url": "https://git.kernel.org/stable/c/3d32327f5cfc087ee3922a3bcdcc29880dcdb50f"
          },
          {
            "url": "https://git.kernel.org/stable/c/92e494a7568b60ae80d57fc0deafcaf3a4029ab3"
          },
          {
            "url": "https://git.kernel.org/stable/c/a349e5ab4dc9954746e836cd10b407ce48f9b2f6"
          },
          {
            "url": "https://git.kernel.org/stable/c/effe0500afda017a86c94482b1e36bc37586c9af"
          },
          {
            "url": "https://git.kernel.org/stable/c/f63b94be6942ba82c55343e196bd09b53227618e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42154",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:06.933",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ntcp_metrics: validate source addr length\nI don't see anything checking that TCP_METRICS_ATTR_SADDR_IPV4\nis at least 4 bytes long, and the policy doesn't have an entry\nfor this attribute at all (neither does it for IPv6 but v6 is\nmanually validated).",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/19d997b59fa1fd7a02e770ee0881c0652b9c32c9"
          },
          {
            "url": "https://git.kernel.org/stable/c/2a2e79dbe2236a1289412d2044994f7ab419b44c"
          },
          {
            "url": "https://git.kernel.org/stable/c/31f03bb04146c1c6df6c03e9f45401f5f5a985d3"
          },
          {
            "url": "https://git.kernel.org/stable/c/3d550dd5418729a6e77fe7721d27adea7152e321"
          },
          {
            "url": "https://git.kernel.org/stable/c/66be40e622e177316ae81717aa30057ba9e61dff"
          },
          {
            "url": "https://git.kernel.org/stable/c/8c2debdd170e395934ac0e039748576dfde14e99"
          },
          {
            "url": "https://git.kernel.org/stable/c/cdffc358717e436bb67122bb82c1a2a26e050f98"
          },
          {
            "url": "https://git.kernel.org/stable/c/ef7c428b425beeb52b894e16f1c4b629d6cebfb6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42155",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.010",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ns390/pkey: Wipe copies of protected- and secure-keys\nAlthough the clear-key of neither protected- nor secure-keys is\naccessible, this key material should only be visible to the calling\nprocess. So wipe all copies of protected- or secure-keys from stack,\neven in case of an error.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/c746f7ced4ad88ee48d0b6c92710e4674403185b"
          },
          {
            "url": "https://git.kernel.org/stable/c/f2ebdadd85af4f4d0cae1e5d009c70eccc78c207"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42156",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.080",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ns390/pkey: Wipe copies of clear-key structures on failure\nWipe all sensitive data from stack for all IOCTLs, which convert a\nclear-key into a protected- or secure-key.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/7f6243edd901b75aaece326c90a1cc0dcb60cc3d"
          },
          {
            "url": "https://git.kernel.org/stable/c/d65d76a44ffe74c73298ada25b0f578680576073"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42157",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.150",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ns390/pkey: Wipe sensitive data on failure\nWipe sensitive data from stack also if the copy_to_user() fails.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1d8c270de5eb74245d72325d285894a577a945d9"
          },
          {
            "url": "https://git.kernel.org/stable/c/4889f117755b2f18c23045a0f57977f3ec130581"
          },
          {
            "url": "https://git.kernel.org/stable/c/6e2e374403bf73140d0efc9541cb1b3bea55ac02"
          },
          {
            "url": "https://git.kernel.org/stable/c/90a01aefb84b09ccb6024d75d85bb8f620bd3487"
          },
          {
            "url": "https://git.kernel.org/stable/c/93c034c4314bc4c4450a3869cd5da298502346ad"
          },
          {
            "url": "https://git.kernel.org/stable/c/b5eb9176ebd4697bc248bf8d145e66d782cf5250"
          },
          {
            "url": "https://git.kernel.org/stable/c/c44a2151e5d21c66b070a056c26471f30719b575"
          },
          {
            "url": "https://git.kernel.org/stable/c/c51795885c801b6b7e976717e0d6d45b1e5be0f0"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42158",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.227",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ns390/pkey: Use kfree_sensitive() to fix Coccinelle warnings\nReplace memzero_explicit() and kfree() with kfree_sensitive() to fix\nwarnings reported by Coccinelle:\nWARNING opportunity for kfree_sensitive/kvfree_sensitive (line 1506)\nWARNING opportunity for kfree_sensitive/kvfree_sensitive (line 1643)\nWARNING opportunity for kfree_sensitive/kvfree_sensitive (line 1770)",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/22e6824622e8a8889df0f8fc4ed5aea0e702a694"
          },
          {
            "url": "https://git.kernel.org/stable/c/62151a0acde90823bdfa991d598c85cf4b1d387d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42159",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.300",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nscsi: mpi3mr: Sanitise num_phys\nInformation is stored in mr_sas_port->phy_mask, values larger then size of\nthis field shouldn't be allowed.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/3668651def2c1622904e58b0280ee93121f2b10b"
          },
          {
            "url": "https://git.kernel.org/stable/c/586b41060113ae43032ec6c4a16d518cef5da6e0"
          },
          {
            "url": "https://git.kernel.org/stable/c/b869ec89d2ee923d46608b76e54c006680c9b4df"
          },
          {
            "url": "https://git.kernel.org/stable/c/c8707901b53a48106d7501bdbd0350cefaefa4cf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42160",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.370",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nf2fs: check validation of fault attrs in f2fs_build_fault_attr()\n- It missed to check validation of fault attrs in parse_options(),\nlet's fix to add check condition in f2fs_build_fault_attr().\n- Use f2fs_build_fault_attr() in __sbi_store() to clean up code.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/44958ca9e400f57bd0478115519ffc350fcee61e"
          },
          {
            "url": "https://git.kernel.org/stable/c/4ed886b187f47447ad559619c48c086f432d2b77"
          },
          {
            "url": "https://git.kernel.org/stable/c/bc84dd2c33e0c10fd90d60f0cfc0bfb504d4692d"
          },
          {
            "url": "https://git.kernel.org/stable/c/ecb641f424d6d1f055d149a15b892edcc92c504b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42161",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.447",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nbpf: Avoid uninitialized value in BPF_CORE_READ_BITFIELD\n[Changes from V1:\n - Use a default branch in the switch statement to initialize `val'.]\nGCC warns that `val' may be used uninitialized in the\nBPF_CRE_READ_BITFIELD macro, defined in bpf_core_read.h as:\n\t[...]\n\tunsigned long long val;\t\t\t\t\t\t      \\\n\t[...]\t\t\t\t\t\t\t\t      \\\n\tswitch (__CORE_RELO(s, field, BYTE_SIZE)) {\t\t\t      \\\n\tcase 1: val = *(const unsigned char *)p; break;\t\t\t      \\\n\tcase 2: val = *(const unsigned short *)p; break;\t\t      \\\n\tcase 4: val = *(const unsigned int *)p; break;\t\t\t      \\\n\tcase 8: val = *(const unsigned long long *)p; break;\t\t      \\\n        }       \t\t\t\t\t\t\t      \\\n\t[...]\n\tval;\t\t\t\t\t\t\t\t      \\\n\t}\t\t\t\t\t\t\t\t      \\\nThis patch adds a default entry in the switch statement that sets\n`val' to zero in order to avoid the warning, and random values to be\nused in case __builtin_preserve_field_info returns unexpected values\nfor BPF_FIELD_BYTE_SIZE.\nTested in bpf-next master.\nNo regressions.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/009367099eb61a4fc2af44d4eb06b6b4de7de6db"
          },
          {
            "url": "https://git.kernel.org/stable/c/3364c2ed1c241989847f19cf83e3db903ce689e3"
          },
          {
            "url": "https://git.kernel.org/stable/c/7e5471b5efebc30dd0bc035cda86693a5c73d45f"
          },
          {
            "url": "https://git.kernel.org/stable/c/a21d76bd0b0d39518e9a4c19f6cf7c042a974aff"
          },
          {
            "url": "https://git.kernel.org/stable/c/b694989bb13ed5f166e633faa1eb0f21c6d261a6"
          },
          {
            "url": "https://git.kernel.org/stable/c/ff941a8449e712eaf7efca1a13bfb9afd3d99fc2"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42162",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.520",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ngve: Account for stopped queues when reading NIC stats\nWe now account for the fact that the NIC might send us stats for a\nsubset of queues. Without this change, gve_get_ethtool_stats might make\nan invalid access on the priv->stats_report->stats array.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/32675d828c8a392e20d5b42375ed112c407e4b62"
          },
          {
            "url": "https://git.kernel.org/stable/c/af9bcf910b1f86244f39e15e701b2dc564b469a6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42223",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.587",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: dvb-frontends: tda10048: Fix integer overflow\nstate->xtal_hz can be up to 16M, so it can overflow a 32 bit integer\nwhen multiplied by pll_mfactor.\nCreate a new 64 bit variable to hold the calculations.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1121d8a5c6ed6b8fad492e43b63b386cb6a3a9d8"
          },
          {
            "url": "https://git.kernel.org/stable/c/1663e2474e4d777187d749a5c90ae83232db32bd"
          },
          {
            "url": "https://git.kernel.org/stable/c/1aa1329a67cc214c3b7bd2a14d1301a795760b07"
          },
          {
            "url": "https://git.kernel.org/stable/c/5c72587d024f087aecec0221eaff2fe850d856ce"
          },
          {
            "url": "https://git.kernel.org/stable/c/8167e4d7dc086d4f7ca7897dcff3827e4d22c99a"
          },
          {
            "url": "https://git.kernel.org/stable/c/8ac224e9371dc3c4eb666033e6b42d05cf5184a1"
          },
          {
            "url": "https://git.kernel.org/stable/c/bd5620439959a7e02012588c724c6ff5143b80af"
          },
          {
            "url": "https://git.kernel.org/stable/c/e1ba22618758e95e09c9fd30c69ccce38edf94c0"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42224",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.667",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet: dsa: mv88e6xxx: Correct check for empty list\nSince commit a3c53be55c95 (\"net: dsa: mv88e6xxx: Support multiple MDIO\nbusses\") mv88e6xxx_default_mdio_bus() has checked that the\nreturn value of list_first_entry() is non-NULL.\nThis appears to be intended to guard against the list chip->mdios being\nempty.  However, it is not the correct check as the implementation of\nlist_first_entry is not designed to return NULL for empty lists.\nInstead, use list_first_entry_or_null() which does return NULL if the\nlist is empty.\nFlagged by Smatch.\nCompile tested only.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/2a2fe25a103cef73cde356e6d09da10f607e93f5"
          },
          {
            "url": "https://git.kernel.org/stable/c/3bf8d70e1455f87856640c3433b3660a31001618"
          },
          {
            "url": "https://git.kernel.org/stable/c/3f25b5f1635449036692a44b771f39f772190c1d"
          },
          {
            "url": "https://git.kernel.org/stable/c/47d28dde172696031c880c5778633cdca30394ee"
          },
          {
            "url": "https://git.kernel.org/stable/c/4c7f3950a9fd53a62b156c0fe7c3a2c43b0ba19b"
          },
          {
            "url": "https://git.kernel.org/stable/c/8c2c3cca816d074c75a2801d1ca0dea7b0148114"
          },
          {
            "url": "https://git.kernel.org/stable/c/aa03f591ef31ba603a4a99d05d25a0f21ab1cd89"
          },
          {
            "url": "https://git.kernel.org/stable/c/f75625db838ade28f032dacd0f0c8baca42ecde4"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42225",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.747",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: mt76: replace skb_put with skb_put_zero\nAvoid potentially reusing uninitialized data",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/22ea2a7f0b64d323625950414a4496520fb33657"
          },
          {
            "url": "https://git.kernel.org/stable/c/64f86337ccfe77fe3be5a9356b0dabde23fbb074"
          },
          {
            "url": "https://git.kernel.org/stable/c/7f819a2f4fbc510e088b49c79addcf1734503578"
          },
          {
            "url": "https://git.kernel.org/stable/c/dc7f14d00d0c4c21898f3504607f4a31079065a2"
          },
          {
            "url": "https://git.kernel.org/stable/c/ff6b26be13032c5fbd6b6a0b24358f8eaac4f3af"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42226",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.817",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nusb: xhci: prevent potential failure in handle_tx_event() for Transfer events without TRB\nSome transfer events don't always point to a TRB, and consequently don't\nhave a endpoint ring. In these cases, function handle_tx_event() should\nnot proceed, because if 'ep->skip' is set, the pointer to the endpoint\nring is used.\nTo prevent a potential failure and make the code logical, return after\nchecking the completion code for a Transfer event without TRBs.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/1f4a10cb826fdec5cd442df010bcb3043bfd6464"
          },
          {
            "url": "https://git.kernel.org/stable/c/66cb618bf0bb82859875b00eeffaf223557cb416"
          },
          {
            "url": "https://git.kernel.org/stable/c/69bed24c82139bbad0a78a075e1834a2ea7bd064"
          },
          {
            "url": "https://git.kernel.org/stable/c/948554f1bb16e15b90006c109c3a558c66d4c4ac"
          },
          {
            "url": "https://git.kernel.org/stable/c/9a24eb8010c2dc6a2eba56e3eb9fc07d14ffe00a"
          },
          {
            "url": "https://git.kernel.org/stable/c/c0ee01e8ba19ff7edc98f68a114d4789faa219b9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42227",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.890",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amd/display: Fix overlapping copy within dml_core_mode_programming\n[WHY]\n&mode_lib->mp.Watermark and &locals->Watermark are\nthe same address. memcpy may lead to unexpected behavior.\n[HOW]\nmemmove should be used.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/9342da15f2491d8600eca89c8e0da08876fb969b"
          },
          {
            "url": "https://git.kernel.org/stable/c/f1fd8a0a54e6d23a6d16ee29159f247862460fd1"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42228",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:07.960",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/amdgpu: Using uninitialized value *size when calling amdgpu_vce_cs_reloc\nInitialize the size before calling amdgpu_vce_cs_reloc, such as case 0x03000001.\nV2: To really improve the handling we would actually\n   need to have a separate value of 0xffffffff.(Christian)",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/855ae72c20310e5402b2317fc537d911e87537ef"
          },
          {
            "url": "https://git.kernel.org/stable/c/88a9a467c548d0b3c7761b4fd54a68e70f9c0944"
          },
          {
            "url": "https://git.kernel.org/stable/c/f8f120b3de48b8b6bdf8988a9b334c2d61c17440"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42229",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:08.070",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\ncrypto: aead,cipher - zeroize key buffer after use\nI.G 9.7.B for FIPS 140-3 specifies that variables temporarily holding\ncryptographic information should be zeroized once they are no longer\nneeded. Accomplish this by using kfree_sensitive for buffers that\npreviously held the private key.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/23e4099bdc3c8381992f9eb975c79196d6755210"
          },
          {
            "url": "https://git.kernel.org/stable/c/28c8d274848feba552e95c5c2a7e3cfe8f15c534"
          },
          {
            "url": "https://git.kernel.org/stable/c/71dd428615375e36523f4d4f7685ddd54113646d"
          },
          {
            "url": "https://git.kernel.org/stable/c/9db8c299a521813630fcb4154298cb60c37f3133"
          },
          {
            "url": "https://git.kernel.org/stable/c/b502d4a08875ea2b4ea5d5b28dc7c991c8b90cfb"
          },
          {
            "url": "https://git.kernel.org/stable/c/f58679996a831754a356974376f248aa0af2eb8e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42230",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:08.193",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\npowerpc/pseries: Fix scv instruction crash with kexec\nkexec on pseries disables AIL (reloc_on_exc), required for scv\ninstruction support, before other CPUs have been shut down. This means\nthey can execute scv instructions after AIL is disabled, which causes an\ninterrupt at an unexpected entry location that crashes the kernel.\nChange the kexec sequence to disable AIL after other CPUs have been\nbrought down.\nAs a refresher, the real-mode scv interrupt vector is 0x17000, and the\nfixed-location head code probably couldn't easily deal with implementing\nsuch high addresses so it was just decided not to support that interrupt\nat all.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/21a741eb75f80397e5f7d3739e24d7d75e619011"
          },
          {
            "url": "https://git.kernel.org/stable/c/8c6506616386ce37e59b2745fc481c6713fae4f3"
          },
          {
            "url": "https://git.kernel.org/stable/c/c550679d604798d9fed8a5b2bb5693448a25407c"
          },
          {
            "url": "https://git.kernel.org/stable/c/d10e3c39001e9194b9a1bfd6979bd3fa19dccdc5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42231",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-07-30T08:15:08.307",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: zoned: fix calc_available_free_space() for zoned mode\ncalc_available_free_space() returns the total size of metadata (or\nsystem) block groups, which can be allocated from unallocated disk\nspace. The logic is wrong on zoned mode in two places.\nFirst, the calculation of data_chunk_size is wrong. We always allocate\none zone as one chunk, and no partial allocation of a zone. So, we\nshould use zone_size (= data_sinfo->chunk_size) as it is.\nSecond, the result \"avail\" may not be zone aligned. Since we always\nallocate one zone as one chunk on zoned mode, returning non-zone size\naligned bytes will result in less pressure on the async metadata reclaim\nprocess.\nThis is serious for the nearly full state with a large zone size device.\nAllowing over-commit too much will result in less async reclaim work and\nend up in ENOSPC. We can align down to the zone size to avoid that.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/64d2c847ba380e07b9072d65a50aa6469d2aa43f"
          },
          {
            "url": "https://git.kernel.org/stable/c/8548903b1999bba02a2b894ad750ab8eb1f40307"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7223",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-07-30T08:15:08.373",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "A vulnerability has been found in SourceCodester Lot Reservation Management System 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file /view_model.php. The manipulation of the argument id leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-272803.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://gist.github.com/topsky979/4c28743586769e73fe37007ed92cc1a7"
          },
          {
            "url": "https://vuldb.com/?ctiid.272803"
          },
          {
            "url": "https://vuldb.com/?id.272803"
          },
          {
            "url": "https://vuldb.com/?submit.380470"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7224",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-07-30T08:15:08.653",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "A vulnerability was found in SourceCodester Lot Reservation Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file /lot_details.php. The manipulation of the argument id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-272804.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://gist.github.com/topsky979/76bc2c8ce4871ad8bb60c52e47c4fb5b"
          },
          {
            "url": "https://vuldb.com/?ctiid.272804"
          },
          {
            "url": "https://vuldb.com/?id.272804"
          },
          {
            "url": "https://vuldb.com/?submit.380471"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-48396",
        "sourceIdentifier": "security@apache.org",
        "published": "2024-07-30T09:15:02.540",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Web Authentication vulnerability in Apache SeaTunnel. Since the jwt key is hardcoded in the application, an attacker can forge\nany token to log in any user.\nAttacker can get secret key in /seatunnel-server/seatunnel-app/src/main/resources/application.yml and then create a token.\nThis issue affects Apache SeaTunnel: 1.0.0.\nUsers are recommended to upgrade to version 1.0.1, which fixes the issue.",
        "cweIds": [
          {
            "id": "CWE-290",
            "description": "Authentication Bypass by Spoofing"
          }
        ],
        "references": [
          {
            "url": "http://www.openwall.com/lists/oss-security/2024/07/30/1"
          },
          {
            "url": "https://lists.apache.org/thread/1tdxfjksx0vb9gtyt77wlr6rdcy1qwmw"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38429",
        "sourceIdentifier": "cna@cyber.gov.il",
        "published": "2024-07-30T09:15:02.977",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Matrix Tafnit v8\n -  CWE-552: Files or Directories Accessible to External Parties",
        "cweIds": [
          {
            "id": "CWE-552",
            "description": "Files or Directories Accessible to External Parties"
          }
        ],
        "references": [
          {
            "url": "https://www.gov.il/en/Departments/faq/cve_advisories"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38430",
        "sourceIdentifier": "cna@cyber.gov.il",
        "published": "2024-07-30T09:15:03.257",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 2.7,
        "description": "Matrix - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://www.gov.il/en/Departments/faq/cve_advisories"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38431",
        "sourceIdentifier": "cna@cyber.gov.il",
        "published": "2024-07-30T09:15:03.510",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Matrix Tafnit v8\n - \nCWE-204: Observable Response Discrepancy",
        "cweIds": [
          {
            "id": "CWE-204",
            "description": "Observable Response Discrepancy"
          }
        ],
        "references": [
          {
            "url": "https://www.gov.il/en/Departments/faq/cve_advisories"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38432",
        "sourceIdentifier": "cna@cyber.gov.il",
        "published": "2024-07-30T09:15:03.750",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 5.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.3,
        "impactScore": 3.7,
        "description": "Matrix Tafnit v8\n - \nCWE-646: Reliance on File Name or Extension of Externally-Supplied File",
        "cweIds": [
          {
            "id": "CWE-646",
            "description": "Reliance on File Name or Extension of Externally-Supplied File"
          }
        ],
        "references": [
          {
            "url": "https://www.gov.il/en/Departments/faq/cve_advisories"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40895",
        "sourceIdentifier": "vultures@jpcert.or.jp",
        "published": "2024-07-30T09:15:03.987",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "FFRI AMC versions 3.4.0 to 3.5.3 and some OEM products that implement/bundle FFRI AMC versions 3.4.0 to 3.5.3 allow a remote unauthenticated attacker to execute arbitrary OS commands when certain conditions are met in an environment where the notification program setting is enabled and the executable file path is set to a batch file (.bat) or command file (.cmd) extension.",
        "cweIds": null,
        "references": [
          {
            "url": "https://jvn.jp/en/jp/JVN26734798/"
          },
          {
            "url": "https://www.ffri.jp/assets/files/other_docs/20240729.pdf"
          },
          {
            "url": "https://www.skyseaclientview.net/news/240729_01/"
          },
          {
            "url": "https://www.support.nec.co.jp/View.aspx?id=3140109694"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41141",
        "sourceIdentifier": "vultures@jpcert.or.jp",
        "published": "2024-07-30T09:15:04.070",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Stored cross-site scripting vulnerability exists in EC-CUBE Web API Plugin. When there are multiple users using OAuth Management feature and one of them inputs some crafted value on the OAuth Management page, an arbitrary script may be executed on the web browser of the other user who accessed the management page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://jvn.jp/en/jp/JVN26225832/"
          },
          {
            "url": "https://www.ec-cube.net/info/weakness/20240701/web_api_plugin.php"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41693",
        "sourceIdentifier": "cna@cyber.gov.il",
        "published": "2024-07-30T09:15:04.140",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "Mashov - CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "cweIds": [
          {
            "id": "CWE-80",
            "description": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)"
          }
        ],
        "references": [
          {
            "url": "https://www.gov.il/en/Departments/faq/cve_advisories"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41694",
        "sourceIdentifier": "cna@cyber.gov.il",
        "published": "2024-07-30T09:15:04.380",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Cybonet - CWE-200: Exposure of Sensitive Information to an Unauthorized Actor",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://www.gov.il/en/Departments/faq/cve_advisories"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41695",
        "sourceIdentifier": "cna@cyber.gov.il",
        "published": "2024-07-30T09:15:04.683",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Cybonet - CWE-22: Improper Limitation of a Pathname to a Restricted Directory",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://www.gov.il/en/Departments/faq/cve_advisories"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41696",
        "sourceIdentifier": "cna@cyber.gov.il",
        "published": "2024-07-30T09:15:04.927",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Priority \nPRI WEB Portal Add-On for Priority ERP on prem\n- CWE-200: Exposure of Sensitive Information to an Unauthorized Actor",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://www.gov.il/en/Departments/faq/cve_advisories"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41924",
        "sourceIdentifier": "vultures@jpcert.or.jp",
        "published": "2024-07-30T09:15:05.203",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Acceptance of extraneous untrusted data with trusted data vulnerability exists in EC-CUBE 4 series. If this vulnerability is exploited, an attacker who obtained the administrative privilege may install an arbitrary PHP package. If the obsolete versions of PHP packages are installed, the product may be affected by some known vulnerabilities.",
        "cweIds": null,
        "references": [
          {
            "url": "https://jvn.jp/en/jp/JVN48324254/"
          },
          {
            "url": "https://www.ec-cube.net/info/weakness/20240701/index.php"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7225",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-07-30T09:15:05.287",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 3.5,
        "baseSeverity": "LOW",
        "exploitabilityScore": 2.1,
        "impactScore": 1.4,
        "description": "A vulnerability was found in SourceCodester Insurance Management System 1.0. It has been classified as problematic. This affects an unknown part of the file /Script/admin/core/update_policy of the component Edit Insurance Policy Page. The manipulation of the argument pname leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-272805 was assigned to this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Xu-Mingming/cve/blob/main/xss2.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.272805"
          },
          {
            "url": "https://vuldb.com/?id.272805"
          },
          {
            "url": "https://vuldb.com/?submit.380967"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7226",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-07-30T09:15:05.597",
        "lastModified": "2024-07-30T13:32:45.943",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "A vulnerability was found in SourceCodester Medicine Tracker System 1.0. It has been declared as problematic. This vulnerability affects unknown code of the file /classes/Users.php?f=save_user of the component Password Change Handler. The manipulation leads to cross-site request forgery. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-272806 is the identifier assigned to this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Xu-Mingming/cve/blob/main/CSRF2.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.272806"
          },
          {
            "url": "https://vuldb.com/?id.272806"
          },
          {
            "url": "https://vuldb.com/?submit.380981"
          }
        ]
      }
    }
  ]
}