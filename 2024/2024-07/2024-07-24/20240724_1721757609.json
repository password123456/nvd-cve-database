{
  "totalResults": 5,
  "datePublished": "2024-07-24T03:00:09.394175Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-39702",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-07-23T16:15:05.557",
        "lastModified": "2024-07-23T16:15:05.557",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In lj_str_hash.c in OpenResty 1.19.3.1 through 1.25.3.1, the string hashing function (used during string interning) allows HashDoS (Hash Denial of Service) attacks. An attacker could cause excessive resource usage during proxy operations via crafted requests, potentially leading to a denial of service with relatively few incoming requests. This vulnerability only exists in the OpenResty fork in the openresty/luajit2 GitHub repository. The LuaJIT/LuaJIT epository. is unaffected/",
        "cweIds": null,
        "references": [
          {
            "url": "https://openresty.org/en/ann-1025003002.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41663",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-23T16:15:06.070",
        "lastModified": "2024-07-23T16:15:06.070",
        "baseScore": 3.5,
        "baseSeverity": "LOW",
        "exploitabilityScore": 2.1,
        "impactScore": 1.4,
        "description": "Canarytokens help track activity and actions on a network.  A Cross-Site Scripting vulnerability was identified in the \"Cloned Website\" Canarytoken, whereby the Canarytoken's creator can attack themselves. The creator of a slow-redirect Canarytoken can insert Javascript into the destination URL of their slow redirect token. When the creator later browses the management page for their own Canarytoken, the Javascript executes. This is a self-XSS. An attacker could create a Canarytoken with this self-XSS, and send the management link to a victim. When they click on it, the Javascript would execute. However, no sensitive information (ex. session information) will be disclosed to the malicious actor. This issue is now patched on Canarytokens.org. Users of self-hosted Canarytokens installations can update by pulling the latest Docker image, or any Docker image after `sha-097d91a`.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/thinkst/canarytokens/security/advisories/GHSA-xj9h-3j9c-c95h"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6714",
        "sourceIdentifier": "security@ubuntu.com",
        "published": "2024-07-23T16:15:06.543",
        "lastModified": "2024-07-23T16:15:06.543",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.0,
        "impactScore": 6.0,
        "description": "An issue was discovered in provd before version 0.1.5 with a setuid binary, which allows a local attacker to escalate their privilege.",
        "cweIds": [
          {
            "id": "CWE-73",
            "description": "External Control of File Name or Path"
          }
        ],
        "references": [
          {
            "url": "https://bugs.launchpad.net/ubuntu/+source/provd/+bug/2071574"
          },
          {
            "url": "https://github.com/canonical/ubuntu-desktop-provision/commit/8d9086de0f82894ff27a9e429ff4f45231020092"
          },
          {
            "url": "https://www.cve.org/CVERecord?id=CVE-2024-6714"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41178",
        "sourceIdentifier": "security@apache.org",
        "published": "2024-07-23T17:15:12.663",
        "lastModified": "2024-07-23T19:15:13.377",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Exposure of temporary credentials in logs in Apache Arrow Rust Object Store (`object_store` crate), version 0.10.1 and earlier on all platforms using AWS WebIdentityTokens. \nOn certain error conditions, the logs may contain the OIDC token passed to  AssumeRoleWithWebIdentity https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html . This allows someone with access to the logs to impersonate that identity, including performing their own calls to AssumeRoleWithWebIdentity, until the OIDC token expires. Typically OIDC tokens are valid for up to an hour, although this will vary depending on the issuer.\nUsers are recommended to use a different AWS authentication mechanism, disable logging or upgrade to version 0.10.2, which fixes this issue.\nDetails:\nWhen using AWS WebIdentityTokens with the object_store crate, in the event of a failure and automatic retry, the underlying reqwest error, including the full URL with the credentials, potentially in the parameters, is written to the logs. \nThanks to Paul Hatcherian for reporting this vulnerability",
        "cweIds": [
          {
            "id": "CWE-532",
            "description": "Insertion of Sensitive Information into Log File"
          }
        ],
        "references": [
          {
            "url": "http://www.openwall.com/lists/oss-security/2024/07/23/3"
          },
          {
            "url": "https://lists.apache.org/thread/3t0povdppnt2czv6crlsqhvyko93kcrg"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41664",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-23T17:15:12.767",
        "lastModified": "2024-07-23T17:15:12.767",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "Canarytokens help track activity and actions on a network. Prior to `sha-8ea5315`, Canarytokens.org was vulnerable to a blind SSRF in the Webhook alert feature. When a Canarytoken is created, users choose to receive alerts either via email or via a webhook. If a webhook is supplied when a  Canarytoken is first created, the site will make a test request to the supplied URL to ensure it accepts alert notification HTTP requests. No safety checks were performed on the URL, leading to a Server-Side Request Forgery vulnerability. The SSRF is Blind because the content of the response is not displayed to the creating user; they are simply told whether an error occurred in making the test request. Using the Blind SSRF, it was possible to map out open ports for IPs inside the Canarytokens.org infrastructure. This issue is now patched on Canarytokens.org. Users of self-hosted Canarytokens installations can update by pulling the latest Docker image, or any Docker image after `sha-097d91a`.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/thinkst/canarytokens/security/advisories/GHSA-g6h5-pf7p-qmvj"
          }
        ]
      }
    }
  ]
}