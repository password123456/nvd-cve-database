{
  "totalResults": 8,
  "datePublished": "2024-07-24T19:00:05.608495Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2023-32471",
        "sourceIdentifier": "security_alert@emc.com",
        "published": "2024-07-24T08:15:02.393",
        "lastModified": "2024-07-24T12:55:13.223",
        "baseScore": 6.0,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.5,
        "impactScore": 4.0,
        "description": "Dell Edge Gateway BIOS, versions 3200 and 5200, contains an out-of-bounds read vulnerability. A local authenticated malicious user with high privileges could potentially exploit this vulnerability to read contents of stack memory and use this information for further exploits.",
        "cweIds": [
          {
            "id": "CWE-125",
            "description": "Out-of-bounds Read"
          }
        ],
        "references": [
          {
            "url": "https://www.dell.com/support/kbdoc/en-us/000214917/dsa-2023-225-security-update-for-dell-bios-edge-gateway-5200-and-edge-gateway-3200"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-48362",
        "sourceIdentifier": "security@apache.org",
        "published": "2024-07-24T08:15:02.627",
        "lastModified": "2024-07-24T14:15:05.180",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "XXE in the XML Format Plugin in Apache Drill version 1.19.0 and greater allows a user to read any file on a remote file system or execute commands via a malicious XML file.\nUsers are recommended to upgrade to version 1.21.2, which fixes this issue.",
        "cweIds": [
          {
            "id": "CWE-611",
            "description": "Improper Restriction of XML External Entity Reference"
          }
        ],
        "references": [
          {
            "url": "http://www.openwall.com/lists/oss-security/2024/07/24/3"
          },
          {
            "url": "https://lists.apache.org/thread/9tt0q4bdjwgw0dz0l9knqxjnpb5y6zsl"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-39676",
        "sourceIdentifier": "security@apache.org",
        "published": "2024-07-24T08:15:02.773",
        "lastModified": "2024-07-24T12:55:13.223",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Pinot.\nThis issue affects Apache Pinot: from 0.1 before 1.0.0.\nUsers are recommended to upgrade to version 1.0.0 and configure RBAC, which fixes the issue.\nDetails: \nWhen using a request to path “/appconfigs” to the controller, it can lead to the disclosure of sensitive information such as system information (e.g. arch, os version), environment information (e.g. maxHeapSize) and Pinot configurations (e.g. zookeeper path). This issue was addressed by the  Role-based Access Control https://docs.pinot.apache.org/operators/tutorials/authentication/basic-auth-access-control , so that /appConfigs` and all other APIs can be access controlled. Only authorized users have access to it. Note the user needs to add the admin role accordingly to the RBAC guide to control access to this endpoint, and in the future version of Pinot, a default admin role is planned to be added.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://lists.apache.org/thread/hsm0b2w8qr0sqy4rj1mfnnw286tslpzc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3297",
        "sourceIdentifier": "cve-requests@bitdefender.com",
        "published": "2024-07-24T08:15:02.880",
        "lastModified": "2024-07-24T12:55:13.223",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "An issue in the Certificate Authenticated Session Establishment (CASE) protocol for establishing secure sessions between two devices, as implemented in the Matter protocol versions before Matter 1.1 allows an attacker to replay manipulated CASE Sigma1 messages to make the device unresponsive until the device is power-cycled.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://www.bitdefender.com/support/security-advisories/session-establishment-lock-up-during-replay-of-case-sigma1-messages/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3454",
        "sourceIdentifier": "cve-requests@bitdefender.com",
        "published": "2024-07-24T08:15:03.123",
        "lastModified": "2024-07-24T12:55:13.223",
        "baseScore": 3.5,
        "baseSeverity": "LOW",
        "exploitabilityScore": 2.1,
        "impactScore": 1.4,
        "description": "An implementation issue in the Connectivity Standards Alliance Matter 1.2 protocol as used in the connectedhomeip SDK allows a third party to disclose information about devices part of the same fabric (footprinting), even though the protocol is designed to prevent access to such information.",
        "cweIds": [
          {
            "id": "CWE-209",
            "description": "Generation of Error Message Containing Sensitive Information"
          }
        ],
        "references": [
          {
            "url": "https://www.bitdefender.com/support/security-advisories/in-fabric-matter-cluster-attribute-disclosure/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6197",
        "sourceIdentifier": "2499f714-1537-4658-8207-48ae4bb9eae9",
        "published": "2024-07-24T08:15:03.340",
        "lastModified": "2024-07-24T12:55:13.223",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "libcurl's ASN1 parser has this utf8asn1str() function used for parsing an ASN.1 UTF-8 string. Itcan detect an invalid field and return error. Unfortunately, when doing so it also invokes `free()` on a 4 byte localstack buffer.  Most modern malloc implementations detect this error and immediately abort. Some however accept the input pointer and add that memory to its list of available chunks. This leads to the overwriting of nearby stack memory. The content of the overwrite is decided by the `free()` implementation; likely to be memory pointers and a set of flags.  The most likely outcome of exploting this flaw is a crash, although it cannot be ruled out that more serious results can be had in special circumstances.",
        "cweIds": null,
        "references": [
          {
            "url": "http://www.openwall.com/lists/oss-security/2024/07/24/1"
          },
          {
            "url": "https://curl.se/docs/CVE-2024-6197.html"
          },
          {
            "url": "https://curl.se/docs/CVE-2024-6197.json"
          },
          {
            "url": "https://hackerone.com/reports/2559516"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6874",
        "sourceIdentifier": "2499f714-1537-4658-8207-48ae4bb9eae9",
        "published": "2024-07-24T08:15:03.413",
        "lastModified": "2024-07-24T12:55:13.223",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "libcurl's URL API function\n[curl_url_get()](https://curl.se/libcurl/c/curl_url_get.html) offers punycode\nconversions, to and from IDN. Asking to convert a name that is exactly 256\nbytes, libcurl ends up reading outside of a stack based buffer when built to\nuse the *macidn* IDN backend. The conversion function then fills up the\nprovided buffer exactly - but does not null terminate the string.\nThis flaw can lead to stack contents accidently getting returned as part of\nthe converted string.",
        "cweIds": null,
        "references": [
          {
            "url": "http://www.openwall.com/lists/oss-security/2024/07/24/2"
          },
          {
            "url": "https://curl.se/docs/CVE-2024-6874.html"
          },
          {
            "url": "https://curl.se/docs/CVE-2024-6874.json"
          },
          {
            "url": "https://hackerone.com/reports/2604391"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6930",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-24T08:15:03.477",
        "lastModified": "2024-07-24T12:55:13.223",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The WP Booking Calendar plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'type' attribute within the plugin's bookingform shortcode in all versions up to, and including, 10.2.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/booking/trunk/core/lib/wpdev-booking-class.php#L849"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3123628/"
          },
          {
            "url": "https://wordpress.org/plugins/booking/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2aaca776-03ce-43bb-9553-f455f57124a3?source=cve"
          }
        ]
      }
    }
  ]
}