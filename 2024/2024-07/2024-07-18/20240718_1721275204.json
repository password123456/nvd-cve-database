{
  "totalResults": 6,
  "datePublished": "2024-07-18T13:00:04.581348Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-5726",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-18T02:15:02.613",
        "lastModified": "2024-07-18T12:28:43.707",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The Timeline Event History plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 3.1 via deserialization of untrusted input 'timelines-data' parameter. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/timeline-event-history/trunk/includes/admin/timeline-wp-build.php#L5"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/timeline-event-history/trunk/includes/public/templates/style-another/index.php#L5"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/timeline-event-history/trunk/includes/public/templates/style-one/index.php#L7"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/107afaa6-6c0b-43fb-9713-ebc4f1189ea6?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5964",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-18T02:15:02.830",
        "lastModified": "2024-07-18T12:28:43.707",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Zenon Lite theme for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘url’ parameter within the theme's Button shortcode in all versions up to, and including, 1.9 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": null,
        "references": [
          {
            "url": "https://themes.trac.wordpress.org/browser/zenon-lite/1.9/lib/includes/shortcodes.php#L138"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/7e9b004a-2050-47e8-ac4d-491b715c87d2?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6175",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-18T02:15:03.010",
        "lastModified": "2024-07-18T12:28:43.707",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "The Booking Ultra Pro Appointments Booking Calendar Plugin plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the multiple functions in all versions up to, and including, 1.1.13. This makes it possible for authenticated attackers, with Subscriber-level access and above, to modify and delete. multiple plugin options and data such as payments, pricing, booking information, business hours, calendars, profile information, and email templates.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wordpress.org/plugins/booking-ultra-pro/#description"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0594ed62-0a41-4819-89b8-ea31afbcac73?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6599",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-18T02:15:03.190",
        "lastModified": "2024-07-18T12:28:43.707",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Meks Video Importer plugin for WordPress is vulnerable to unauthorized API key modification due to a missing capability check on the ajax_save_settings function in all versions up to, and including, 1.0.11. This makes it possible for authenticated attackers, with Subscriber-level access and above, to modify the plugin's API keys",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/meks-video-importer/trunk/includes/class.meks-video-importer-vimeo.php#L74"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/meks-video-importer/trunk/includes/class.meks-video-importer-youtube.php#L98"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/eaf9cc48-1ba6-4e9b-9f49-54f7747c26e0?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6705",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-18T02:15:03.380",
        "lastModified": "2024-07-18T12:28:43.707",
        "baseScore": 5.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 2.7,
        "description": "The RegLevel plugin for WordPress is vulnerable to Stored Cross-Site Scripting via admin settings in all versions up to, and including, 1.2.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/reglevel/trunk/includes/admin.php#L73"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/reglevel/trunk/includes/functions.php#L11"
          },
          {
            "url": "https://wordpress.org/plugins/reglevel/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/b6ead872-76a7-49c3-af07-d87a4c68183f?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-6708",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-18T03:15:02.373",
        "lastModified": "2024-07-18T12:28:43.707",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 2.7,
        "description": "The SVG Support plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the SVG upload feature in all versions up to, and including, 2.5.5 due to insufficient input sanitization and output escaping, even when the 'Sanitize SVG while uploading' feature is enabled. This makes it possible for authenticated attackers, with author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. Note that successful exploitation of this vulnerability requires the administrator to allow author-level users to upload SVG files.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/svg-support/trunk/functions/attachment.php#L235"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/svg-support/trunk/svg-support.php#L110"
          },
          {
            "url": "https://wordpress.org/plugins/svg-support/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/72bcfd2a-6803-4073-8fa9-62bcf0a10571?source=cve"
          }
        ]
      }
    }
  ]
}