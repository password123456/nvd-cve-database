{
  "totalResults": 8,
  "datePublished": "2024-07-18T05:00:07.186335Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2023-42010",
        "sourceIdentifier": "psirt@us.ibm.com",
        "published": "2024-07-17T18:15:03.400",
        "lastModified": "2024-07-17T18:15:03.400",
        "baseScore": 3.1,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.6,
        "impactScore": 1.4,
        "description": "IBM Sterling B2B Integrator Standard Edition 6.0.0.0 through 6.1.2.5 and 6.2.0.0 through 6.2.0.2 could disclose sensitive information in the HTTP response using man in the middle techniques.  IBM X-Force ID:  265507.",
        "cweIds": [
          {
            "id": "CWE-497",
            "description": "Exposure of Sensitive System Information to an Unauthorized Control Sphere"
          }
        ],
        "references": [
          {
            "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/265507"
          },
          {
            "url": "https://www.ibm.com/support/pages/node/7160433"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38447",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-07-17T18:15:03.990",
        "lastModified": "2024-07-17T18:15:03.990",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "NATO NCI ANET 3.4.1 allows Insecure Direct Object Reference via a modified ID field in a request for a private draft report (that belongs to an arbitrary user).",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.linkedin.com/pulse/idors-ncia-anet-v341-visionspace-technologies-hepxe"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40633",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-17T18:15:04.107",
        "lastModified": "2024-07-17T18:15:04.107",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Sylius is an Open Source eCommerce Framework on Symfony. A security vulnerability was discovered in the `/api/v2/shop/adjustments/{id}` endpoint, which retrieves order adjustments based on incremental integer IDs. The vulnerability allows an attacker to enumerate valid adjustment IDs and retrieve order tokens. Using these tokens, an attacker can access guest customer order details - sensitive guest customer information.  The issue is fixed in versions: 1.12.19, 1.13.4 and above. The `/api/v2/shop/adjustments/{id}` will always return `404` status. Users are advised to upgrade. Users unable to upgrade may alter their config to mitigate this issue. Please see the linked GHSA for details.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40636",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-17T18:15:04.343",
        "lastModified": "2024-07-17T18:15:04.343",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Steeltoe is an open source project that provides a collection of libraries that helps users build production-grade cloud-native applications using externalized configuration, service discovery, distributed tracing, application management, and more. When utilizing multiple Eureka server service URLs with basic auth and encountering an issue with fetching the service registry, an error is logged with the Eureka server service URLs but only the first URL is masked. The code in question is  `_logger.LogError(e, \"FetchRegistry Failed for Eureka service urls: {EurekaServerServiceUrls}\", new Uri(ClientConfig.EurekaServerServiceUrls).ToMaskedString());` in the `DiscoveryClient.cs` file which may leak credentials into logs. This issue has been addressed in version 3.2.8 of the Steeltoe.Discovery.Eureka nuget package.",
        "cweIds": [
          {
            "id": "CWE-532",
            "description": "Insertion of Sensitive Information into Log File"
          }
        ],
        "references": [
          {
            "url": "https://github.com/SteeltoeOSS/security-advisories/security/advisories/GHSA-vmcp-66r5-3pcp"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40640",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-17T18:15:04.787",
        "lastModified": "2024-07-17T18:15:04.787",
        "baseScore": 2.9,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.4,
        "impactScore": 1.4,
        "description": "vodozemac is an open source implementation of Olm and Megolm in pure Rust.  Versions before 0.7.0 of vodozemac use a non-constant time base64 implementation for importing key material for Megolm group sessions and `PkDecryption` Ed25519 secret keys. This flaw might allow an attacker to infer some information about the secret key material through a side-channel attack. The use of a non-constant time base64 implementation might allow an attacker to observe timing variations in the encoding and decoding operations of the secret key material. This could potentially provide insights into the underlying secret key material. The impact of this vulnerability is considered low because exploiting the attacker is required to have access to high precision timing measurements, as well as repeated access to the base64 encoding or decoding processes.  Additionally, the estimated leakage amount is bounded and low according to the referenced paper. This has been patched in commit 734b6c6948d4b2bdee3dd8b4efa591d93a61d272 which has been included in release version 0.7.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-208",
            "description": "Observable Timing Discrepancy"
          }
        ],
        "references": [
          {
            "url": "https://arxiv.org/abs/2108.04600"
          },
          {
            "url": "https://github.com/matrix-org/vodozemac/commit/734b6c6948d4b2bdee3dd8b4efa591d93a61d272"
          },
          {
            "url": "https://github.com/matrix-org/vodozemac/security/advisories/GHSA-j8cm-g7r6-hfpq"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40641",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-17T18:15:05.020",
        "lastModified": "2024-07-17T18:15:05.020",
        "baseScore": 7.4,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.0,
        "impactScore": 5.8,
        "description": "Nuclei is a fast and customizable vulnerability scanner based on simple YAML based DSL.  In affected versions it a way to execute code template without -code option and signature has been discovered. Some web applications inherit from Nuclei and allow users to edit and execute workflow files. In this case, users can execute arbitrary commands. (Although, as far as I know, most web applications use -t to execute). This issue has been addressed in version 3.3.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-c3q9-c27p-cw9h"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-28796",
        "sourceIdentifier": "psirt@us.ibm.com",
        "published": "2024-07-17T19:15:10.937",
        "lastModified": "2024-07-17T19:15:10.937",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "IBM ClearQuest (CQ) 9.1 through 9.1.0.6 is vulnerable to stored cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.  IBM X-Force ID:  286833.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/286833"
          },
          {
            "url": "https://www.ibm.com/support/pages/node/7160390"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40420",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-07-17T19:15:11.363",
        "lastModified": "2024-07-17T19:15:11.363",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A Server-Side Template Injection (SSTI) vulnerability in the edit theme function of openCart project v4.0.2.3 allows attackers to execute arbitrary code via injecting a crafted payload.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/A3h1nt/CVEs/blob/main/OpenCart/Readme.md"
          }
        ]
      }
    }
  ]
}