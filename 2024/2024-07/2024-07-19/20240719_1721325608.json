{
  "totalResults": 17,
  "datePublished": "2024-07-19T03:00:08.601429Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2023-50304",
        "sourceIdentifier": "psirt@us.ibm.com",
        "published": "2024-07-18T16:15:06.090",
        "lastModified": "2024-07-18T16:15:06.090",
        "baseScore": 7.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 4.2,
        "description": "IBM Engineering Requirements Management DOORS Web Access 9.7.2.8 is vulnerable to an XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources.  IBM X-Force ID:  273335.",
        "cweIds": [
          {
            "id": "CWE-611",
            "description": "Improper Restriction of XML External Entity Reference"
          }
        ],
        "references": [
          {
            "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/273335"
          },
          {
            "url": "https://www.ibm.com/support/pages/node/7160471"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30473",
        "sourceIdentifier": "security_alert@emc.com",
        "published": "2024-07-18T16:15:06.817",
        "lastModified": "2024-07-18T16:15:06.817",
        "baseScore": 4.9,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 3.6,
        "description": "Dell ECS, versions prior to 3.8.1, contain a privilege elevation vulnerability in user management. A remote high privileged attacker could potentially exploit this vulnerability, gaining access to unauthorized end points.",
        "cweIds": [
          {
            "id": "CWE-269",
            "description": "Improper Privilege Management"
          }
        ],
        "references": [
          {
            "url": "https://www.dell.com/support/kbdoc/en-us/000227051/dsa-2024-239-security-update-dell-ecs-3-8-1-1-for-multiple-security-vulnerabilities"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38302",
        "sourceIdentifier": "security_alert@emc.com",
        "published": "2024-07-18T16:15:07.057",
        "lastModified": "2024-07-18T16:15:07.057",
        "baseScore": 6.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 4.0,
        "description": "Dell Data Lakehouse, version(s) 1.0.0.0, contain(s) a Missing Encryption of Sensitive Data vulnerability in the DDAE (Starburst). A low privileged attacker with adjacent network access could potentially exploit this vulnerability, leading to Information disclosure.",
        "cweIds": [
          {
            "id": "CWE-311",
            "description": "Missing Encryption of Sensitive Data"
          }
        ],
        "references": [
          {
            "url": "https://www.dell.com/support/kbdoc/en-us/000227053/dsa-2024-303-security-update-for-dell-data-lakehouse-system-software-for-multiple-security-vulnerabilities"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-39907",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-18T16:15:07.293",
        "lastModified": "2024-07-18T16:15:07.293",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "1Panel is a web-based linux server management control panel. There are many sql injections in the project, and some of them are not well filtered, leading to arbitrary file writes, and ultimately leading to RCEs. These sql injections have been resolved in version 1.10.12-tls. Users are advised to upgrade. There are no known workarounds for these issues.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-5grx-v727-qmq6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-39911",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-18T16:15:07.497",
        "lastModified": "2024-07-18T20:15:04.300",
        "baseScore": 10.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 6.0,
        "description": "1Panel is a web-based linux server management control panel. 1Panel contains an unspecified sql injection via User-Agent handling. This issue has been addressed in version 1.10.12-lts. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://blog.mo60.cn/index.php/archives/1Panel_SQLinjection2Rce.html"
          },
          {
            "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-7m53-pwp6-v3f5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-40159",
        "sourceIdentifier": "ics-cert@hq.dhs.gov",
        "published": "2024-07-18T17:15:02.787",
        "lastModified": "2024-07-18T17:15:02.787",
        "baseScore": 8.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.2,
        "description": "A validated user not explicitly authorized to have access to certain sensitive information could access Philips Vue PACS on the same network to expose that information.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "http://www.philips.com/productsecurity"
          },
          {
            "url": "https://www.cisa.gov/news-events/ics-medical-advisories/icsma-24-200-01"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-40223",
        "sourceIdentifier": "ics-cert@hq.dhs.gov",
        "published": "2024-07-18T17:15:03.173",
        "lastModified": "2024-07-18T17:15:03.173",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.8,
        "impactScore": 2.5,
        "description": "Philips Vue PACS does not properly assign, modify, track, or check actor privileges, creating an unintended sphere of control for that actor.",
        "cweIds": [
          {
            "id": "CWE-269",
            "description": "Improper Privilege Management"
          }
        ],
        "references": [
          {
            "url": "http://www.philips.com/productsecurity"
          },
          {
            "url": "https://www.cisa.gov/news-events/ics-medical-advisories/icsma-24-200-01"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-40539",
        "sourceIdentifier": "ics-cert@hq.dhs.gov",
        "published": "2024-07-18T17:15:03.553",
        "lastModified": "2024-07-18T17:15:03.553",
        "baseScore": 4.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.8,
        "impactScore": 2.5,
        "description": "Philips Vue PACS does not require that users have strong passwords, which could make it easier for attackers to compromise user accounts.",
        "cweIds": [
          {
            "id": "CWE-521",
            "description": "Weak Password Requirements"
          }
        ],
        "references": [
          {
            "url": "http://www.philips.com/productsecurity"
          },
          {
            "url": "https://www.cisa.gov/news-events/ics-medical-advisories/icsma-24-200-01"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-40704",
        "sourceIdentifier": "ics-cert@hq.dhs.gov",
        "published": "2024-07-18T17:15:03.897",
        "lastModified": "2024-07-18T17:15:03.897",
        "baseScore": 7.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.2,
        "description": "Philips Vue PACS uses default credentials for potentially critical functionality.",
        "cweIds": [
          {
            "id": "CWE-1392",
            "description": "Use of Default Credentials"
          }
        ],
        "references": [
          {
            "url": "http://www.philips.com/productsecurity"
          },
          {
            "url": "https://www.cisa.gov/news-events/ics-medical-advisories/icsma-24-200-01"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40628",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-18T17:15:04.370",
        "lastModified": "2024-07-18T17:15:04.370",
        "baseScore": 10.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 6.0,
        "description": "JumpServer is an open-source Privileged Access Management (PAM) tool that provides DevOps and IT teams with on-demand and secure access to SSH, RDP, Kubernetes, Database and RemoteApp endpoints through a web browser. An attacker can exploit the ansible playbook to read arbitrary files in the celery container, leading to sensitive information disclosure. The Celery container runs as root and has database access, allowing the attacker to steal all secrets for hosts, create a new JumpServer account with admin privileges, or manipulate the database in other ways. This issue has been addressed in release versions 3.10.12 and 4.0.0. It is recommended to upgrade the safe versions. There is no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/jumpserver/jumpserver/security/advisories/GHSA-rpf7-g4xh-84v9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40629",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-18T17:15:04.613",
        "lastModified": "2024-07-18T17:15:04.613",
        "baseScore": 10.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 6.0,
        "description": "JumpServer is an open-source Privileged Access Management (PAM) tool that provides DevOps and IT teams with on-demand and secure access to SSH, RDP, Kubernetes, Database and RemoteApp endpoints through a web browser. An attacker can exploit the Ansible playbook to write arbitrary files, leading to remote code execution (RCE) in the Celery container. The Celery container runs as root and has database access, allowing an attacker to steal all secrets for hosts, create a new JumpServer account with admin privileges, or manipulate the database in other ways. This issue has been patched in release versions 3.10.12 and 4.0.0. It is recommended to upgrade the safe versions. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/jumpserver/jumpserver/security/advisories/GHSA-3wgp-q8m7-v33v"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40644",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-18T17:15:04.850",
        "lastModified": "2024-07-18T17:15:04.850",
        "baseScore": 6.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.3,
        "impactScore": 5.5,
        "description": "gitoxide An idiomatic, lean, fast & safe pure Rust implementation of Git. `gix-path` can be tricked into running another `git.exe` placed in an untrusted location by a limited user account on Windows systems. Windows permits limited user accounts without administrative privileges to create new directories in the root of the system drive. While `gix-path` first looks for `git` using a `PATH` search, in version 0.10.8 it also has a fallback strategy on Windows of checking two hard-coded paths intended to be the 64-bit and 32-bit Program Files directories. Existing functions, as well as the newly introduced `exe_invocation` function, were updated to make use of these alternative locations. This causes facilities in `gix_path::env` to directly execute `git.exe` in those locations, as well as to return its path or whatever configuration it reports to callers who rely on it. Although unusual setups where the system drive is not `C:`, or even where Program Files directories have non-default names, are technically possible, the main problem arises on a 32-bit Windows system. Such a system has no `C:\\Program Files (x86)` directory. A limited user on a 32-bit Windows system can therefore create the `C:\\Program Files (x86)` directory and populate it with arbitrary contents. Once a payload has been placed at the second of the two hard-coded paths in this way, other user accounts including administrators will execute it if they run an application that uses `gix-path` and do not have `git` in a `PATH` directory. (While having `git` found in a `PATH` search prevents exploitation, merely having it installed in the default location under the real `C:\\Program Files` directory does not. This is because the first hard-coded path's `mingw64` component assumes a 64-bit installation.). Only Windows is affected. Exploitation is unlikely except on a 32-bit system. In particular, running a 32-bit build on a 64-bit system is not a risk factor. Furthermore, the attacker must have a user account on the system, though it may be a relatively unprivileged account. Such a user can perform privilege escalation and execute code as another user, though it may be difficult to do so reliably because the targeted user account must run an application or service that uses `gix-path` and must not have `git` in its `PATH`. The main exploitable configuration is one where Git for Windows has been installed but not added to `PATH`. This is one of the options in its installer, though not the default option. Alternatively, an affected program that sanitizes its `PATH` to remove seemingly nonessential directories could allow exploitation. But for the most part, if the target user has configured a `PATH` in which the real `git.exe` can be found, then this cannot be exploited. This issue has been addressed in release version 0.10.9 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-345",
            "description": "Insufficient Verification of Data Authenticity"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Byron/gitoxide/blob/6cd8b4665bb7582f744c3244abaef812be39ec35/gix-path/src/env/git.rs#L9-L14"
          },
          {
            "url": "https://github.com/Byron/gitoxide/commit/15235bf7968042da0493d431bbc955d6f9f54188"
          },
          {
            "url": "https://github.com/Byron/gitoxide/security/advisories/GHSA-mgvv-9p9g-3jv4"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40647",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-18T17:15:05.193",
        "lastModified": "2024-07-18T17:15:05.193",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.8,
        "impactScore": 4.0,
        "description": "sentry-sdk is the official Python SDK for Sentry.io. A bug in Sentry's Python SDK < 2.8.0 allows the environment variables to be passed to subprocesses despite the `env={}` setting. In Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls. Due to the bug in Sentry SDK, with the Stdlib integration enabled (which is enabled by default), this expectation is not fulfilled, and all environment variables are being passed to subprocesses instead. The issue has been patched in pull request #3251 and is included in sentry-sdk==2.8.0. We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, you can disable all default integrations.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://docs.python.org/3/library/subprocess.html"
          },
          {
            "url": "https://docs.sentry.io/platforms/python/integrations/default-integrations"
          },
          {
            "url": "https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib"
          },
          {
            "url": "https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff"
          },
          {
            "url": "https://github.com/getsentry/sentry-python/pull/3251"
          },
          {
            "url": "https://github.com/getsentry/sentry-python/releases/tag/2.8.0"
          },
          {
            "url": "https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40648",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-18T17:15:05.427",
        "lastModified": "2024-07-18T17:15:05.427",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "matrix-rust-sdk is an implementation of a Matrix client-server library in Rust. The `UserIdentity::is_verified()` method in the matrix-sdk-crypto crate before version 0.7.2 doesn't take into account the verification status of the user's own identity while performing the check and may as a result return a value contrary to what is implied by its name and documentation. If the method is used to decide whether to perform sensitive operations towards a user identity, a malicious homeserver could manipulate the outcome in order to make the identity appear trusted. This is not a typical usage of the method, which lowers the impact. The method itself is not used inside the `matrix-sdk-crypto` crate. The 0.7.2 release of the `matrix-sdk-crypto` crate includes a fix. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-287",
            "description": "Improper Authentication"
          }
        ],
        "references": [
          {
            "url": "https://github.com/matrix-org/matrix-rust-sdk/commit/76a7052149bb8f722df12da915b3a06d19a6695a"
          },
          {
            "url": "https://github.com/matrix-org/matrix-rust-sdk/security/advisories/GHSA-4qg4-cvh2-crgg"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5618",
        "sourceIdentifier": "iletisim@usom.gov.tr",
        "published": "2024-07-18T17:15:05.657",
        "lastModified": "2024-07-18T17:15:05.657",
        "baseScore": 9.9,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.1,
        "impactScore": 6.0,
        "description": "Incorrect Permission Assignment for Critical Resource vulnerability in PruvaSoft Informatics Apinizer Management Console allows Accessing Functionality Not Properly Constrained by ACLs.This issue affects Apinizer Management Console: before 2024.05.1.",
        "cweIds": [
          {
            "id": "CWE-732",
            "description": "Incorrect Permission Assignment for Critical Resource"
          }
        ],
        "references": [
          {
            "url": "https://www.usom.gov.tr/bildirim/tr-24-1010"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5619",
        "sourceIdentifier": "iletisim@usom.gov.tr",
        "published": "2024-07-18T17:15:05.927",
        "lastModified": "2024-07-18T17:15:05.927",
        "baseScore": 9.6,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.1,
        "impactScore": 5.8,
        "description": "Authorization Bypass Through User-Controlled Key vulnerability in PruvaSoft Informatics Apinizer Management Console allows Exploiting Incorrectly Configured Access Control Security Levels.This issue affects Apinizer Management Console: before 2024.05.1.",
        "cweIds": [
          {
            "id": "CWE-639",
            "description": "Authorization Bypass Through User-Controlled Key"
          }
        ],
        "references": [
          {
            "url": "https://www.usom.gov.tr/bildirim/tr-24-1010"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5620",
        "sourceIdentifier": "iletisim@usom.gov.tr",
        "published": "2024-07-18T17:15:06.187",
        "lastModified": "2024-07-18T17:15:06.187",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 2.5,
        "description": "Authentication Bypass Using an Alternate Path or Channel vulnerability in PruvaSoft Informatics Apinizer Management Console allows Authentication Bypass.This issue affects Apinizer Management Console: before 2024.05.1.",
        "cweIds": [
          {
            "id": "CWE-288",
            "description": "Authentication Bypass Using an Alternate Path or Channel"
          }
        ],
        "references": [
          {
            "url": "https://www.usom.gov.tr/bildirim/tr-24-1010"
          }
        ]
      }
    }
  ]
}