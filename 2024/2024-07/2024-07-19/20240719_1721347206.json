{
  "totalResults": 3,
  "datePublished": "2024-07-19T09:00:06.201446Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-5997",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-18T22:15:03.037",
        "lastModified": "2024-07-18T22:15:03.037",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Duplica â€“ Duplicate Posts, Pages, Custom Posts or Users plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the duplicate_user and duplicate_post functions in all versions up to, and including, 0.6. This makes it possible for authenticated attackers, with Subscriber-level access and above, to create duplicates of users and posts/pages.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/duplica/tags/0.6/src/AJAX.php#L32"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/duplica/tags/0.6/src/AJAX.php#L98"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/605fac87-e1e8-4354-a9d3-4440e54bc161?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40642",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-18T23:15:02.000",
        "lastModified": "2024-07-18T23:15:02.000",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.2,
        "impactScore": 5.9,
        "description": "The netty incubator codec.bhttp is a java language binary http parser. In affected versions the `BinaryHttpParser` class does not properly validate input values thus giving attackers almost complete control over the HTTP requests constructed from the parsed output. Attackers can abuse several issues individually to perform various injection attacks including HTTP request smuggling, desync attacks, HTTP header injections, request queue poisoning, caching attacks and Server Side Request Forgery (SSRF). Attacker could also combine several issues to create well-formed messages for other text-based protocols which may result in attacks beyond the HTTP protocol. The BinaryHttpParser class implements the readRequestHead method which performs most of the relevant parsing of the received request. The data structure prefixes values with a variable length integer value. The parsing code below first gets the lengths of the values from the prefixed variable length integer. After it has all of the lengths and calculates all of the indices, the parser casts the applicable slices of the ByteBuf to String. Finally, it passes these values into a new `DefaultBinaryHttpRequest` object where no further parsing or validation occurs. Method is partially validated while other values are not validated at all. Software that relies on netty to apply input validation for binary HTTP data may be vulnerable to various injection and protocol based attacks. This issue has been addressed in version 0.0.13.Final. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/netty/netty-incubator-codec-ohttp/commit/b687a0cf6ea1030232ea204d73bce82f2698e571"
          },
          {
            "url": "https://github.com/netty/netty-incubator-codec-ohttp/security/advisories/GHSA-q8f2-hxq5-cp4h"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-41111",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-07-18T23:15:02.280",
        "lastModified": "2024-07-18T23:15:02.280",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "Sliver is an open source cross-platform adversary emulation/red team framework, it can be used by organizations of all sizes to perform security testing. Sliver version 1.6.0 (prerelease) is vulnerable to RCE on the teamserver by a low-privileged \"operator\" user. The RCE is as the system root user. The exploit is pretty fun as we make the Sliver server pwn itself. As described in a past issue (#65), \"there is a clear security boundary between the operator and server, an operator should not inherently be able to run commands or code on the server.\" An operator who exploited this vulnerability would be able to view all console logs, kick all other operators, view and modify files stored on the server, and ultimately delete the server. This issue has not yet be addressed but is expected to be resolved before the full release of version 1.6.0. Users of the 1.6.0 prerelease should avoid using Silver in production.",
        "cweIds": [
          {
            "id": "CWE-74",
            "description": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/BishopFox/sliver/commit/5016fb8d7cdff38c79e22e8293e58300f8d3bd57"
          },
          {
            "url": "https://github.com/BishopFox/sliver/issues/65"
          },
          {
            "url": "https://github.com/BishopFox/sliver/pull/1281"
          },
          {
            "url": "https://github.com/BishopFox/sliver/security/advisories/GHSA-hc5w-gxxr-w8x8"
          },
          {
            "url": "https://sliver.sh/docs?name=Multi-player+Mode"
          }
        ]
      }
    }
  ]
}