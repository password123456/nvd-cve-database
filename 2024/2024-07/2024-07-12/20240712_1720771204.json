{
  "totalResults": 13,
  "datePublished": "2024-07-12T17:00:04.686512Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-0974",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:01.977",
        "lastModified": "2024-07-12T16:11:22.950",
        "baseScore": 4.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.7,
        "impactScore": 2.7,
        "description": "The Social Media Widget WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/7f8e5e63-a928-443e-9771-8b3f51f5eb9e/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2430",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:03.173",
        "lastModified": "2024-07-12T12:49:07.030",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Website Content in Page or Post WordPress plugin before 2024.04.09 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/990b7d7a-3d7a-46d5-9aeb-740de817e2d9/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2640",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:03.433",
        "lastModified": "2024-07-12T12:49:07.030",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Watu Quiz WordPress plugin before 3.4.1.2 does not sanitise and escape some of its settings, which could allow users such as authors (if they've been authorized by admins) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/d46db635-9d84-4268-a789-406a0db4cccf/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2696",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:03.680",
        "lastModified": "2024-07-12T16:11:30.637",
        "baseScore": 4.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.7,
        "impactScore": 2.7,
        "description": "The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/b6e64af0-adeb-4e28-9a81-f4024b0446ee/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3112",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:03.937",
        "lastModified": "2024-07-12T12:49:07.030",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Quotes and Tips by BestWebSoft WordPress plugin before 1.45 does not properly validate image files uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/fa6f01d6-aa3b-4452-9c5f-49bb227fea9d/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4753",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:04.190",
        "lastModified": "2024-07-12T12:49:07.030",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/81725b17-532a-43e6-8ce5-fe50a2ed0819/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5626",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:04.420",
        "lastModified": "2024-07-12T12:49:07.030",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/6b03f450-4982-4f6c-a6f1-f7e85b1deec1/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-5811",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:04.670",
        "lastModified": "2024-07-12T12:49:07.030",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Simple Video Directory WordPress plugin before 1.4.4 does not sanitise and escape some of its settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/bf6c2e28-51ef-443b-b1c2-d555c7e12f7f/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6022",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:04.893",
        "lastModified": "2024-07-12T12:49:07.030",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/871a93b5-ec67-4fe0-bc39-e5485477fbeb/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6023",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:05.130",
        "lastModified": "2024-07-12T12:49:07.030",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when adding emails, which could allow attackers to make a logged in admin perform such action via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/6e812189-2980-453d-931d-1f785e8dbcc0/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6024",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-07-12T06:15:05.340",
        "lastModified": "2024-07-12T16:12:07.453",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when deleting groups or emails, which could allow attackers to make a logged in admin remove them via a CSRF attack",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/3d2cdb4f-b7e1-4691-90d1-cddde7f5858e/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6555",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-12T06:15:05.560",
        "lastModified": "2024-07-12T12:49:07.030",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The WP Popups â€“ WordPress Popup builder plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 2.2.0.1. This is due the plugin utilizing mobiledetect without preventing direct access to the files. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3115849%40wp-popups-lite&new=3115849%40wp-popups-lite&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/578892f2-9841-4493-8445-61b79feb4764?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6588",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-07-12T07:15:02.387",
        "lastModified": "2024-07-12T12:49:07.030",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The PowerPress Podcasting plugin by Blubrry plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the â€˜media_urlâ€™ parameter in all versions up to, and including, 11.9.10 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": null,
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/powerpress/trunk/powerpress-player.php#L1015"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3115881/#file0"
          },
          {
            "url": "https://wordpress.org/plugins/powerpress/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/745262f6-4f73-453e-b650-15115536f221?source=cve"
          }
        ]
      }
    }
  ]
}