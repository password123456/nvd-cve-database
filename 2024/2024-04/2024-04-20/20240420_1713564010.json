{
  "totalResults": 11,
  "datePublished": "2024-04-20T07:00:10.020250Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-1681",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-19T20:15:09.273",
        "lastModified": "2024-04-19T20:15:09.273",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "corydolphin/flask-cors is vulnerable to log injection when the log level is set to debug. An attacker can inject fake log entries into the log file by sending a specially crafted GET request containing a CRLF sequence in the request path. This vulnerability allows attackers to corrupt log files, potentially covering tracks of other attacks, confusing log post-processing tools, and forging log entries. The issue is due to improper output neutralization for logs.",
        "cweIds": [
          {
            "id": "CWE-117",
            "description": "Improper Output Neutralization for Logs"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/25a7a0ba-9fa2-4777-acb6-03e5539bb644"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-22905",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-19T21:15:07.960",
        "lastModified": "2024-04-19T21:15:07.960",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Buffer Overflow vulnerability in ARM mbed-os v.6.17.0 allows a remote attacker to execute arbitrary code via a crafted script to the hciTrSerialRxIncoming function.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/ARMmbed/mbed-os/blob/7c7d20da6527885237094d9d50ce099404414201/connectivity/FEATURE_BLE/source/cordio/stack_adaptation/hci_tr.c#L125"
          },
          {
            "url": "https://github.com/ARMmbed/mbed-os/blob/7c7d20da6527885237094d9d50ce099404414201/connectivity/FEATURE_BLE/source/cordio/stack_adaptation/hci_tr.c#L173-L175"
          },
          {
            "url": "https://github.com/ARMmbed/mbed-os/issues/15462"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30974",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-19T21:15:08.023",
        "lastModified": "2024-04-19T21:15:08.023",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "SQL Injection vulnerability in autoexpress v.1.3.0 allows attackers to run arbitrary SQL commands via the carId parameter.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/torchstar/autoexpress/blob/master/buginfodetail.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31584",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-19T21:15:08.080",
        "lastModified": "2024-04-19T21:15:08.080",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Pytorch before v2.2.0 has an Out-of-bounds Read vulnerability via the component torch/csrc/jit/mobile/flatbuffer_loader.cpp.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/pytorch/pytorch/blob/v2.1.2/torch/csrc/jit/mobile/flatbuffer_loader.cpp#L305"
          },
          {
            "url": "https://github.com/pytorch/pytorch/commit/7c35874ad664e74c8e4252d67521f3986eadb0e6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31991",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-19T21:15:08.133",
        "lastModified": "2024-04-19T21:15:08.133",
        "baseScore": 4.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 1.4,
        "description": "Mealie is a self hosted recipe manager and meal planner. Prior to 1.4.0, the safe_scrape_html function utilizes a user-controlled URL to issue a request to a remote server. Based on the content of the response, it will either parse the content or disregard it. This function, nor those that call it, add any restrictions on the URL that can be provided, nor is it restricted to being an FQDN (i.e., an IP address can be provided). As this function’s return will be handled differently by its caller depending on the response, it is possible for an attacker to use this functionality to positively identify HTTP(s) servers on the local network with any IP/port combination. This issue can result in any authenticated user being able to map HTTP servers on a local network that the Mealie service has access to. Note that by default any user can create an account on a Mealie server, and that the default changeme@example.com user is available with its hard-coded password. This vulnerability is fixed in 1.4.0.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mealie-recipes/mealie/blob/mealie-next/mealie/services/scraper/scraper_strategies.py#L27-L70"
          },
          {
            "url": "https://github.com/mealie-recipes/mealie/commit/2a3463b7466bc297aede50046da9550d919ec56f"
          },
          {
            "url": "https://github.com/mealie-recipes/mealie/pull/3368"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2023-225_GHSL-2023-226_Mealie/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31992",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-19T21:15:08.337",
        "lastModified": "2024-04-19T21:15:08.337",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "Mealie is a self hosted recipe manager and meal planner. Prior to 1.4.0, the safe_scrape_html function utilizes a user-controlled URL to issue a request to a remote server, however these requests are not rate-limited. While there are efforts to prevent DDoS by implementing a timeout on requests, it is possible for an attacker to issue a large number of requests to the server which will be handled in batches based on the configuration of the Mealie server. The chunking of responses is helpful for mitigating memory exhaustion on the Mealie server, however a single request to an arbitrarily large external file (e.g. a Debian ISO) is often sufficient to completely saturate a CPU core assigned to the Mealie container. Without rate limiting in place, it is possible to not only sustain traffic against an external target indefinitely, but also to exhaust the CPU resources assigned to the Mealie container. This vulnerability is fixed in 1.4.0.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mealie-recipes/mealie/blob/mealie-next/mealie/services/scraper/scraper_strategies.py#L27-L70"
          },
          {
            "url": "https://github.com/mealie-recipes/mealie/commit/2a3463b7466bc297aede50046da9550d919ec56f"
          },
          {
            "url": "https://github.com/mealie-recipes/mealie/pull/3368"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2023-225_GHSL-2023-226_Mealie/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31993",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-19T21:15:08.523",
        "lastModified": "2024-04-19T21:15:08.523",
        "baseScore": 6.2,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.7,
        "impactScore": 4.0,
        "description": "Mealie is a self hosted recipe manager and meal planner. Prior to 1.4.0, the scrape_image function will retrieve an image based on a user-provided URL, however the provided URL is not validated to point to an external location and does not have any enforced rate limiting. The response from the Mealie server will also vary depending on whether or not the target file is an image, is not an image, or does not exist. Additionally, when a file is retrieved the file may remain stored on Mealie’s file system as original.jpg under the UUID of the recipe it was requested for. If the attacker has access to an admin account (e.g. the default changeme@example.com), this file can then be retrieved. Note that if Mealie is running in a development setting this could be leveraged by an attacker to retrieve any file that the Mealie server had downloaded in this fashion without the need for administrator access. This vulnerability is fixed in 1.4.0.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mealie-recipes/mealie/blob/ee121a12f8db33ecb4db5f8582f7ea9788d019e4/mealie/services/recipe/recipe_data_service.py#L107"
          },
          {
            "url": "https://github.com/mealie-recipes/mealie/commit/2a3463b7466bc297aede50046da9550d919ec56f"
          },
          {
            "url": "https://github.com/mealie-recipes/mealie/pull/3368"
          },
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2023-225_GHSL-2023-226_Mealie/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32391",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-19T21:15:08.700",
        "lastModified": "2024-04-19T21:15:08.700",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Cross Site Scripting vulnerability in MacCMS v.10 v.2024.1000.3000 allows a remote attacker to execute arbitrary code via a crafted payload.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/magicblack/maccms10/issues/1133"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32392",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-19T21:15:08.747",
        "lastModified": "2024-04-19T21:15:08.747",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Cross Site Scripting vulnerability in CmSimple v.5.15 allows a remote attacker to execute arbitrary code via the functions.php component.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/Hebing123/cve/issues/33"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4017",
        "sourceIdentifier": "13061848-ea10-403d-bd75-c83a022c2891",
        "published": "2024-04-19T21:15:08.800",
        "lastModified": "2024-04-19T21:15:08.800",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.0,
        "impactScore": 6.0,
        "description": "Improper Privilege Management vulnerability in BeyondTrust U-Series Appliance on Windows, 64 bit (filesystem modules) allows DLL Side-Loading.This issue affects U-Series Appliance: from 3.4 before 4.0.3.",
        "cweIds": [
          {
            "id": "CWE-269",
            "description": "Improper Privilege Management"
          }
        ],
        "references": [
          {
            "url": "https://www.beyondtrust.com/docs/release-notes/u-series-appliance/bt-appliance-u-series-software-4-0-3.htm"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-4018",
        "sourceIdentifier": "13061848-ea10-403d-bd75-c83a022c2891",
        "published": "2024-04-19T21:15:08.997",
        "lastModified": "2024-04-19T21:15:08.997",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.0,
        "impactScore": 6.0,
        "description": "Improper Privilege Management vulnerability in BeyondTrust U-Series Appliance on Windows, 64 bit (local appliance api modules) allows Privilege Escalation.This issue affects U-Series Appliance: from 3.4 before 4.0.3.",
        "cweIds": [
          {
            "id": "CWE-269",
            "description": "Improper Privilege Management"
          }
        ],
        "references": [
          {
            "url": "https://www.beyondtrust.com/docs/release-notes/u-series-appliance/bt-appliance-u-series-software-4-0-3.htm"
          }
        ]
      }
    }
  ]
}