{
  "totalResults": 32,
  "datePublished": "2024-04-16T11:00:05.605965Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-0404",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:07.387",
        "lastModified": "2024-04-16T00:15:07.387",
        "baseScore": 9.1,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.2,
        "description": "A mass assignment vulnerability exists in the `/api/invite/:code` endpoint of the mintplex-labs/anything-llm repository, allowing unauthorized creation of high-privileged accounts. By intercepting and modifying the HTTP request during the account creation process via an invitation link, an attacker can add a `role` property with `admin` value, thereby gaining administrative access. This issue arises due to the lack of property allowlisting and blocklisting, enabling the attacker to exploit the system and perform actions as an administrator.",
        "cweIds": [
          {
            "id": "CWE-915",
            "description": "Improperly Controlled Modification of Dynamically-Determined Object Attributes"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/8cd3a92c660b202655d99bee90b2864694c99946"
          },
          {
            "url": "https://huntr.com/bounties/b4355bae-766a-4bb0-942b-607bc491b23d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-0549",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:07.603",
        "lastModified": "2024-04-16T00:15:07.603",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "mintplex-labs/anything-llm is vulnerable to a relative path traversal attack, allowing unauthorized attackers with a default role account to delete files and folders within the filesystem, including critical database files such as 'anythingllm.db'. The vulnerability stems from insufficient input validation and normalization in the handling of file and folder deletion requests. Successful exploitation results in the compromise of data integrity and availability.",
        "cweIds": [
          {
            "id": "CWE-23",
            "description": "Relative Path Traversal"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/026849df0224b6a8754f4103530bc015874def62"
          },
          {
            "url": "https://huntr.com/bounties/fcb4001e-0290-4b78-a2f0-91ee5d20cc72"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1135",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:07.797",
        "lastModified": "2024-04-16T00:15:07.797",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Gunicorn fails to properly validate Transfer-Encoding headers, leading to HTTP Request Smuggling (HRS) vulnerabilities. By crafting requests with conflicting Transfer-Encoding headers, attackers can bypass security restrictions and access restricted endpoints. This issue is due to Gunicorn's handling of Transfer-Encoding headers, where it incorrectly processes requests with multiple, conflicting Transfer-Encoding headers, treating them as chunked regardless of the final encoding specified. This vulnerability allows for a range of attacks including cache poisoning, session manipulation, and data exposure.",
        "cweIds": [
          {
            "id": "CWE-444",
            "description": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/22158e34-cfd5-41ad-97e0-a780773d96c1"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1183",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:07.990",
        "lastModified": "2024-04-16T00:15:07.990",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "An SSRF (Server-Side Request Forgery) vulnerability exists in the gradio-app/gradio repository, allowing attackers to scan and identify open ports within an internal network. By manipulating the 'file' parameter in a GET request, an attacker can discern the status of internal ports based on the presence of a 'Location' header or a 'File not allowed' error in the response.",
        "cweIds": [
          {
            "id": "CWE-601",
            "description": "URL Redirection to Untrusted Site ('Open Redirect')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/gradio-app/gradio/commit/2ad3d9e7ec6c8eeea59774265b44f11df7394bb4"
          },
          {
            "url": "https://huntr.com/bounties/103434f9-87d2-42ea-9907-194a3c25007c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1456",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:08.170",
        "lastModified": "2024-04-16T00:15:08.170",
        "baseScore": 7.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.2,
        "description": "An S3 bucket takeover vulnerability was identified in the h2oai/h2o-3 repository. The issue involves the S3 bucket 'http://s3.amazonaws.com/h2o-training', which was found to be vulnerable to unauthorized takeover.",
        "cweIds": null,
        "references": [
          {
            "url": "https://huntr.com/bounties/7c1b7f27-52f3-4b4b-9d81-e277f5e0ab6b"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1483",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:08.353",
        "lastModified": "2024-04-16T00:15:08.353",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "A path traversal vulnerability exists in mlflow/mlflow version 2.9.2, allowing attackers to access arbitrary files on the server. By crafting a series of HTTP POST requests with specially crafted 'artifact_location' and 'source' parameters, using a local URI with '#' instead of '?', an attacker can traverse the server's directory structure. The issue occurs due to insufficient validation of user-supplied input in the server's handlers.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/52a3855d-93ff-4460-ac24-9c7e4334198d"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1558",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:08.533",
        "lastModified": "2024-04-16T00:15:08.533",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "A path traversal vulnerability exists in the `_create_model_version()` function within `server/handlers.py` of the mlflow/mlflow repository, due to improper validation of the `source` parameter. Attackers can exploit this vulnerability by crafting a `source` parameter that bypasses the `_validate_non_local_source_contains_relative_paths(source)` function's checks, allowing for arbitrary file read access on the server. The issue arises from the handling of unquoted URL characters and the subsequent misuse of the original `source` value for model version creation, leading to the exposure of sensitive files when interacting with the `/model-versions/get-artifact` handler.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/7f4dbcc5-b6b3-43dd-b310-e2d0556a8081"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1560",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:08.713",
        "lastModified": "2024-04-16T00:15:08.713",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "A path traversal vulnerability exists in the mlflow/mlflow repository, specifically within the artifact deletion functionality. Attackers can bypass path validation by exploiting the double decoding process in the `_delete_artifact_mlflow_artifacts` handler and `local_file_uri_to_path` function, allowing for the deletion of arbitrary directories on the server's filesystem. This vulnerability is due to an extra unquote operation in the `delete_artifacts` function of `local_artifact_repo.py`, which fails to properly sanitize user-supplied paths. The issue is present up to version 2.9.2, despite attempts to fix a similar issue in CVE-2023-6831.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/4a34259c-3c8f-4872-b178-f27fbc876b98"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1561",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:08.887",
        "lastModified": "2024-04-16T00:15:08.887",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "An issue was discovered in gradio-app/gradio, where the `/component_server` endpoint improperly allows the invocation of any method on a `Component` class with attacker-controlled arguments. Specifically, by exploiting the `move_resource_to_block_cache()` method of the `Block` class, an attacker can copy any file on the filesystem to a temporary directory and subsequently retrieve it. This vulnerability enables unauthorized local file read access, posing a significant risk especially when the application is exposed to the internet via `launch(share=True)`, thereby allowing remote attackers to read files on the host machine. Furthermore, gradio apps hosted on `huggingface.co` are also affected, potentially leading to the exposure of sensitive information such as API keys and credentials stored in environment variables.",
        "cweIds": [
          {
            "id": "CWE-29",
            "description": "Path Traversal: '\\..\\filename'"
          }
        ],
        "references": [
          {
            "url": "https://github.com/gradio-app/gradio/commit/24a583688046867ca8b8b02959c441818bdb34a2"
          },
          {
            "url": "https://huntr.com/bounties/4acf584e-2fe8-490e-878d-2d9bf2698338"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1569",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:09.060",
        "lastModified": "2024-04-16T00:15:09.060",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "parisneo/lollms-webui is vulnerable to a denial of service (DoS) attack due to uncontrolled resource consumption. Attackers can exploit the `/open_code_in_vs_code` and similar endpoints without authentication by sending repeated HTTP POST requests, leading to the opening of Visual Studio Code or the default folder opener (e.g., File Explorer, xdg-open) multiple times. This can render the host machine unusable by exhausting system resources. The vulnerability is present in the latest version of the software.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://github.com/parisneo/lollms-webui/commit/354cf766835396b7fc0d5105ed3b77572a653149"
          },
          {
            "url": "https://huntr.com/bounties/369d1694-47e4-49bc-bb35-931ce4a5148e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1593",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:09.247",
        "lastModified": "2024-04-16T00:15:09.247",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "A path traversal vulnerability exists in the mlflow/mlflow repository due to improper handling of URL parameters. By smuggling path traversal sequences using the ';' character in URLs, attackers can manipulate the 'params' portion of the URL to gain unauthorized access to files or directories. This vulnerability allows for arbitrary data smuggling into the 'params' part of the URL, enabling attacks similar to those described in previous reports but utilizing the ';' character for parameter smuggling. Successful exploitation could lead to unauthorized information disclosure or server compromise.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/dbdc6bd6-d09a-46f2-9d9c-5138a14b6e31"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1594",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:09.417",
        "lastModified": "2024-04-16T00:15:09.417",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "A path traversal vulnerability exists in the mlflow/mlflow repository, specifically within the handling of the `artifact_location` parameter when creating an experiment. Attackers can exploit this vulnerability by using a fragment component `#` in the artifact location URI to read arbitrary files on the server in the context of the server's process. This issue is similar to CVE-2023-6909 but utilizes a different component of the URI to achieve the same effect. ",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/424b6f6b-e778-4a2b-b860-39730d396f3e"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1601",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:09.597",
        "lastModified": "2024-04-16T00:15:09.597",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "An SQL injection vulnerability exists in the `delete_discussion()` function of the parisneo/lollms-webui application, allowing an attacker to delete all discussions and message data. The vulnerability is exploitable via a crafted HTTP POST request to the `/delete_discussion` endpoint, which internally calls the vulnerable `delete_discussion()` function. By sending a specially crafted payload in the 'id' parameter, an attacker can manipulate SQL queries to delete all records from the 'discussion' and 'message' tables. This issue is due to improper neutralization of special elements used in an SQL command.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/parisneo/lollms-webui/commit/f0bc8f2babdfd4770a5adbf3b60ec612e4f1db46"
          },
          {
            "url": "https://huntr.com/bounties/652a176e-6bd7-4161-8775-63a34ecc71d5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1626",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:09.777",
        "lastModified": "2024-04-16T00:15:09.777",
        "baseScore": 9.1,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.2,
        "description": "An Insecure Direct Object Reference (IDOR) vulnerability exists in the lunary-ai/lunary repository, version 0.3.0, within the project update endpoint. The vulnerability allows authenticated users to modify the name of any project within the system without proper authorization checks, by directly referencing the project's ID in the PATCH request to the '/v1/projects/:projectId' endpoint. This issue arises because the endpoint does not verify if the provided project ID belongs to the currently authenticated user, enabling unauthorized modifications across different organizational projects.",
        "cweIds": [
          {
            "id": "CWE-250",
            "description": "Execution with Unnecessary Privileges"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/9eb9e526edff8bf82ae032f7a04867c8d58572bc"
          },
          {
            "url": "https://huntr.com/bounties/ccc291db-ae9c-403c-b6b5-6fe3f4800933"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1646",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:09.967",
        "lastModified": "2024-04-16T00:15:09.967",
        "baseScore": 8.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.2,
        "description": "parisneo/lollms-webui is vulnerable to authentication bypass due to insufficient protection over sensitive endpoints. The application checks if the host parameter is not '0.0.0.0' to restrict access, which is inadequate when the application is bound to a specific interface, allowing unauthorized access to endpoints such as '/restart_program', '/update_software', '/check_update', '/start_recording', and '/stop_recording'. This vulnerability can lead to denial of service, unauthorized disabling or overriding of recordings, and potentially other impacts if certain features are enabled in the configuration.",
        "cweIds": [
          {
            "id": "CWE-288",
            "description": "Authentication Bypass Using an Alternate Path or Channel"
          }
        ],
        "references": [
          {
            "url": "https://github.com/parisneo/lollms-webui/commit/02e829b5653a1aa5dbbe9413ec84f96caa1274e8"
          },
          {
            "url": "https://huntr.com/bounties/2f769c46-aa85-4ab8-8b08-fe791313b7ba"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1665",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:10.150",
        "lastModified": "2024-04-16T00:15:10.150",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "lunary-ai/lunary version 1.0.0 is vulnerable to unauthorized evaluation creation due to missing server-side checks for user account status during evaluation creation. While the web UI restricts evaluation creation to paid accounts, the server-side API endpoint '/v1/evaluations' does not verify if the user has a paid account, allowing users with free or self-hosted accounts to create unlimited evaluations without upgrading their account. This vulnerability is due to the lack of account status validation in the evaluation creation process.",
        "cweIds": [
          {
            "id": "CWE-770",
            "description": "Allocation of Resources Without Limits or Throttling"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/c57cd50fa0477fd2a2efe60810c0099eebd66f54"
          },
          {
            "url": "https://huntr.com/bounties/c0e6299e-ea45-435c-b849-53d50ffc0e83"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1666",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:10.330",
        "lastModified": "2024-04-16T00:15:10.330",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "In lunary-ai/lunary version 1.0.0, an authorization flaw exists that allows unauthorized radar creation. The vulnerability stems from the lack of server-side checks to verify if a user is on a free account during the radar creation process, which is only enforced in the web UI. As a result, attackers can bypass the intended account upgrade requirement by directly sending crafted requests to the server, enabling the creation of an unlimited number of radars without payment.",
        "cweIds": [
          {
            "id": "CWE-770",
            "description": "Allocation of Resources Without Limits or Throttling"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/c57cd50fa0477fd2a2efe60810c0099eebd66f54"
          },
          {
            "url": "https://huntr.com/bounties/0f310501-b5b0-4be0-ae38-d6b836f71ff0"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1738",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:10.510",
        "lastModified": "2024-04-16T00:15:10.510",
        "baseScore": 9.9,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.3,
        "description": "An incorrect authorization vulnerability exists in the lunary-ai/lunary repository, specifically within the evaluations.get route in the evaluations API endpoint. This vulnerability allows unauthorized users to retrieve the results of any organization's evaluation by simply knowing the evaluation ID, due to the lack of project ID verification in the SQL query. As a result, attackers can gain access to potentially private data contained within the evaluation results.",
        "cweIds": [
          {
            "id": "CWE-863",
            "description": "Incorrect Authorization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/a4e61122e61dc31460cfbe54d15fae389cc440ce"
          },
          {
            "url": "https://huntr.com/bounties/f68ef361-7a5d-4272-9c2f-414baf074309"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1739",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:10.697",
        "lastModified": "2024-04-16T00:15:10.697",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "lunary-ai/lunary is vulnerable to an authentication issue due to improper validation of email addresses during the signup process. Specifically, the server fails to treat email addresses as case insensitive, allowing the creation of multiple accounts with the same email address by varying the case of the email characters. For example, accounts for 'abc@gmail.com' and 'Abc@gmail.com' can both be created, leading to potential impersonation and confusion among users.",
        "cweIds": [
          {
            "id": "CWE-821",
            "description": "Incorrect Synchronization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lunary-ai/lunary/commit/7351157a21e5acd0162b4528bcae9d65b1c95695"
          },
          {
            "url": "https://huntr.com/bounties/2ca70ba5-b6a4-4873-bd55-bc6cef40d300"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1961",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:10.867",
        "lastModified": "2024-04-16T00:15:10.867",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "vertaai/modeldb is vulnerable to a path traversal attack due to improper sanitization of user-supplied file paths in its file upload functionality. Attackers can exploit this vulnerability to write arbitrary files anywhere in the file system by manipulating the 'artifact_path' parameter. This flaw can lead to Remote Code Execution (RCE) by overwriting critical files, such as the application's configuration file, especially when the application is run outside of Docker. The vulnerability is present in the NFSController.java and NFSService.java components of the application.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/5f602914-3e5d-407a-b8ce-fb444a4e8bb3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2083",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:11.057",
        "lastModified": "2024-04-16T00:15:11.057",
        "baseScore": 9.9,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.1,
        "impactScore": 6.0,
        "description": "A directory traversal vulnerability exists in the zenml-io/zenml repository, specifically within the /api/v1/steps endpoint. Attackers can exploit this vulnerability by manipulating the 'logs' URI path in the request to fetch arbitrary file content, bypassing intended access restrictions. The vulnerability arises due to the lack of validation for directory traversal patterns, allowing attackers to access files outside of the restricted directory.",
        "cweIds": [
          {
            "id": "CWE-29",
            "description": "Path Traversal: '\\..\\filename'"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zenml-io/zenml/commit/00e934f33a243a554f5f65b80eefd5ea5117367b"
          },
          {
            "url": "https://huntr.com/bounties/f24b2216-6a4b-42a1-becb-9b47e6cf117f"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2260",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:11.237",
        "lastModified": "2024-04-16T00:15:11.237",
        "baseScore": 4.2,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 2.5,
        "description": "A session fixation vulnerability exists in the zenml-io/zenml application, where JWT tokens used for user authentication are not invalidated upon logout. This flaw allows an attacker to bypass authentication mechanisms by reusing a victim's JWT token.",
        "cweIds": [
          {
            "id": "CWE-384",
            "description": "Session Fixation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zenml-io/zenml/commit/68bcb3ba60cba9729c9713a49c39502d40fb945e"
          },
          {
            "url": "https://huntr.com/bounties/2d0856ec-ed73-477a-8ea2-d5d4f15cf167"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2912",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:11.427",
        "lastModified": "2024-04-16T00:15:11.427",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "An insecure deserialization vulnerability exists in the BentoML framework, allowing remote code execution (RCE) by sending a specially crafted POST request. By exploiting this vulnerability, attackers can execute arbitrary commands on the server hosting the BentoML application. The vulnerability is triggered when a serialized object, crafted to execute OS commands upon deserialization, is sent to any valid BentoML endpoint. This issue poses a significant security risk, enabling attackers to compromise the server and potentially gain unauthorized access or control.",
        "cweIds": [
          {
            "id": "CWE-1188",
            "description": "Initialization of a Resource with an Insecure Default"
          }
        ],
        "references": [
          {
            "url": "https://github.com/bentoml/bentoml/commit/fd70379733c57c6368cc022ac1f841b7b426db7b"
          },
          {
            "url": "https://huntr.com/bounties/349a1cce-6bb5-4345-82a5-bf7041b65a68"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30567",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-16T00:15:11.620",
        "lastModified": "2024-04-16T00:15:11.620",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue in JNT Telecom JNT Liftcom UMS V1.J Core Version JM-V15 allows a remote attacker to execute arbitrary code via the Network Troubleshooting functionality.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/s4fv4n/f0e8eccd0ce4bd1ac109fa2481c90ee6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3028",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:11.667",
        "lastModified": "2024-04-16T00:15:11.667",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "mintplex-labs/anything-llm is vulnerable to improper input validation, allowing attackers to read and delete arbitrary files on the server. By manipulating the 'logo_filename' parameter in the 'system-preferences' API endpoint, an attacker can construct requests to read sensitive files or the application's '.env' file, and even delete files by setting the 'logo_filename' to the path of the target file and invoking the 'remove-logo' API endpoint. This vulnerability is due to the lack of proper sanitization of user-supplied input.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/7de23dbb2da932fbfb39f56d981784d3702cf5ce"
          },
          {
            "url": "https://huntr.com/bounties/41016b86-eabb-4161-ac81-40a1ca8e82ac"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3029",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:11.850",
        "lastModified": "2024-04-16T00:15:11.850",
        "baseScore": 9.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 2.3,
        "impactScore": 6.0,
        "description": "In mintplex-labs/anything-llm, an attacker can exploit improper input validation by sending a malformed JSON payload to the '/system/enable-multi-user' endpoint. This triggers an error that is caught by a catch block, which in turn deletes all users and disables the 'multi_user_mode'. The vulnerability allows an attacker to remove all existing users and potentially create a new admin user without requiring a password, leading to unauthorized access and control over the application.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mintplex-labs/anything-llm/commit/99cfee1e7025fe9a0919a4d506ba1e1b819f6073"
          },
          {
            "url": "https://huntr.com/bounties/7189a7a0-9830-459d-b853-bdc2559999a0"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3271",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:12.017",
        "lastModified": "2024-04-16T00:15:12.017",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "A command injection vulnerability exists in the run-llama/llama_index repository, specifically within the safe_eval function. Attackers can bypass the intended security mechanism, which checks for the presence of underscores in code generated by LLM, to execute arbitrary code. This is achieved by crafting input that does not contain an underscore but still results in the execution of OS commands. The vulnerability allows for remote code execution (RCE) on the server hosting the application.",
        "cweIds": [
          {
            "id": "CWE-77",
            "description": "Improper Neutralization of Special Elements used in a Command ('Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/run-llama/llama_index/commit/5fbcb5a8b9f20f81b791c7fc8849e352613ab475"
          },
          {
            "url": "https://huntr.com/bounties/9b32490e-7cf9-470e-8d49-ba083ae7a279"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3571",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:12.203",
        "lastModified": "2024-04-16T00:15:12.203",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "langchain-ai/langchain is vulnerable to path traversal due to improper limitation of a pathname to a restricted directory ('Path Traversal') in its LocalFileStore functionality. An attacker can leverage this vulnerability to read or write files anywhere on the filesystem, potentially leading to information disclosure or remote code execution. The issue lies in the handling of file paths in the mset and mget methods, where user-supplied input is not adequately sanitized, allowing directory traversal sequences to reach unintended directories.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/langchain-ai/langchain/commit/aad3d8bd47d7f5598156ff2bdcc8f736f24a7412"
          },
          {
            "url": "https://huntr.com/bounties/2df3acdc-ee4f-4257-bbf8-a7de3870a9d8"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3572",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:12.387",
        "lastModified": "2024-04-16T00:15:12.387",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "The scrapy/scrapy project is vulnerable to XML External Entity (XXE) attacks due to the use of lxml.etree.fromstring for parsing untrusted XML data without proper validation. This vulnerability allows attackers to perform denial of service attacks, access local files, generate network connections, or circumvent firewalls by submitting specially crafted XML data. ",
        "cweIds": [
          {
            "id": "CWE-409",
            "description": "Improper Handling of Highly Compressed Data (Data Amplification)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/scrapy/scrapy/commit/809bfac4890f75fc73607318a04d2ccba71b3d9f"
          },
          {
            "url": "https://huntr.com/bounties/c4a0fac9-0c5a-4718-9ee4-2d06d58adabb"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3573",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:12.570",
        "lastModified": "2024-04-16T00:15:12.570",
        "baseScore": 9.3,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 4.7,
        "description": "mlflow/mlflow is vulnerable to Local File Inclusion (LFI) due to improper parsing of URIs, allowing attackers to bypass checks and read arbitrary files on the system. The issue arises from the 'is_local_uri' function's failure to properly handle URIs with empty or 'file' schemes, leading to the misclassification of URIs as non-local. Attackers can exploit this by crafting malicious model versions with specially crafted 'source' parameters, enabling the reading of sensitive files within at least two directory levels from the server's root.",
        "cweIds": [
          {
            "id": "CWE-29",
            "description": "Path Traversal: '\\..\\filename'"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mlflow/mlflow/commit/438a450714a3ca06285eeea34bdc6cf79d7f6cbc"
          },
          {
            "url": "https://huntr.com/bounties/8ea058a7-4ef8-4baf-9198-bc0147fc543c"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3574",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:12.750",
        "lastModified": "2024-04-16T00:15:12.750",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "In scrapy version 2.10.1, an issue was identified where the Authorization header, containing credentials for server authentication, is leaked to a third-party site during a cross-domain redirect. This vulnerability arises from the failure to remove the Authorization header when redirecting across domains. The exposure of the Authorization header to unauthorized actors could potentially allow for account hijacking.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://github.com/scrapy/scrapy/commit/5bcb8fd5019c72d05c4a96da78a7fcb6ecb55b75"
          },
          {
            "url": "https://huntr.com/bounties/49974321-2718-43e3-a152-62b16eed72a9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3575",
        "sourceIdentifier": "security@huntr.dev",
        "published": "2024-04-16T00:15:12.930",
        "lastModified": "2024-04-16T00:15:12.930",
        "baseScore": 5.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Cross-site Scripting (XSS) - Stored in mindsdb/mindsdb",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://huntr.com/bounties/5f720b48-ddeb-4f2a-830f-a3dd15d5daa2"
          }
        ]
      }
    }
  ]
}