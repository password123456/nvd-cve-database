{
  "totalResults": 10,
  "datePublished": "2024-04-05T09:00:05.899514Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-29049",
        "sourceIdentifier": "secure@microsoft.com",
        "published": "2024-04-04T22:15:08.827",
        "lastModified": "2024-04-04T22:15:08.827",
        "baseScore": 4.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.0,
        "impactScore": 2.7,
        "description": "Microsoft Edge (Chromium-based) Webview2 Spoofing Vulnerability",
        "cweIds": null,
        "references": [
          {
            "url": "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-29049"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29981",
        "sourceIdentifier": "secure@microsoft.com",
        "published": "2024-04-04T22:15:09.153",
        "lastModified": "2024-04-04T22:15:09.153",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "Microsoft Edge (Chromium-based) Spoofing Vulnerability",
        "cweIds": null,
        "references": [
          {
            "url": "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-29981"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3316",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-04-04T22:15:09.420",
        "lastModified": "2024-04-04T22:15:09.420",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "A vulnerability was found in SourceCodester Computer Laboratory Management System 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /admin/category/view_category.php. The manipulation of the argument id leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-259387.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/adminininin/blob/blob/main/2.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.259387"
          },
          {
            "url": "https://vuldb.com/?id.259387"
          },
          {
            "url": "https://vuldb.com/?submit.309584"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-21894",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-04-04T23:15:15.640",
        "lastModified": "2024-04-04T23:15:15.640",
        "baseScore": 8.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.2,
        "description": "A heap overflow vulnerability in IPSec component of Ivanti Connect Secure (9.x, 22.x) and Ivanti Policy Secure allows an unauthenticated malicious user to send specially crafted requests in-order-to crash the service thereby causing a DoS attack. In certain conditions this may lead to execution of arbitrary code ",
        "cweIds": null,
        "references": [
          {
            "url": "https://forums.ivanti.com/s/article/SA-CVE-2024-21894-Heap-Overflow-CVE-2024-22052-Null-Pointer-Dereference-CVE-2024-22053-Heap-Overflow-and-CVE-2024-22023-XML-entity-expansion-or-XXE-for-Ivanti-Connect-Secure-and-Ivanti-Policy-Secure-Gateways?language=en_US"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27981",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-04-04T23:15:15.837",
        "lastModified": "2024-04-04T23:15:15.837",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A Command Injection vulnerability found in a Self-Hosted UniFi Network Servers (Linux) with UniFi Network Application (Version 8.0.28 and earlier) allows a malicious actor with UniFi Network Application Administrator credentials to escalate privileges to root on the host device.\nAffected Products:\nUniFi Network Application (Version 8.0.28 and earlier) .\nMitigation:\nUpdate UniFi Network Application to Version 8.1.113 or later.",
        "cweIds": null,
        "references": [
          {
            "url": "https://community.ui.com/releases/Security-Advisory-Bulletin-038-038/9d13fead-47de-4372-b2c1-745b8d6b0399"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31206",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-04T23:15:15.897",
        "lastModified": "2024-04-04T23:15:15.897",
        "baseScore": 8.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.2,
        "description": "dectalk-tts is a Node package to interact with the aeiou Dectalk web API. In `dectalk-tts@1.0.0`, network requests to the third-party API are sent over HTTP, which is unencrypted. Unencrypted traffic can be easily intercepted and modified by attackers. Anyone who uses the package could be the victim of a man-in-the-middle (MITM) attack. The network request was upgraded to HTTPS in version `1.0.1`. There are no workarounds, but some precautions include not sending any sensitive information and carefully verifying the API response before saving it.",
        "cweIds": [
          {
            "id": "CWE-300",
            "description": "Channel Accessible by Non-Endpoint"
          },
          {
            "id": "CWE-319",
            "description": "Cleartext Transmission of Sensitive Information"
          },
          {
            "id": "CWE-598",
            "description": "Use of GET Request Method With Sensitive Query Strings"
          }
        ],
        "references": [
          {
            "url": "https://github.com/JstnMcBrd/dectalk-tts/blob/b3e92156cbb699218ac9b9c7d8979abd0e635767/src/index.ts#L18"
          },
          {
            "url": "https://github.com/JstnMcBrd/dectalk-tts/commit/3600d8ac156f27da553ac4ead46d16989a350105"
          },
          {
            "url": "https://github.com/JstnMcBrd/dectalk-tts/issues/3"
          },
          {
            "url": "https://github.com/JstnMcBrd/dectalk-tts/pull/4"
          },
          {
            "url": "https://github.com/JstnMcBrd/dectalk-tts/security/advisories/GHSA-6cf6-8hvr-r68w"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31210",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-04T23:15:16.127",
        "lastModified": "2024-04-04T23:15:16.127",
        "baseScore": 7.6,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.0,
        "impactScore": 6.0,
        "description": "WordPress is an open publishing platform for the Web. It's possible for a file of a type other than a zip file to be submitted as a new plugin by an administrative user on the Plugins -> Add New -> Upload Plugin screen in WordPress. If FTP credentials are requested for installation (in order to move the file into place outside of the `uploads` directory) then the uploaded file remains temporary available in the Media Library despite it not being allowed. If the `DISALLOW_FILE_EDIT` constant is set to `true` on the site _and_ FTP credentials are required when uploading a new theme or plugin, then this technically allows an RCE when the user would otherwise have no means of executing arbitrary PHP code. This issue _only_ affects Administrator level users on single site installations, and Super Admin level users on Multisite installations where it's otherwise expected that the user does not have permission to upload or execute arbitrary PHP code. Lower level users are not affected. Sites where the `DISALLOW_FILE_MODS` constant is set to `true` are not affected. Sites where an administrative user either does not need to enter FTP credentials or they have access to the valid FTP credentials, are not affected. The issue was fixed in WordPress 6.4.3 on January 30, 2024 and backported to versions 6.3.3, 6.2.4, 6.1.5, 6.0.7, 5.9.9, 5.8.9, 5.7.11, 5.6.13, 5.5.14, 5.4.15, 5.3.17, 5.2.20, 5.1.18, 5.0.21, 4.9.25, 2.8.24, 4.7.28, 4.6.28, 4.5.31, 4.4.32, 4.3.33, 4.2.37, and 4.1.40. A workaround is available. If the `DISALLOW_FILE_MODS` constant is defined as `true` then it will not be possible for any user to upload a plugin and therefore this issue will not be exploitable.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          }
        ],
        "references": [
          {
            "url": "https://github.com/WordPress/wordpress-develop/security/advisories/GHSA-x79f-xrjv-jx5r"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31211",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-04T23:15:16.333",
        "lastModified": "2024-04-04T23:15:16.333",
        "baseScore": 5.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 2.7,
        "description": "WordPress is an open publishing platform for the Web. Unserialization of instances of the `WP_HTML_Token` class allows for code execution via its `__destruct()` magic method. This issue was fixed in WordPress 6.4.2 on December 6th, 2023. Versions prior to 6.4.0 are not affected.",
        "cweIds": [
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          }
        ],
        "references": [
          {
            "url": "https://github.com/WordPress/wordpress-develop/security/advisories/GHSA-m257-q4m5-j653"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31212",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-04T23:15:16.540",
        "lastModified": "2024-04-04T23:15:16.540",
        "baseScore": 6.7,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 5.5,
        "description": "InstantCMS is a free and open source content management system. A SQL injection vulnerability affects instantcms v2.16.2 in which an attacker with administrative privileges can cause the application to execute unauthorized SQL code. The vulnerability exists in index_chart_data action, which receives an input from user and passes it unsanitized to the core model `filterFunc` function that further embeds this data in an SQL statement. This allows attackers to inject unwanted SQL code into the statement. The `period` should be escaped before inserting it in the query. As of time of publication, a patched version is not available.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          },
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/instantsoft/icms2/blob/4691a1524780e74107f6009b48d91e17a81b0fa1/system/controllers/admin/actions/index_chart_data.php#L190"
          },
          {
            "url": "https://github.com/instantsoft/icms2/blob/4691a1524780e74107f6009b48d91e17a81b0fa1/system/core/model.php#L744"
          },
          {
            "url": "https://github.com/instantsoft/icms2/security/advisories/GHSA-qx95-w566-73fw"
          },
          {
            "url": "https://user-images.githubusercontent.com/109034767/300806111-a33d9548-d99f-4034-bef3-fbd7fa62c37f.png"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-31498",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-04T23:15:16.743",
        "lastModified": "2024-04-04T23:15:16.743",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "ykman-gui (aka YubiKey Manager GUI) before 1.2.6 on Windows, when Edge is not used, allows privilege escalation because browser windows can open as Administrator.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.yubico.com/support/security-advisories/ysa-2024-01/"
          }
        ]
      }
    }
  ]
}