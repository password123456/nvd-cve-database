{
  "totalResults": 12,
  "datePublished": "2024-04-26T05:00:04.588891Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-2905",
        "sourceIdentifier": "secalert@redhat.com",
        "published": "2024-04-25T18:15:08.037",
        "lastModified": "2024-04-25T18:15:08.037",
        "baseScore": 6.2,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.5,
        "impactScore": 3.6,
        "description": "A security vulnerability has been discovered within rpm-ostree, pertaining to the /etc/shadow file in default builds having the world-readable bit enabled. This issue arises from the default permissions being set at a higher level than recommended, potentially exposing sensitive authentication data to unauthorized access.",
        "cweIds": [
          {
            "id": "CWE-732",
            "description": "Incorrect Permission Assignment for Critical Resource"
          }
        ],
        "references": [
          {
            "url": "https://access.redhat.com/security/cve/CVE-2024-2905"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2271585"
          },
          {
            "url": "https://github.com/coreos/rpm-ostree/security/advisories/GHSA-2m76-cwhg-7wv6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32645",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-25T18:15:08.593",
        "lastModified": "2024-04-25T18:15:08.593",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Vyper is a pythonic Smart Contract Language for the Ethereum virtual machine. In versions 0.3.10 and prior, incorrect values can be logged when `raw_log` builtin is called with memory or storage arguments to be used as topics. A contract search was performed and no vulnerable contracts were found in production. The `build_IR` function of the `RawLog` class fails to properly unwrap the variables provided as topics. Consequently, incorrect values are logged as topics. As of time of publication, no fixed version is available.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-xchq-w5r3-4wg3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32646",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-25T18:15:08.780",
        "lastModified": "2024-04-25T18:15:08.780",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Vyper is a pythonic Smart Contract Language for the Ethereum virtual machine. In versions 0.3.10 and prior, using the `slice` builtin can result in a double eval vulnerability when the buffer argument is either `msg.data`, `self.code` or `<address>.code` and either the `start` or `length` arguments have side-effects. It can be easily triggered only with the versions `<0.3.4` as `0.3.4` introduced the unique symbol fence. No vulnerable production contracts were found. Additionally, double evaluation of side-effects should be easily discoverable in client tests. As such, the impact is low. As of time of publication, no fixed versions are available.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-r56x-j438-vw5m"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32647",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-25T18:15:08.963",
        "lastModified": "2024-04-25T18:15:08.963",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Vyper is a pythonic Smart Contract Language for the Ethereum virtual machine. In versions 0.3.10 and prior, using the `create_from_blueprint` builtin can result in a double eval vulnerability when `raw_args=True` and the `args` argument has side-effects. It can be seen that the `_build_create_IR` function of the `create_from_blueprint` builtin doesn't cache the mentioned `args` argument to the stack. As such, it can be evaluated multiple times (instead of retrieving the value from the stack). No vulnerable production contracts were found. Additionally, double evaluation of side-effects should be easily discoverable in client tests. As such, the impact is low. As of time of publication, no fixed versions exist.",
        "cweIds": [
          {
            "id": "CWE-95",
            "description": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/vyperlang/vyper/blob/cedf7087e68e67c7bfbd47ae95dcb16b81ad2e02/vyper/builtins/functions.py#L1847"
          },
          {
            "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-3whq-64q2-qfj6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32648",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-25T18:15:09.157",
        "lastModified": "2024-04-25T18:15:09.157",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Vyper is a pythonic Smart Contract Language for the Ethereum virtual machine. Prior to version 0.3.0, default functions don't respect nonreentrancy keys and the lock isn't emitted. No vulnerable production contracts were found. Additionally, using a lock on a `default` function is a very sparsely used pattern. As such, the impact is low. Version 0.3.0 contains a patch for the issue.",
        "cweIds": [
          {
            "id": "CWE-667",
            "description": "Improper Locking"
          }
        ],
        "references": [
          {
            "url": "https://github.com/vyperlang/vyper/commit/93287e5ac184b53b395c907d40701f721daf8177"
          },
          {
            "url": "https://github.com/vyperlang/vyper/issues/2455"
          },
          {
            "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-m2v9-w374-5hj9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32649",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-25T18:15:09.350",
        "lastModified": "2024-04-25T18:15:09.350",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Vyper is a pythonic Smart Contract Language for the Ethereum virtual machine. In versions 0.3.10 and prior, using the `sqrt` builtin can result in double eval vulnerability when the argument has side-effects. It can be seen that the `build_IR` function of the `sqrt` builtin doesn't cache the argument to the stack. As such, it can be evaluated multiple times (instead of retrieving the value from the stack). No vulnerable production contracts were found. Additionally, double evaluation of side-effects should be easily discoverable in client tests. As such, the impact is low. As of time of publication, no fixed versions are available.",
        "cweIds": [
          {
            "id": "CWE-95",
            "description": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-5jrj-52x8-m64h"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3508",
        "sourceIdentifier": "secalert@redhat.com",
        "published": "2024-04-25T18:15:09.567",
        "lastModified": "2024-04-25T18:15:09.567",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "A flaw was found in Bombastic, which allows authenticated users to upload compressed (bzip2 or zstd) SBOMs. The API endpoint verifies the presence of some fields and values in the JSON. To perform this verification, the uploaded file must first be decompressed.",
        "cweIds": null,
        "references": [
          {
            "url": "https://access.redhat.com/security/cve/CVE-2024-3508"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2274109"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3622",
        "sourceIdentifier": "secalert@redhat.com",
        "published": "2024-04-25T18:15:09.747",
        "lastModified": "2024-04-25T18:15:09.747",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "A flaw was found when using mirror-registry to install Quay. It uses a default secret, which is stored in plain-text format in one of the configuration template files. This issue may lead to all instances of Quay deployed using mirror-registry to have the same secret key. This flaw allows a malicious actor to craft session cookies and as a consequence, it may lead to gaining access to the affected Quay instance.",
        "cweIds": [
          {
            "id": "CWE-256",
            "description": "Plaintext Storage of a Password"
          }
        ],
        "references": [
          {
            "url": "https://access.redhat.com/security/cve/CVE-2024-3622"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2274400"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3623",
        "sourceIdentifier": "secalert@redhat.com",
        "published": "2024-04-25T18:15:09.980",
        "lastModified": "2024-04-25T18:15:09.980",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "A flaw was found when using mirror-registry to install Quay. It uses a default database secret key, which is stored in plain-text format in one of the configuration template files. This issue may lead to all instances of Quay deployed using mirror-registry to have the same database secret key. This flaw allows a malicious actor to access sensitive information from Quay's database.",
        "cweIds": [
          {
            "id": "CWE-256",
            "description": "Plaintext Storage of a Password"
          }
        ],
        "references": [
          {
            "url": "https://access.redhat.com/security/cve/CVE-2024-3623"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2274404"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3624",
        "sourceIdentifier": "secalert@redhat.com",
        "published": "2024-04-25T18:15:10.170",
        "lastModified": "2024-04-25T18:15:10.170",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.2,
        "description": "A flaw was found in how Quay's database is stored in plain-text in mirror-registry on the jinja's config.yaml file. This flaw allows a malicious actor with access to this file to gain access to Quay's database.",
        "cweIds": [
          {
            "id": "CWE-256",
            "description": "Plaintext Storage of a Password"
          }
        ],
        "references": [
          {
            "url": "https://access.redhat.com/security/cve/CVE-2024-3624"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2274407"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3625",
        "sourceIdentifier": "secalert@redhat.com",
        "published": "2024-04-25T18:15:10.360",
        "lastModified": "2024-04-25T18:15:10.360",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.2,
        "description": "A flaw was found in Quay, where Quay's database is stored in plain text in mirror-registry on Jinja's config.yaml file. This issue leaves the possibility of a malicious actor with access to this file to gain access to Quay's Redis instance.",
        "cweIds": [
          {
            "id": "CWE-256",
            "description": "Plaintext Storage of a Password"
          }
        ],
        "references": [
          {
            "url": "https://access.redhat.com/security/cve/CVE-2024-3625"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2274408"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30939",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-25T19:15:49.970",
        "lastModified": "2024-04-25T19:15:49.970",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue discovered in Yealink VP59 Teams Editions with firmware version 91.15.0.118 allows a physically proximate attacker to gain control of an account via a flaw in the factory reset procedure.",
        "cweIds": null,
        "references": [
          {
            "url": "https://medium.com/%40deepsahu1/yealink-ip-phone-account-take-over-9bf9e7b847c0?source=friends_link&sk=b0d664dd5b3aad5b758e4934aca997ad"
          }
        ]
      }
    }
  ]
}