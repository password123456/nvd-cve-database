{
  "totalResults": 3,
  "datePublished": "2024-04-01T19:00:03.883519Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-25080",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-01T09:15:50.930",
        "lastModified": "2024-04-01T12:49:00.877",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "WebMail in Axigen 10.x before 10.3.3.62 allows XSS via the image attachment viewer.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.axigen.com/knowledgebase/Axigen-WebMail-XSS-Vulnerability-CVE-2024-25080-_401.html"
          },
          {
            "url": "https://www.axigen.com/mail-server/axigen-older-features/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-26653",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-04-01T09:15:51.010",
        "lastModified": "2024-04-01T12:49:00.877",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nusb: misc: ljca: Fix double free in error handling path\nWhen auxiliary_device_add() returns error and then calls\nauxiliary_device_uninit(), callback function ljca_auxdev_release\ncalls kfree(auxdev->dev.platform_data) to free the parameter data\nof the function ljca_new_client_device. The callers of\nljca_new_client_device shouldn't call kfree() again\nin the error handling path to free the platform data.\nFix this by cleaning up the redundant kfree() in all callers and\nadding kfree() the passed in platform_data on errors which happen\nbefore auxiliary_device_init() succeeds .",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/7c9631969287a5366bc8e39cd5abff154b35fb80"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-26654",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-04-01T09:15:51.063",
        "lastModified": "2024-04-01T12:49:00.877",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nALSA: sh: aica: reorder cleanup operations to avoid UAF bugs\nThe dreamcastcard->timer could schedule the spu_dma_work and the\nspu_dma_work could also arm the dreamcastcard->timer.\nWhen the snd_pcm_substream is closing, the aica_channel will be\ndeallocated. But it could still be dereferenced in the worker\nthread. The reason is that del_timer() will return directly\nregardless of whether the timer handler is running or not and\nthe worker could be rescheduled in the timer handler. As a result,\nthe UAF bug will happen. The racy situation is shown below:\n      (Thread 1)                 |      (Thread 2)\nsnd_aicapcm_pcm_close()          |\n ...                             |  run_spu_dma() //worker\n                                 |    mod_timer()\n  flush_work()                   |\n  del_timer()                    |  aica_period_elapsed() //timer\n  kfree(dreamcastcard->channel)  |    schedule_work()\n                                 |  run_spu_dma() //worker\n  ...                            |    dreamcastcard->channel-> //USE\nIn order to mitigate this bug and other possible corner cases,\ncall mod_timer() conditionally in run_spu_dma(), then implement\nPCM sync_stop op to cancel both the timer and worker. The sync_stop\nop will be called from PCM core appropriately when needed.",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/051e0840ffa8ab25554d6b14b62c9ab9e4901457"
          }
        ]
      }
    }
  ]
}