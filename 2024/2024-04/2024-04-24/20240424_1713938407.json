{
  "totalResults": 8,
  "datePublished": "2024-04-24T15:00:07.201298Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-28613",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-24T04:15:18.820",
        "lastModified": "2024-04-24T13:39:42.883",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "SQL Injection vulnerability in PHP Task Management System v.1.0 allows a remote attacker to escalate privileges and obtain sensitive information via the task_id parameter of the task-details.php, and edit-task.php component.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/hakkitoklu/hunt/blob/main/PHP%20Task%20Management%20System/sqli.md"
          },
          {
            "url": "https://www.sourcecodester.com/php/17217/employee-management-system-php-and-mysql-free-download.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-7253",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-04-24T05:15:46.863",
        "lastModified": "2024-04-24T13:39:42.883",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/aeefcc01-bbbf-4d86-9cfd-ea0f9a85e1a5/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1743",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-04-24T05:15:46.977",
        "lastModified": "2024-04-24T13:39:42.883",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WooCommerce Customers Manager WordPress plugin before 29.8 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/3cb1f707-6093-42a7-a778-2b296bdf1735/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-1756",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-04-24T05:15:47.020",
        "lastModified": "2024-04-24T13:39:42.883",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The WooCommerce Customers Manager WordPress plugin before 29.8 does not have authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber, to call it and retrieve the list of customer email addresses along with their id, first name and last name",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/0baedd8d-2bbe-4091-bec4-f99e25d7290d/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2402",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-04-24T05:15:47.070",
        "lastModified": "2024-04-24T13:39:42.883",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/98e050cf-5686-4216-bad1-575decf3eaa7/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2404",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-04-24T05:15:47.113",
        "lastModified": "2024-04-24T13:39:42.883",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow low privilege users such as Subscribers to perform Stored Cross-Site Scripting attacks.",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/a2cb7167-9edc-4640-87eb-4c511639e5b7/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2972",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-04-24T05:15:47.160",
        "lastModified": "2024-04-24T13:39:42.883",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/27134a4f-a59b-40e9-8fc8-abe1f58672ad/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-3261",
        "sourceIdentifier": "contact@wpscan.com",
        "published": "2024-04-24T05:15:47.207",
        "lastModified": "2024-04-24T13:39:42.883",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed",
        "cweIds": null,
        "references": [
          {
            "url": "https://wpscan.com/vulnerability/5a0d5922-eefc-48e1-9681-b63e420bb8b3/"
          }
        ]
      }
    }
  ]
}