{
  "totalResults": 8,
  "datePublished": "2024-04-19T07:00:05.495056Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-20380",
        "sourceIdentifier": "ykramarz@cisco.com",
        "published": "2024-04-18T20:15:17.520",
        "lastModified": "2024-04-18T20:15:17.520",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "A vulnerability in the HTML parser of ClamAV could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device.\nThe vulnerability is due to an issue in the C to Rust foreign function interface. An attacker could exploit this vulnerability by submitting a crafted file containing HTML content to be scanned by ClamAV on an affected device. An exploit could allow the attacker to cause the ClamAV scanning process to terminate, resulting in a DoS condition on the affected software.",
        "cweIds": [
          {
            "id": "CWE-475",
            "description": "Undefined Behavior for Input to API"
          }
        ],
        "references": [
          {
            "url": "https://blog.clamav.net/2024/04/clamav-131-123-106-patch-versions.html"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32474",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-18T20:15:17.733",
        "lastModified": "2024-04-18T20:15:17.733",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.2,
        "description": "Sentry is an error tracking and performance monitoring platform. Prior to 24.4.1, when authenticating as a superuser to Sentry with a username and password, the password is leaked as cleartext in logs under the _event_: `auth-index.validate_superuser`. An attacker with access to the log data could use these leaked credentials to login to the Sentry system as superuser. Self-hosted users on affected versions should upgrade to 24.4.1 or later. Users can configure the logging level to exclude logs of the `INFO` level and only generate logs for levels at `WARNING` or more.",
        "cweIds": [
          {
            "id": "CWE-117",
            "description": "Improper Output Neutralization for Logs"
          },
          {
            "id": "CWE-312",
            "description": "Cleartext Storage of Sensitive Information"
          }
        ],
        "references": [
          {
            "url": "https://github.com/getsentry/sentry/commit/d5b34568d9f1c41362ccb62141532a0a2169512f"
          },
          {
            "url": "https://github.com/getsentry/sentry/pull/66393"
          },
          {
            "url": "https://github.com/getsentry/sentry/pull/69148"
          },
          {
            "url": "https://github.com/getsentry/sentry/security/advisories/GHSA-6cjm-4pxw-7xp9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32477",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-18T20:15:17.927",
        "lastModified": "2024-04-18T20:15:17.927",
        "baseScore": 7.7,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.5,
        "impactScore": 5.2,
        "description": "Deno is a JavaScript, TypeScript, and WebAssembly runtime with secure defaults. By using ANSI escape sequences and a race between `libc::tcflush(0, libc::TCIFLUSH)` and reading standard input, it's possible to manipulate the permission prompt and force it to allow an unsafe action regardless of the user input. Some ANSI escape sequences act as a info request to the master terminal emulator and the terminal emulator sends back the reply in the PTY channel. standard streams also use this channel to send and get data. For example the `\\033[6n` sequence requests the current cursor position. These sequences allow us to append data to the standard input of Deno. This vulnerability allows an attacker to bypass Deno permission policy.  This vulnerability is fixed in 1.42.2.",
        "cweIds": [
          {
            "id": "CWE-362",
            "description": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')"
          },
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/denoland/deno/security/advisories/GHSA-95cj-3hr2-7j5j"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30107",
        "sourceIdentifier": "psirt@hcl.com",
        "published": "2024-04-18T21:15:07.287",
        "lastModified": "2024-04-18T21:15:07.287",
        "baseScore": 3.5,
        "baseSeverity": "LOW",
        "exploitabilityScore": 2.1,
        "impactScore": 1.4,
        "description": "HCL Connections contains a broken access control vulnerability that may expose sensitive information to unauthorized users in certain scenarios.",
        "cweIds": null,
        "references": [
          {
            "url": "https://support.hcltechsw.com/csm?id=kb_article&sysparm_article=KB0112489"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30920",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-18T21:15:07.447",
        "lastModified": "2024-04-18T21:15:07.447",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Cross Site Scripting vulnerability in DerbyNet v9.0 and below allows a remote attacker to execute arbitrary code via the render-document.php component.",
        "cweIds": null,
        "references": [
          {
            "url": "https://chocapikk.com/posts/2024/derbynet-vulnerabilities/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30921",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-18T21:15:07.513",
        "lastModified": "2024-04-18T21:15:07.513",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Cross Site Scripting vulnerability in DerbyNet v9.0 and below allows a remote attacker to execute arbitrary code via the photo.php component.",
        "cweIds": null,
        "references": [
          {
            "url": "https://chocapikk.com/posts/2024/derbynet-vulnerabilities/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30922",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-18T21:15:07.570",
        "lastModified": "2024-04-18T21:15:07.570",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "SQL Injection vulnerability in DerbyNet v9.0 allows a remote attacker to execute arbitrary code via the where Clause in Award Document Rendering.",
        "cweIds": null,
        "references": [
          {
            "url": "https://chocapikk.com/posts/2024/derbynet-vulnerabilities/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30923",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-18T21:15:07.630",
        "lastModified": "2024-04-18T21:15:07.630",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "SQL Injection vulnerability in DerbyNet v9.0 and below allows a remote attacker to execute arbitrary code via the where Clause in Racer Document Rendering",
        "cweIds": null,
        "references": [
          {
            "url": "https://chocapikk.com/posts/2024/derbynet-vulnerabilities/"
          }
        ]
      }
    }
  ]
}