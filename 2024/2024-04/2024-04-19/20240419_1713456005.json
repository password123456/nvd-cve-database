{
  "totalResults": 10,
  "datePublished": "2024-04-19T01:00:05.189947Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-27306",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-18T15:15:29.050",
        "lastModified": "2024-04-18T18:25:55.267",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. A XSS vulnerability exists on index pages for static file handling. This vulnerability is fixed in 3.9.4. We have always recommended using a reverse proxy server (e.g. nginx) for serving static files. Users following the recommendation are unaffected. Other users can disable `show_index` if unable to upgrade.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          },
          {
            "id": "CWE-80",
            "description": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/aio-libs/aiohttp/commit/28335525d1eac015a7e7584137678cbb6ff19397"
          },
          {
            "url": "https://github.com/aio-libs/aiohttp/pull/8319"
          },
          {
            "url": "https://github.com/aio-libs/aiohttp/security/advisories/GHSA-7gpw-8wmc-pm8g"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-28185",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-18T15:15:29.283",
        "lastModified": "2024-04-18T18:25:55.267",
        "baseScore": 10.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 6.0,
        "description": "Judge0 is an open-source online code execution system. The application does not account for symlinks placed inside the sandbox directory, which can be leveraged by an attacker to write to arbitrary files and gain code execution outside of the sandbox. When executing a submission, Judge0 writes a `run_script` to the sandbox directory. The security issue is that an attacker can create a symbolic link (symlink) at the path `run_script` before this code is executed, resulting in the `f.write` writing to an arbitrary file on the unsandboxed system. An attacker can leverage this vulnerability to overwrite scripts on the system and gain code execution outside of the sandbox.",
        "cweIds": [
          {
            "id": "CWE-59",
            "description": "Improper Link Resolution Before File Access ('Link Following')"
          },
          {
            "id": "CWE-61",
            "description": "UNIX Symbolic Link (Symlink) Following"
          }
        ],
        "references": [
          {
            "url": "https://github.com/judge0/judge0/blob/v1.13.0/app/jobs/isolate_job.rb#L197-L201"
          },
          {
            "url": "https://github.com/judge0/judge0/commit/846d5839026161bb299b7a35fd3b2afb107992fc"
          },
          {
            "url": "https://github.com/judge0/judge0/security/advisories/GHSA-h9g2-45c8-89cf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-28189",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-18T15:15:29.480",
        "lastModified": "2024-04-18T18:25:55.267",
        "baseScore": 10.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 6.0,
        "description": "Judge0 is an open-source online code execution system. The application uses the UNIX chown command on an untrusted file within the sandbox. An attacker can abuse this by creating a symbolic link (symlink) to a file outside the sandbox, allowing the attacker to run chown on arbitrary files outside of the sandbox. This vulnerability is not impactful on it's own, but it can be used to bypass the patch for CVE-2024-28185 and obtain a complete sandbox escape. This vulnerability is fixed in 1.13.1.",
        "cweIds": [
          {
            "id": "CWE-59",
            "description": "Improper Link Resolution Before File Access ('Link Following')"
          },
          {
            "id": "CWE-61",
            "description": "UNIX Symbolic Link (Symlink) Following"
          }
        ],
        "references": [
          {
            "url": "https://github.com/judge0/judge0/blob/v1.13.0/app/jobs/isolate_job.rb#L232"
          },
          {
            "url": "https://github.com/judge0/judge0/commit/f3b8547b3b67863e4ea0ded3adcb963add56addd"
          },
          {
            "url": "https://github.com/judge0/judge0/security/advisories/GHSA-3xpw-36v7-2cmg"
          },
          {
            "url": "https://github.com/judge0/judge0/security/advisories/GHSA-h9g2-45c8-89cf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29021",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-18T15:15:29.667",
        "lastModified": "2024-04-18T18:25:55.267",
        "baseScore": 9.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 2.2,
        "impactScore": 6.0,
        "description": "Judge0 is an open-source online code execution system. The default configuration of Judge0 leaves the service vulnerable to a sandbox escape via Server Side Request Forgery (SSRF). This allows an attacker with sufficient access to the Judge0 API to obtain unsandboxed code execution as root on the target machine. This vulnerability is fixed in 1.13.1.",
        "cweIds": [
          {
            "id": "CWE-1393",
            "description": "Use of Default Password"
          },
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/judge0/judge0/blob/ad66f77b131dbbebf2b9ff8083dca9a68680b3e5/app/jobs/isolate_job.rb#L203-L230"
          },
          {
            "url": "https://github.com/judge0/judge0/security/advisories/GHSA-q7vg-26pg-v5hr"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2796",
        "sourceIdentifier": "security@puppet.com",
        "published": "2024-04-18T15:15:29.857",
        "lastModified": "2024-04-18T18:25:55.267",
        "baseScore": 9.3,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 4.7,
        "description": "A server-side request forgery (SSRF) was discovered in the Akana Community Manager Developer Portal in versions prior to and including 2022.1.3. Reported by Jakob Antonsson.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://portal.perforce.com/s/detail/a91PA000001STuXYAW"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30257",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-18T15:15:30.043",
        "lastModified": "2024-04-18T18:25:55.267",
        "baseScore": 3.9,
        "baseSeverity": "LOW",
        "exploitabilityScore": 0.5,
        "impactScore": 3.4,
        "description": "1Panel is an open source Linux server operation and maintenance management panel. The password verification in the source code uses the != symbol instead hmac.Equal. This may lead to a timing attack vulnerability. This vulnerability is fixed in 1.10.3-lts.",
        "cweIds": [
          {
            "id": "CWE-203",
            "description": "Observable Discrepancy"
          }
        ],
        "references": [
          {
            "url": "https://github.com/1Panel-dev/1Panel/blob/dev/backend/app/service/auth.go#L81C5-L81C26"
          },
          {
            "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-6m9h-2pr2-9j8f"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-30564",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-04-18T15:15:30.220",
        "lastModified": "2024-04-18T18:25:55.267",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "An issue inandrei-tatar nora-firebase-common between v.1.0.41 and v.1.12.2 allows a remote attacker to execute arbitrary code via a crafted script to the updateState parameter of the updateStateInternal method.",
        "cweIds": null,
        "references": [
          {
            "url": "https://gist.github.com/mestrtee/5dc2c948c2057f98d3de0a9790903c6c"
          },
          {
            "url": "https://github.com/andrei-tatar/nora-firebase-common/commit/bf30b75d51be04f6c1f884561a223226c890f01b"
          },
          {
            "url": "https://github.com/andrei-tatar/nora-firebase-common/issues/9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32466",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-18T15:15:30.300",
        "lastModified": "2024-04-18T18:25:55.267",
        "baseScore": 2.7,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.2,
        "impactScore": 1.4,
        "description": "Tolgee is an open-source localization platform. For the `/v2/projects/translations` and `/v2/projects/{projectId}/translations` endpoints, translation data was returned even when API key was missing `translation.view` scope. However, it was impossible to fetch the data when user was missing this scope. So this is only relevant for API keys generated by users permitted to `translation.view`. This vulnerability is fixed in v3.57.2",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/tolgee/tolgee-platform/commit/f71213925d6f80019f841db0ead9baa7488c1821"
          },
          {
            "url": "https://github.com/tolgee/tolgee-platform/security/advisories/GHSA-r95p-fqqv-fppc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32470",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-18T15:15:30.487",
        "lastModified": "2024-04-18T18:25:55.267",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 5.2,
        "description": "Tolgee is an open-source localization platform. When API key created by admin user is used it bypasses the permission check at all. This error was introduced in v3.57.2 and immediately fixed in v3.57.4. ",
        "cweIds": [
          {
            "id": "CWE-863",
            "description": "Incorrect Authorization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/tolgee/tolgee-platform/commit/a0d861028d931f8a54387770eaf3a75031b81234"
          },
          {
            "url": "https://github.com/tolgee/tolgee-platform/security/advisories/GHSA-pm57-hcm8-38gw"
          },
          {
            "url": "https://github.com/tolgee/tolgee-platform/security/advisories/GHSA-r95p-fqqv-fppc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-32475",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-04-18T15:15:30.670",
        "lastModified": "2024-04-18T18:25:55.267",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Envoy is a cloud-native, open source edge and service proxy. When an upstream TLS cluster is used with `auto_sni` enabled, a request containing a `host`/`:authority` header longer than 255 characters triggers an abnormal termination of Envoy process. Envoy does not gracefully handle an error when setting SNI for outbound TLS connection. The error can occur when Envoy attempts to use the `host`/`:authority` header value longer than 255 characters as SNI for outbound TLS connection. SNI length is limited to 255 characters per the standard. Envoy always expects this operation to succeed and abnormally aborts the process when it fails. This vulnerability is fixed in 1.30.1, 1.29.4, 1.28.3, and 1.27.5.",
        "cweIds": [
          {
            "id": "CWE-253",
            "description": "Incorrect Check of Function Return Value"
          },
          {
            "id": "CWE-617",
            "description": "Reachable Assertion"
          }
        ],
        "references": [
          {
            "url": "https://github.com/envoyproxy/envoy/commit/b47fc6648d7c2dfe0093a601d44cb704b7bad382"
          },
          {
            "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-3mh5-6q8v-25wj"
          }
        ]
      }
    }
  ]
}