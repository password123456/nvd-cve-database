{
  "totalResults": 2,
  "datePublished": "2024-04-14T23:00:04.483387Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-24862",
        "sourceIdentifier": "security@openanolis.org",
        "published": "2024-04-14T13:15:48.400",
        "lastModified": "2024-04-14T13:15:48.400",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.8,
        "impactScore": 4.0,
        "description": "In function pci1xxxx_spi_probe, there is a potential null pointer that\nmay be caused by a failed memory allocation by the function devm_kzalloc.\nHence, a null pointer check needs to be added to prevent null pointer\ndereferencing later in the code.\nTo fix this issue, spi_bus->spi_int[iter] should be checked. The memory\nallocated by devm_kzalloc will be automatically released, so just directly\nreturn -ENOMEM without worrying about memory leaks.",
        "cweIds": [
          {
            "id": "CWE-476",
            "description": "NULL Pointer Dereference"
          }
        ],
        "references": [
          {
            "url": "https://bugzilla.openanolis.cn/show_bug.cgi?id=8748"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-24863",
        "sourceIdentifier": "security@openanolis.org",
        "published": "2024-04-14T13:15:49.330",
        "lastModified": "2024-04-14T13:15:49.330",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.8,
        "impactScore": 4.0,
        "description": "In malidp_mw_connector_reset, new memory is allocated with kzalloc, but \nno check is performed. In order to prevent null pointer dereferencing, \nensure that mw_state is checked before calling \n__drm_atomic_helper_connector_reset.",
        "cweIds": [
          {
            "id": "CWE-476",
            "description": "NULL Pointer Dereference"
          }
        ],
        "references": [
          {
            "url": "https://bugzilla.openanolis.cn/show_bug.cgi?id=8750"
          }
        ]
      }
    }
  ]
}