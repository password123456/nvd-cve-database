{
  "totalResults": 12,
  "datePublished": "2024-03-23T03:00:05.394019Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2023-23349",
        "sourceIdentifier": "vulnerability@kaspersky.com",
        "published": "2024-03-22T17:15:07.537",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": 2.2,
        "baseSeverity": "LOW",
        "exploitabilityScore": 0.8,
        "impactScore": 1.4,
        "description": "Kaspersky has fixed a security issue in Kaspersky Password Manager (KPM) for Windows that allowed a local user to recover the auto-filled credentials from a memory dump when the KPM extension for Google Chrome is used. To exploit the issue, an attacker must trick a user into visiting a login form of a website with the saved credentials, and the KPM extension must autofill these credentials. The attacker must then launch a malware module to steal those specific credentials.",
        "cweIds": [
          {
            "id": "CWE-316",
            "description": "Cleartext Storage of Sensitive Information in Memory"
          }
        ],
        "references": [
          {
            "url": "https://support.kaspersky.com/vulnerability/list-of-advisories/12430#180324"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-28861",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-03-22T17:15:07.770",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "Symfony 1 is a community-driven fork of the 1.x branch of Symfony, a PHP framework for web projects. Starting in version 1.1.0 and prior to version 1.5.19, Symfony 1 has a gadget chain due to dangerous deserialization in `sfNamespacedParameterHolder` class that would enable an attacker to get remote code execution if a developer deserializes user input in their project. Version 1.5.19 contains a patch for the issue.",
        "cweIds": [
          {
            "id": "CWE-502",
            "description": "Deserialization of Untrusted Data"
          }
        ],
        "references": [
          {
            "url": "https://github.com/FriendsOfSymfony1/symfony1/commit/0bd9d59c69221f49bfc8be8b871b79e12d7d171a"
          },
          {
            "url": "https://github.com/FriendsOfSymfony1/symfony1/security/advisories/GHSA-pv9j-c53q-h433"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29042",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-03-22T17:15:07.990",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Translate is a package that allows users to convert text to different languages on Node.js and the browser. Prior to version 3.0.0, an attacker controlling the second variable of the `translate` function is able to perform a cache poisoning attack. They can change the outcome of translation requests made by subsequent users. The `opt.id` parameter allows the overwriting of the cache key. If an attacker sets the `id` variable to the cache key that would be generated by another user, they can choose the response that user gets served. Version 3.0.0 fixes this issue.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/franciscop/translate/commit/7a2bf8b9f05f7c45c09683973ef4d8e995804aa4"
          },
          {
            "url": "https://github.com/franciscop/translate/commit/cc1ba03078102f83e0503a96f1a081489bb865d3"
          },
          {
            "url": "https://github.com/franciscop/translate/security/advisories/GHSA-882j-4vj5-7vmj"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29184",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-03-22T17:15:08.203",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": 8.0,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.9,
        "description": "FreeScout is a self-hosted help desk and shared mailbox. A Stored Cross-Site Scripting (XSS) vulnerability has been identified within the Signature Input Field of the FreeScout Application prior to version 1.8.128. Stored XSS occurs when user input is not properly sanitized and is stored on the server, allowing an attacker to inject malicious scripts that will be executed when other users access the affected page. In this case, the Support Agent User can inject malicious scripts into their signature, which will then be executed when viewed by the Administrator.\nThe application protects users against XSS attacks by enforcing a CSP policy, the CSP Policy is:  `script-src 'self' 'nonce-abcd'  `. The CSP policy only allows the inclusion of JS files that are present on the application server and doesn't allow any inline script or script other than nonce-abcd. The CSP policy was bypassed by uploading a JS file to the server by a POST request to /conversation/upload endpoint. After this, a working XSS payload was crafted by including the uploaded JS file link as the src of the script. This bypassed the CSP policy and XSS attacks became possible.\nThe impact of this vulnerability is severe as it allows an attacker to compromise the FreeScout Application. By exploiting this vulnerability, the attacker can perform various malicious actions such as forcing the Administrator to execute actions without their knowledge or consent. For instance, the attacker can force the Administrator to add a new administrator controlled by the attacker, thereby giving the attacker full control over the application. Alternatively, the attacker can elevate the privileges of a low-privileged user to Administrator, further compromising the security of the application. Attackers can steal sensitive information such as login credentials, session tokens, personal identifiable information (PII), and financial data. The vulnerability can also lead to defacement of the Application.\nVersion 1.8.128 contains a patch for this issue.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/freescout-helpdesk/freescout/security/advisories/GHSA-fffc-phh8-5h4v"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29185",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-03-22T17:15:08.440",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": 9.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 2.2,
        "impactScore": 6.0,
        "description": "FreeScout is a self-hosted help desk and shared mailbox. Versions prior to 1.8.128 are vulnerable to OS Command Injection in the /public/tools.php source file. The value of the php_path parameter is being executed as an OS command by the shell_exec function, without validating it. This allows an adversary to execute malicious OS commands on the server. A practical demonstration of the successful command injection attack extracted the /etc/passwd file of the server. This represented the complete compromise of the server hosting the FreeScout application. This attack requires an attacker to know the `App_Key` of the application. This limitation makes the Attack Complexity to be High. If an attacker gets hold of the `App_Key`, the attacker can compromise the Complete server on which the application is deployed. Version 1.8.128 contains a patch for this issue.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/freescout-helpdesk/freescout/security/advisories/GHSA-7p9x-ch4c-vqj9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29186",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-03-22T17:15:08.640",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Bref is an open-source project that helps users go serverless on Amazon Web Services with PHP. When Bref prior to version 2.1.17 is used with the Event-Driven Function runtime and the handler is a `RequestHandlerInterface`, then the Lambda event is converted to a PSR7 object. During the conversion process, if the request is a MultiPart, each part is parsed. In the parsing process, the `Content-Type` header of each part is read using the `Riverline/multipart-parser` library.\nThe library, in the `StreamedPart::parseHeaderContent` function, performs slow multi-byte string operations on the header value.\nPrecisely, the `mb_convert_encoding` function is used with the first (`$string`) and third (`$from_encoding`) parameters read from the header value.\nAn attacker could send specifically crafted requests which would force the server into performing long operations with a consequent long billed duration.\nThe attack has the following requirements and limitations: The Lambda should use the Event-Driven Function runtime and the `RequestHandlerInterface` handler and should implement at least an endpoint accepting POST requests; the attacker can send requests up to 6MB long (this is enough to cause a billed duration between 400ms and 500ms with the default 1024MB RAM Lambda image of Bref); and if the Lambda uses a PHP runtime <= php-82, the impact is higher as the billed duration in the default 1024MB RAM Lambda image of Bref could be brought to more than 900ms for each request. Notice that the vulnerability applies only to headers read from the request body as the request header has a limitation which allows a total maximum size of ~10KB.\nVersion 2.1.17 contains a fix for this issue.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://github.com/brefphp/bref/commit/5f7c0294628dbcec6305f638ff7e2dba8a1c2f45"
          },
          {
            "url": "https://github.com/brefphp/bref/security/advisories/GHSA-j4hq-f63x-f39r"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29338",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-03-22T17:15:08.833",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Anchor CMS v0.12.7 was discovered to contain a Cross-Site Request Forgery (CSRF) via /anchor/admin/categories/delete/2.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/PWwwww123/cms/blob/main/1.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29366",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-03-22T17:15:08.887",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A command injection vulnerability exists in the cgibin binary in DIR-845L router firmware <= v1.01KRb03.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/20Yiju/DLink/blob/master/DIR-845L/CI.md"
          },
          {
            "url": "https://www.dlink.com/en/security-bulletin/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29385",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-03-22T17:15:08.943",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "DIR-845L router <= v1.01KRb03 has an Unauthenticated remote code execution vulnerability in the cgibin binary via soapcgi_main function.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/songah119/Report/blob/main/CI-1.md"
          },
          {
            "url": "https://www.dlink.com/en/security-bulletin/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29499",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-03-22T17:15:08.993",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Anchor CMS v0.12.7 was discovered to contain a Cross-Site Request Forgery (CSRF) via /anchor/admin/users/delete/2.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/daddywolf/cms/blob/main/1.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2822",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-03-22T17:15:09.093",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "A vulnerability, which was classified as problematic, was found in DedeCMS 5.7. This affects an unknown part of the file /src/dede/vote_edit.php. The manipulation of the argument aid leads to cross-site request forgery. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-257709 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/E1CHO/demo/blob/main/29.pdf"
          },
          {
            "url": "https://vuldb.com/?ctiid.257709"
          },
          {
            "url": "https://vuldb.com/?id.257709"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2823",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-03-22T17:15:09.360",
        "lastModified": "2024-03-22T19:02:10.300",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "A vulnerability has been found in DedeCMS 5.7 and classified as problematic. This vulnerability affects unknown code of the file /src/dede/mda_main.php. The manipulation leads to cross-site request forgery. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-257710 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/lcg-22266/cms/blob/main/1.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.257710"
          },
          {
            "url": "https://vuldb.com/?id.257710"
          }
        ]
      }
    }
  ]
}