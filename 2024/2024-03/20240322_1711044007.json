{
  "totalResults": 15,
  "datePublished": "2024-03-22T03:00:07.199510Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2022-44595",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:07.600",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Improper Authentication vulnerability in Melapress WP 2FA allows Authentication Bypass.This issue affects WP 2FA: from n/a through 2.2.0.",
        "cweIds": [
          {
            "id": "CWE-287",
            "description": "Improper Authentication"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/wp-2fa/wordpress-wp2fa-plugin-2-2-0-broken-authentication-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-49837",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:07.917",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Uncontrolled Resource Consumption vulnerability in David Artiss Code Embed.This issue affects Code Embed: from n/a through 2.3.6.",
        "cweIds": [
          {
            "id": "CWE-400",
            "description": "Uncontrolled Resource Consumption"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/simple-embed-code/wordpress-embed-code-plugin-2-3-6-denial-of-service-attack-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27190",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:08.010",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "Missing Authorization vulnerability in Jean-David Daviet Download Media.This issue affects Download Media: from n/a through 1.4.2.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/download-media/wordpress-download-media-plugin-1-4-2-broken-access-control-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27277",
        "sourceIdentifier": "psirt@us.ibm.com",
        "published": "2024-03-21T17:15:08.230",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 6.2,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.5,
        "impactScore": 3.6,
        "description": "The private key for the IBM Storage Protect Plus Server 10.1.0 through 10.1.16 certificate can be disclosed, undermining the security of the certificate.  IBM X-Force ID:  285205.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/285205"
          },
          {
            "url": "https://www.ibm.com/support/pages/node/7144861"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27956",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:08.437",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 9.9,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.3,
        "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in ValvePress Automatic allows SQL Injection.This issue affects Automatic: from n/a through 3.92.0.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/wp-automatic/wordpress-automatic-plugin-3-92-0-unauthenticated-arbitrary-sql-execution-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27962",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:08.637",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 7.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 3.7,
        "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Florian 'fkrauthan' Krauthan allows Reflected XSS.This issue affects wp-mpdf: from n/a through 3.7.1.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/wp-mpdf/wordpress-wp-mpdf-plugin-3-7-1-reflected-cross-site-scripting-xss-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27963",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:08.850",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 3.7,
        "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Crisp allows Stored XSS.This issue affects Crisp: from n/a through 0.44.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/crisp/wordpress-crisp-live-chat-and-chatbot-plugin-0-44-cross-site-scripting-xss-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27964",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:09.060",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "Unrestricted Upload of File with Dangerous Type vulnerability in Gesundheit Bewegt GmbH Zippy.This issue affects Zippy: from n/a through 1.6.9.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/zippy/wordpress-zippy-plugin-1-6-9-arbitrary-file-upload-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27965",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:09.277",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 5.9,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.7,
        "impactScore": 3.7,
        "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in WPFunnels Team WPFunnels allows Stored XSS.This issue affects WPFunnels: from n/a through 3.0.6.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/wpfunnels/wordpress-wpfunnels-plugin-3-0-6-cross-site-scripting-xss-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-27968",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:09.487",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 7.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 3.7,
        "description": "Cross-Site Request Forgery (CSRF) vulnerability in Optimole Super Page Cache for Cloudflare allows Stored XSS.This issue affects Super Page Cache for Cloudflare: from n/a through 4.7.5.",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/wp-cloudflare-page-cache/wordpress-super-page-cache-for-cloudflare-plugin-4-7-5-cross-site-request-forgery-csrf-to-xss-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29180",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-03-21T17:15:09.690",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 7.4,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 4.0,
        "description": "Prior to versions 7.1.0, 6.1.2, and 5.3.4, the webpack-dev-middleware development middleware for devpack does not validate the supplied URL address sufficiently before returning the local file. It is possible to access any file on the developer's machine. The middleware can either work with the physical filesystem when reading the files or it can use a virtualized in-memory `memfs` filesystem. If `writeToDisk` configuration option is set to `true`, the physical filesystem is used. The `getFilenameFromUrl` method is used to parse URL and build the local file path. The public path prefix is stripped from the URL, and the `unsecaped` path suffix is appended to the `outputPath`. As the URL is not unescaped and normalized automatically before calling the midlleware, it is possible to use `%2e` and `%2f` sequences to perform path traversal attack.\nDevelopers using `webpack-dev-server` or `webpack-dev-middleware` are affected by the issue. When the project is started, an attacker might access any file on the developer's machine and exfiltrate the content. If the development server is listening on a public IP address (or `0.0.0.0`), an attacker on the local network can access the local files without any interaction from the victim (direct connection to the port). If the server allows access from third-party domains, an attacker can send a malicious link to the victim. When visited, the client side script can connect to the local server and exfiltrate the local files. Starting with fixed versions 7.1.0, 6.1.2, and 5.3.4, the URL is unescaped and normalized before any further processing.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/webpack/webpack-dev-middleware/blob/7ed24e0b9f53ad1562343f9f517f0f0ad2a70377/src/utils/getFilenameFromUrl.js#L82"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-middleware/blob/7ed24e0b9f53ad1562343f9f517f0f0ad2a70377/src/utils/setupOutputFileSystem.js#L21"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-middleware/commit/189c4ac7d2344ec132a4689e74dc837ec5be0132"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-middleware/commit/9670b3495da518fe667ff3428c5e4cb9f2f3d353"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-middleware/commit/e10008c762e4d5821ed6990348dabf0d4d93a10e"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-middleware/releases/tag/v5.3.4"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-middleware/releases/tag/v6.1.2"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-middleware/releases/tag/v7.1.0"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-middleware/security/advisories/GHSA-wr3j-pwj9-hqq6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-29916",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-03-21T17:15:09.897",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The dormakaba Saflok system before the November 2023 software update allows an attacker to unlock arbitrary doors at a property via forged keycards, if the attacker has obtained one active or expired keycard for the specific property, aka the \"Unsaflok\" issue. This occurs, in part, because the key derivation function relies only on a UID. This affects, for example, Saflok MT, and the Confidant, Quantum, RT, and Saffire series.",
        "cweIds": null,
        "references": [
          {
            "url": "https://news.ycombinator.com/item?id=39779291"
          },
          {
            "url": "https://unsaflok.com"
          },
          {
            "url": "https://www.wired.com/story/saflok-hotel-lock-unsaflok-hack-technique/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2578",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:09.960",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 5.9,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.7,
        "impactScore": 3.7,
        "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in WPCoder WP Coder allows Stored XSS.This issue affects WP Coder: from n/a through 3.5.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/wp-coder/wordpress-wp-coder-plugin-3-5-cross-site-scripting-xss-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2579",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:10.150",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 5.9,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.7,
        "impactScore": 3.7,
        "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Data443 Tracking Code Manager.This issue affects Tracking Code Manager: from n/a through 2.0.16.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/tracking-code-manager/wordpress-tracking-code-manager-plugin-2-0-16-cross-site-scripting-xss-vulnerability?_s_id=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-2580",
        "sourceIdentifier": "audit@patchstack.com",
        "published": "2024-03-21T17:15:10.357",
        "lastModified": "2024-03-21T19:47:03.943",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 3.7,
        "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in FunnelKit Automation By Autonami allows Stored XSS.This issue affects Automation By Autonami: from n/a through 2.8.2.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://patchstack.com/database/vulnerability/wp-marketing-automations/wordpress-recover-woocommerce-cart-abandonment-newsletter-email-marketing-marketing-automation-by-funnelkit-plugin-2-8-2-cross-site-scripting-xss-vulnerability?_s_id=cve"
          }
        ]
      }
    }
  ]
}