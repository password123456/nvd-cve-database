{
  "totalResults": 8,
  "datePublished": "2024-09-21T05:00:06.306659Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-42697",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-09-20T18:15:04.390",
        "lastModified": "2024-09-20T18:35:04.363",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "Cross Site Scripting vulnerability in Leotheme Leo Product Search Module v.2.1.6 and earlier allows a remote attacker to execute arbitrary code via the q parameter of the product search function.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/JustDinooo/CVEs/blob/main/CVE-2024-42697/poc.txt"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8612",
        "sourceIdentifier": "secalert@redhat.com",
        "published": "2024-09-20T18:15:04.743",
        "lastModified": "2024-09-20T18:15:04.743",
        "baseScore": 3.8,
        "baseSeverity": "LOW",
        "exploitabilityScore": 2.0,
        "impactScore": 1.4,
        "description": "A flaw was found in QEMU, in the virtio-scsi, virtio-blk, and virtio-crypto devices. The size for virtqueue_push as set in virtio_scsi_complete_req / virtio_blk_req_complete / virito_crypto_req_complete could be larger than the true size of the data which has been sent to guest. Once virtqueue_push() finally calls dma_memory_unmap to ummap the in_iov, it may call the address_space_write function to write back the data. Some uninitialized data may exist in the bounce.buffer, leading to an information leak.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://access.redhat.com/security/cve/CVE-2024-8612"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2313760"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42346",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T19:15:15.547",
        "lastModified": "2024-09-20T19:15:15.547",
        "baseScore": 7.6,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 4.7,
        "description": "Galaxy is a free, open-source system for analyzing data, authoring workflows, training and education, publishing tools, managing infrastructure, and more. The editor visualization, /visualizations endpoint, can be used to store HTML tags and trigger javascript execution upon edit operation. All supported branches of Galaxy (and more back to release_20.05) were amended with the supplied patches. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/galaxyproject/galaxy/security/advisories/GHSA-x6w7-3gwf-qr9r"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42351",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T19:15:15.857",
        "lastModified": "2024-09-20T19:15:15.857",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "Galaxy is a free, open-source system for analyzing data, authoring workflows, training and education, publishing tools, managing infrastructure, and more. An attacker can potentially replace the contents of public datasets resulting in data loss or tampering. All supported branches of Galaxy (and more back to release_21.05) were amended with the below patch. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://depot.galaxyproject.org/patch/GX-2024-0001/022da344a02bafd604402ac8e253e0014f6e2e08.patch"
          },
          {
            "url": "https://depot.galaxyproject.org/patch/GX-2024-0001/15060a6cb222f2fcfc687d0f0260f1eb1b9c757b.patch"
          },
          {
            "url": "https://depot.galaxyproject.org/patch/GX-2024-0001/235f1d8b400708556732b9dda788c919ebf3bb80.patch"
          },
          {
            "url": "https://github.com/galaxyproject/galaxy/security/advisories/GHSA-5639-cmph-9j4v"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45229",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-20T19:15:16.080",
        "lastModified": "2024-09-20T19:35:05.807",
        "baseScore": 6.6,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.7,
        "impactScore": 5.9,
        "description": "The Versa Director offers REST APIs for orchestration and management. By design, certain APIs, such as the login screen, banner display, and device registration, do not require authentication. However, it was discovered that for Directors directly connected to the Internet, one of these APIs can be exploited by injecting invalid arguments into a GET request, potentially exposing the authentication tokens of other currently logged-in users. These tokens can then be used to invoke additional APIs on port 9183. This exploit does not disclose any username or password information. \nCurrently, there are no workarounds in Versa Director. However, if there is Web Application Firewall (WAF) or API Gateway fronting the Versa Director, it can be used to block access to the URLs of vulnerable API.  /vnms/devicereg/device/* (on ports 9182 & 9183) and /versa/vnms/devicereg/device/* (on port 443). Versa recommends that Directors be upgraded to one of the remediated software versions. This vulnerability is not exploitable on Versa Directors not exposed to the Internet.We have validated that no Versa-hosted head ends have been affected by this vulnerability. Please contact Versa Technical Support or Versa account team for any further assistance.",
        "cweIds": [
          {
            "id": "CWE-306",
            "description": "Missing Authentication for Critical Function"
          }
        ],
        "references": [
          {
            "url": "https://security-portal.versa-networks.com/emailbulletins/66e4a8ebda545d61ec2b1ab9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-46654",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-09-20T19:15:16.473",
        "lastModified": "2024-09-20T20:35:08.100",
        "baseScore": 4.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.7,
        "impactScore": 2.7,
        "description": "A stored cross-site scripting (XSS) vulnerability in the Add Scheduled Task module of Maccms10 v2024.1000.4040 allows attackers to execute arbitrary web scripts or HTML via a crafted payload.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/magicblack/maccms10/issues/1183"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47061",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T19:15:16.550",
        "lastModified": "2024-09-20T19:15:16.550",
        "baseScore": 8.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.5,
        "description": "Plate is a javascript toolkit that makes it easier for you to develop with Slate, a popular framework for building text editors. One longstanding feature of Plate is the ability to add custom DOM attributes to any element or leaf using the `attributes` property. These attributes are passed to the node component using the `nodeProps` prop. It has come to our attention that this feature can be used for malicious purposes, including cross-site scripting (XSS) and information exposure (specifically, users' IP addresses and whether or not they have opened a malicious document). Note that the risk of information exposure via attributes is only relevant to applications in which web requests to arbitrary URLs are not ordinarily allowed. Plate editors that allow users to embed images from arbitrary URLs, for example, already carry the risk of leaking users' IP addresses to third parties. All Plate editors using an affected version of @udecode/plate-core are vulnerable to these information exposure attacks via the style attribute and other attributes that can cause web requests to be sent. In addition, whether or not a Plate editor is vulnerable to cross-site scripting attacks using attributes depends on a number of factors. The most likely DOM attributes to be vulnerable are href and src on links and iframes respectively. Any component that spreads {...nodeProps} onto an <a> or <iframe> element and does not later override href or src will be vulnerable to XSS. In patched versions of Plate, we have disabled element.attributes and leaf.attributes for most attribute names by default, with some exceptions including target, alt, width, height, colspan and rowspan on the link, image, video, table cell and table header cell plugins. If this is a breaking change for you, you can selectively re-enable attributes for certain plugins as follows. Please carefully research and assess the security implications of any attribute you allow, as even seemingly innocuous attributes such as style can be used maliciously. If you are unable to upgrade to any of the patched versions, you should use a tool like patch-package or yarn patch to remove the logic from @udecode/plate-core that adds attributes to nodeProps.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/udecode/plate/security/advisories/GHSA-73rg-f94j-xvhx"
          },
          {
            "url": "https://www.npmjs.com/package/patch-package"
          },
          {
            "url": "https://yarnpkg.com/cli/patch"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47062",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T19:15:16.760",
        "lastModified": "2024-09-20T19:15:16.760",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Navidrome is an open source web-based music collection server and streamer. Navidrome automatically adds parameters in the URL to SQL queries. This can be exploited to access information by adding parameters like `password=...` in the URL (ORM Leak). Furthermore, the names of the parameters are not properly escaped, leading to SQL Injections. Finally, the username is used in a `LIKE` statement, allowing people to log in with `%` instead of their username. When adding parameters to the URL, they are automatically included in an SQL `LIKE` statement (depending on the parameter's name). This allows attackers to potentially retrieve arbitrary information. For example, attackers can use the following request to test whether some encrypted passwords start with `AAA`. This results in an SQL query like `password LIKE 'AAA%'`, allowing attackers to slowly brute-force passwords. When adding parameters to the URL, they are automatically added to an SQL query. The names of the parameters are not properly escaped. This behavior can be used to inject arbitrary SQL code (SQL Injection). These vulnerabilities can be used to leak information and dump the contents of the database and have been addressed in release version 0.53.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/navidrome/navidrome/security/advisories/GHSA-58vj-cv5w-v4v6"
          }
        ]
      }
    }
  ]
}