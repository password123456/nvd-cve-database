{
  "totalResults": 18,
  "datePublished": "2024-09-18T07:00:14.202008Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-45398",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-17T20:15:04.670",
        "lastModified": "2024-09-17T20:15:04.670",
        "baseScore": 8.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.5,
        "description": "Contao is an Open Source CMS. In affected versions a back end user with access to the file manager can upload malicious files and execute them on the server. Users are advised to update to Contao 4.13.49, 5.3.15 or 5.4.3. Users unable to update are advised to configure their web server so it does not execute PHP files and other scripts in the Contao file upload directory.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          }
        ],
        "references": [
          {
            "url": "https://contao.org/en/security-advisories/remote-command-execution-through-file-uploads"
          },
          {
            "url": "https://github.com/contao/contao/security/advisories/GHSA-vm6r-j788-hjh5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45604",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-17T20:15:04.893",
        "lastModified": "2024-09-17T20:15:04.893",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "Contao is an Open Source CMS. In affected versions authenticated users in the back end can list files outside the document root in the file selector widget. Users are advised to update to Contao 4.13.49. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://contao.org/en/security-advisories/directory-traversal-in-the-fileselector-widget"
          },
          {
            "url": "https://github.com/contao/contao/security/advisories/GHSA-4p75-5p53-65m9"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45605",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-17T20:15:05.120",
        "lastModified": "2024-09-17T20:15:05.120",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "Sentry is a developer-first error tracking and performance monitoring platform. An authenticated user delete the user issue alert notifications for arbitrary users given a know alert ID. A patch was issued to ensure authorization checks are properly scoped on requests to delete user alert notifications. Sentry SaaS users do not need to take any action. Self-Hosted Sentry users should upgrade to version 24.9.0 or higher. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-639",
            "description": "Authorization Bypass Through User-Controlled Key"
          }
        ],
        "references": [
          {
            "url": "https://github.com/getsentry/self-hosted"
          },
          {
            "url": "https://github.com/getsentry/sentry/pull/77093"
          },
          {
            "url": "https://github.com/getsentry/sentry/security/advisories/GHSA-54m3-95j9-v89j"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45606",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-17T20:15:05.393",
        "lastModified": "2024-09-17T20:15:05.393",
        "baseScore": 7.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 4.2,
        "description": "Sentry is a developer-first error tracking and performance monitoring platform. An authenticated user can mute alert rules from arbitrary organizations and projects with a know rule ID. The user does not need to be a member of the organization or have permissions on the project.  In our review, we have identified no instances where alerts have been muted by unauthorized parties.  A patch was issued to ensure authorization checks are properly scoped on requests to mute alert rules. Authenticated users who do not have the necessary permissions are no longer able to mute alerts.  Sentry SaaS users do not need to take any action. Self-Hosted Sentry users should upgrade to version **24.9.0** or higher. The rule mute feature was generally available as of 23.6.0 but users with early access may have had the feature as of 23.4.0. Affected users are advised to upgrade to version 24.9.0. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-639",
            "description": "Authorization Bypass Through User-Controlled Key"
          }
        ],
        "references": [
          {
            "url": "https://github.com/getsentry/self-hosted"
          },
          {
            "url": "https://github.com/getsentry/sentry/pull/77016"
          },
          {
            "url": "https://github.com/getsentry/sentry/security/advisories/GHSA-v345-w9f2-mpm5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45811",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-17T20:15:05.800",
        "lastModified": "2024-09-17T20:15:05.800",
        "baseScore": 4.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 3.6,
        "description": "Vite a frontend build tooling framework for javascript. In affected versions the contents of arbitrary files can be returned to the browser. `@fs` denies access to files outside of Vite serving allow list. Adding `?import&raw` to the URL bypasses this limitation and returns the file content if it exists. This issue has been patched in versions 5.4.6, 5.3.6, 5.2.14, 4.5.5, and 3.2.11. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          },
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/vitejs/vite/commit/6820bb3b9a54334f3268fc5ee1e967d2e1c0db34"
          },
          {
            "url": "https://github.com/vitejs/vite/security/advisories/GHSA-9cwx-2883-4wfx"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45812",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-17T20:15:06.037",
        "lastModified": "2024-09-17T20:15:06.037",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 4.7,
        "description": "Vite a frontend build tooling framework for javascript. Affected versions of vite were discovered to contain a DOM Clobbering vulnerability when building scripts to `cjs`/`iife`/`umd` output format. The DOM Clobbering gadget in the module can lead to cross-site scripting (XSS) in web pages where scriptless attacker-controlled HTML elements (e.g., an img tag with an unsanitized name attribute) are present. DOM Clobbering is a type of code-reuse attack where the attacker first embeds a piece of non-script, seemingly benign HTML markups in the webpage (e.g. through a post or comment) and leverages the gadgets (pieces of js code) living in the existing javascript code to transform it into executable code. We have identified a DOM Clobbering vulnerability in Vite bundled scripts, particularly when the scripts dynamically import other scripts from the assets folder and the developer sets the build output format to `cjs`, `iife`, or `umd`. In such cases, Vite replaces relative paths starting with `__VITE_ASSET__` using the URL retrieved from `document.currentScript`. However, this implementation is vulnerable to a DOM Clobbering attack. The `document.currentScript` lookup can be shadowed by an attacker via the browser's named DOM tree element access mechanism. This manipulation allows an attacker to replace the intended script element with a malicious HTML element. When this happens, the src attribute of the attacker-controlled element is used as the URL for importing scripts, potentially leading to the dynamic loading of scripts from an attacker-controlled server. This vulnerability can result in cross-site scripting (XSS) attacks on websites that include Vite-bundled files (configured with an output format of `cjs`, `iife`, or `umd`) and allow users to inject certain scriptless HTML tags without properly sanitizing the name or id attributes. This issue has been patched in versions 5.4.6, 5.3.6, 5.2.14, 4.5.5, and 3.2.11. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/vitejs/vite/commit/ade1d89660e17eedfd35652165b0c26905259fad"
          },
          {
            "url": "https://github.com/vitejs/vite/security/advisories/GHSA-64vr-g452-qvp3"
          },
          {
            "url": "https://github.com/webpack/webpack/security/advisories/GHSA-4vvj-4cpr-p986"
          },
          {
            "url": "https://research.securitum.com/xss-in-amp4email-dom-clobbering"
          },
          {
            "url": "https://scnps.co/papers/sp23_domclob.pdf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8951",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-09-17T20:15:07.020",
        "lastModified": "2024-09-17T20:15:07.020",
        "baseScore": 3.5,
        "baseSeverity": "LOW",
        "exploitabilityScore": 2.1,
        "impactScore": 1.4,
        "description": "A vulnerability classified as problematic was found in SourceCodester Resort Reservation System 1.0. Affected by this vulnerability is an unknown functionality of the file manage_fee.php. The manipulation of the argument toview leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/gurudattch/CVEs/blob/main/Sourcecodester-Resort-Reservation-system-XSS.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.277777"
          },
          {
            "url": "https://vuldb.com/?id.277777"
          },
          {
            "url": "https://vuldb.com/?submit.409586"
          },
          {
            "url": "https://www.sourcecodester.com/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8956",
        "sourceIdentifier": "disclosure@vulncheck.com",
        "published": "2024-09-17T20:15:07.287",
        "lastModified": "2024-09-17T20:15:07.287",
        "baseScore": 9.1,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.2,
        "description": "PTZOptics PT30X-SDI/NDI-xx before firmware 6.3.40 is vulnerable to an insufficient authentication issue. The camera does not properly enforce authentication to /cgi-bin/param.cgi when requests are sent without an HTTP Authorization header. The result is a remote and unauthenticated attacker can leak sensitive data such as usernames, password hashes, and configurations details. Additionally, the attacker can update individual configuration values or overwrite the whole file.",
        "cweIds": [
          {
            "id": "CWE-287",
            "description": "Improper Authentication"
          }
        ],
        "references": [
          {
            "url": "https://ptzoptics.com/firmware-changelog/"
          },
          {
            "url": "https://vulncheck.com/advisories/ptzoptics-insufficient-auth"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45815",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-17T21:15:12.320",
        "lastModified": "2024-09-17T21:15:12.320",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "Backstage is an open framework for building developer portals. A malicious actor with authenticated access to a Backstage instance with the catalog backend plugin installed is able to interrupt the service using a specially crafted query to the catalog API. This has been fixed in the `1.26.0` release of the `@backstage/plugin-catalog-backend`. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-1321",
            "description": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/backstage/backstage/security/advisories/GHSA-3x3f-jcp3-g22j"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45816",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-17T21:15:12.553",
        "lastModified": "2024-09-17T21:15:12.553",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "Backstage is an open framework for building developer portals. When using the AWS S3 or GCS storage provider for TechDocs it is possible to access content in the entire storage bucket. This can leak contents of the bucket that are not intended to be accessible, as well as bypass permission checks in Backstage. This has been fixed in the 1.10.13 release of the `@backstage/plugin-techdocs-backend` package. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-23",
            "description": "Relative Path Traversal"
          }
        ],
        "references": [
          {
            "url": "https://github.com/backstage/backstage/security/advisories/GHSA-39v3-f278-vj3g"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-46976",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-17T21:15:12.763",
        "lastModified": "2024-09-17T21:15:12.763",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 3.7,
        "description": "Backstage is an open framework for building developer portals. An attacker with control of the contents of the TechDocs storage buckets is able to inject executable scripts in the TechDocs content that will be executed in the victim's browser when browsing documentation or navigating to an attacker provided link. This has been fixed in the 1.10.13 release of the `@backstage/plugin-techdocs-backend` package. users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-693",
            "description": "Protection Mechanism Failure"
          }
        ],
        "references": [
          {
            "url": "https://github.com/backstage/backstage/security/advisories/GHSA-5j94-f3mf-8685"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8904",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-09-17T21:15:12.980",
        "lastModified": "2024-09-17T21:15:12.980",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Type Confusion in V8 in Google Chrome prior to 129.0.6668.58 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)",
        "cweIds": [
          {
            "id": "CWE-843",
            "description": "Access of Resource Using Incompatible Type ('Type Confusion')"
          }
        ],
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/09/stable-channel-update-for-desktop_17.html"
          },
          {
            "url": "https://issues.chromium.org/issues/365376497"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8905",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-09-17T21:15:13.080",
        "lastModified": "2024-09-17T21:15:13.080",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Inappropriate implementation in V8 in Google Chrome prior to 129.0.6668.58 allowed a remote attacker to potentially exploit stack corruption via a crafted HTML page. (Chromium security severity: Medium)",
        "cweIds": null,
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/09/stable-channel-update-for-desktop_17.html"
          },
          {
            "url": "https://issues.chromium.org/issues/359949835"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8906",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-09-17T21:15:13.140",
        "lastModified": "2024-09-17T21:15:13.140",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Incorrect security UI in Downloads in Google Chrome prior to 129.0.6668.58 allowed a remote attacker who convinced a user to engage in specific UI gestures to perform UI spoofing via a crafted HTML page. (Chromium security severity: Medium)",
        "cweIds": null,
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/09/stable-channel-update-for-desktop_17.html"
          },
          {
            "url": "https://issues.chromium.org/issues/352681108"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8907",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-09-17T21:15:13.193",
        "lastModified": "2024-09-17T21:15:13.193",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Insufficient data validation in Omnibox in Google Chrome on Android prior to 129.0.6668.58 allowed a remote attacker who convinced a user to engage in specific UI gestures to inject arbitrary scripts or HTML (XSS) via a crafted set of UI gestures. (Chromium security severity: Medium)",
        "cweIds": null,
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/09/stable-channel-update-for-desktop_17.html"
          },
          {
            "url": "https://issues.chromium.org/issues/360642942"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8908",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-09-17T21:15:13.247",
        "lastModified": "2024-09-17T21:15:13.247",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Inappropriate implementation in Autofill in Google Chrome prior to 129.0.6668.58 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Low)",
        "cweIds": null,
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/09/stable-channel-update-for-desktop_17.html"
          },
          {
            "url": "https://issues.chromium.org/issues/337222641"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8909",
        "sourceIdentifier": "chrome-cve-admin@google.com",
        "published": "2024-09-17T21:15:13.313",
        "lastModified": "2024-09-17T21:15:13.313",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Inappropriate implementation in UI in Google Chrome on iOS prior to 129.0.6668.58 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Low)",
        "cweIds": null,
        "references": [
          {
            "url": "https://chromereleases.googleblog.com/2024/09/stable-channel-update-for-desktop_17.html"
          },
          {
            "url": "https://issues.chromium.org/issues/341353783"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8957",
        "sourceIdentifier": "disclosure@vulncheck.com",
        "published": "2024-09-17T21:15:13.423",
        "lastModified": "2024-09-17T21:15:13.423",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "PTZOptics PT30X-SDI/NDI-xx before firmware 6.3.40 is vulnerable to an OS command injection issue. The camera does not sufficiently validate the ntp_addr configuration value which may lead to arbitrary command execution when ntp_client is started. When chained with CVE-2024-8956, a remote and unauthenticated attacker can execute arbitrary OS commands on affected devices.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://ptzoptics.com/firmware-changelog/"
          },
          {
            "url": "https://vulncheck.com/advisories/ptzoptics-command-injection"
          }
        ]
      }
    }
  ]
}