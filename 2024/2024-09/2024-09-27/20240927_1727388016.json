{
  "totalResults": 6,
  "datePublished": "2024-09-27T07:00:16.395268Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-46628",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-09-26T20:15:06.857",
        "lastModified": "2024-09-26T21:35:22.537",
        "baseScore": 8.0,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.9,
        "description": "Tenda G3 Router firmware v15.03.05.05 was discovered to contain a remote code execution (RCE) vulnerability via the usbPartitionName parameter in the formSetUSBPartitionUmount function.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Question-h/vuln/blob/master/Remote%20Code%20Execution%20Vulnerability%20in%20Tenda%20G3%20Router.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47179",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-26T20:15:06.950",
        "lastModified": "2024-09-26T20:15:06.950",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "RSSHub is an RSS network. Prior to commit 64e00e7, RSSHub's `docker-test-cont.yml` workflow is vulnerable to Artifact Poisoning, which could have lead to a full repository takeover. Downstream users of RSSHub are not vulnerable to this issue, and commit 64e00e7 fixed the underlying issue and made the repository no longer vulnerable. The `docker-test-cont.yml` workflow gets triggered when the `PR - Docker build test` workflow completes successfully. It then collects some information about the Pull Request that triggered the triggering workflow and set some labels depending on the PR body and sender. If the PR also contains a `routes` markdown block, it will set the `TEST_CONTINUE` environment variable to `true`. The workflow then downloads and extracts an artifact uploaded by the triggering workflow which is expected to contain a single `rsshub.tar.zst` file. However, prior to commit 64e00e7, it did not validate and the contents were extracted in the root of the workspace overriding any existing files. Since the contents of the artifact were not validated, it is possible for a malicious actor to send a Pull Request which uploads, not just the `rsshub.tar.zst` compressed docker image, but also a malicious `package.json` file with a script to run arbitrary code in the context of the privileged workflow. As of commit 64e00e7, this scenario has been addressed and the RSSHub repository is no longer vulnerable.",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://codeql.github.com/codeql-query-help/javascript/js-actions-command-injection"
          },
          {
            "url": "https://github.com/DIYgod/RSSHub/actions/runs/10141104413/job/28037643579#step:1:17"
          },
          {
            "url": "https://github.com/DIYgod/RSSHub/blob/e08733f94c81440d19ee6a5fd5e915e9a65395f5/.github/workflows/docker-test-cont.yml"
          },
          {
            "url": "https://github.com/DIYgod/RSSHub/commit/64e00e743aba2a239508fea97825994e3d687ecc"
          },
          {
            "url": "https://github.com/DIYgod/RSSHub/security/advisories/GHSA-9mqc-fm24-h8cw"
          },
          {
            "url": "https://securitylab.github.com/research/github-actions-preventing-pwn-requests"
          },
          {
            "url": "https://securitylab.github.com/research/github-actions-untrusted-input"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47180",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-26T20:15:07.310",
        "lastModified": "2024-09-26T20:15:07.310",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "Shields.io is a service for concise, consistent, and legible badges in SVG and raster format. Shields.io and users self-hosting their own instance of shields using version < `server-2024-09-25` are vulnerable to a remote execution vulnerability via the JSONPath library used by the Dynamic JSON/Toml/Yaml badges. This vulnerability would allow any user with access to make a request to a URL on the instance to the ability to execute code by crafting a malicious JSONPath expression. All users who self-host an instance are vulnerable. This problem was fixed in server-2024-09-25. Those who follow the tagged releases should update to `server-2024-09-25` or later. Those who follow the rolling tag on DockerHub, `docker pull shieldsio/shields:next` to update to the latest version. As a workaround, blocking access to the endpoints `/badge/dynamic/json`, `/badge/dynamic/toml`, and `/badge/dynamic/yaml` (e.g: via a firewall or reverse proxy in front of your instance) would prevent the exploitable endpoints from being accessed.",
        "cweIds": [
          {
            "id": "CWE-74",
            "description": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/badges/shields/commit/ec1b6c8daccda075403c1688ac02603f7aaa50b2"
          },
          {
            "url": "https://github.com/badges/shields/issues/10553"
          },
          {
            "url": "https://github.com/badges/shields/pull/10551"
          },
          {
            "url": "https://github.com/badges/shields/security/advisories/GHSA-rxvx-x284-4445"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7594",
        "sourceIdentifier": "security@hashicorp.com",
        "published": "2024-09-26T20:15:07.687",
        "lastModified": "2024-09-26T20:15:07.687",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.6,
        "impactScore": 5.9,
        "description": "Vault’s SSH secrets engine did not require the valid_principals list to contain a value by default. If the valid_principals and default_user fields of the SSH secrets engine configuration are not set, an SSH certificate requested by an authorized user to Vault’s SSH secrets engine could be used to authenticate as any user on the host. Fixed in Vault Community Edition 1.17.6, and in Vault Enterprise 1.17.6, 1.16.10, and 1.15.15.",
        "cweIds": [
          {
            "id": "CWE-732",
            "description": "Incorrect Permission Assignment for Critical Resource"
          }
        ],
        "references": [
          {
            "url": "https://discuss.hashicorp.com/t/hcsec-2024-20-vault-ssh-secrets-engine-configuration-did-not-restrict-valid-principals-by-default/70251"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45986",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-09-26T21:15:07.663",
        "lastModified": "2024-09-26T21:35:21.760",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.3,
        "impactScore": 2.7,
        "description": "A stored Cross-Site Scripting (XSS) vulnerability was identified in Projectworld Online Voting System 1.0 that occurs when an account is registered with a malicious javascript payload. The payload is stored and subsequently executed in the voter.php and profile.php pages whenever the account information is accessed.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/soursec/CVEs/tree/main/CVE-2024-45986"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6769",
        "sourceIdentifier": "df4dee71-de3a-4139-9588-11b62fe6c0ff",
        "published": "2024-09-26T21:15:07.787",
        "lastModified": "2024-09-26T21:15:07.787",
        "baseScore": 6.7,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 0.8,
        "impactScore": 5.9,
        "description": "A DLL Hijacking caused by drive remapping combined with a poisoning of the activation cache in Microsoft Windows 10, Windows 11, Windows Server 2016, Windows Server 2019, and Windows Server 2022 allows a malicious authenticated attacker to elevate from a medium integrity process to a high integrity process without the intervention of a UAC prompt.",
        "cweIds": [
          {
            "id": "CWE-426",
            "description": "Untrusted Search Path"
          }
        ],
        "references": [
          {
            "url": "https://www.fortra.com/security/advisories/research/fr-2024-002"
          }
        ]
      }
    }
  ]
}