{
  "totalResults": 10,
  "datePublished": "2024-09-20T11:00:08.306001Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-45806",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T00:15:02.293",
        "lastModified": "2024-09-20T00:15:02.293",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 2.5,
        "description": "Envoy is a cloud-native high-performance edge/middle/service proxy. A security vulnerability in Envoy allows external clients to manipulate Envoy headers, potentially leading to unauthorized access or other malicious actions within the mesh. This issue arises due to Envoy's default configuration of internal trust boundaries, which considers all RFC1918 private address ranges as internal. The default behavior for handling internal addresses in Envoy has been changed. Previously, RFC1918 IP addresses were automatically considered internal, even if the internal_address_config was empty.  The default configuration of Envoy will continue to trust internal addresses while in this release and it will not trust them by default in next release. If you have tooling such as probes on your private network which need to be treated as trusted (e.g. changing arbitrary x-envoy headers) please explicitly include those addresses or CIDR ranges into `internal_address_config`. Successful exploitation could allow attackers to bypass security controls, access sensitive data, or disrupt services within the mesh, like Istio. This issue has been addressed in versions 1.31.2, 1.30.6, 1.29.9, and 1.28.7. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-639",
            "description": "Authorization Bypass Through User-Controlled Key"
          }
        ],
        "references": [
          {
            "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-ffhv-fvxq-r6mf"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45807",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T00:15:02.520",
        "lastModified": "2024-09-20T00:15:02.520",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Envoy is a cloud-native high-performance edge/middle/service proxy. Envoy's 1.31 is using `oghttp` as the default HTTP/2 codec, and there are potential bugs around stream management in the codec. To resolve this Envoy will switch off the `oghttp2` by default. The impact of this issue is that envoy will crash. This issue has been addressed in release version 1.31.2. All users are advised to upgrade. There are no known workarounds for this issue.",
        "cweIds": [
          {
            "id": "CWE-670",
            "description": "Always-Incorrect Control Flow Implementation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-qc52-r4x5-9w37"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45808",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T00:15:02.733",
        "lastModified": "2024-09-20T00:15:02.733",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 2.5,
        "description": "Envoy is a cloud-native high-performance edge/middle/service proxy. A vulnerability has been identified in Envoy that allows malicious attackers to inject unexpected content into access logs. This is achieved by exploiting the lack of validation for the `REQUESTED_SERVER_NAME` field for access loggers. This issue has been addressed in versions 1.31.2, 1.30.6, 1.29.9, and 1.28.7. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-117",
            "description": "Improper Output Neutralization for Logs"
          }
        ],
        "references": [
          {
            "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-p222-xhp9-39rc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45809",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T00:15:02.930",
        "lastModified": "2024-09-20T00:15:02.930",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 3.6,
        "description": "Envoy is a cloud-native high-performance edge/middle/service proxy. Jwt filter will lead to an Envoy crash when clear route cache with remote JWKs. In the following case: 1. remote JWKs are used, which requires async header processing; 2. clear_route_cache is enabled on the provider; 3. header operations are enabled in JWT filter, e.g. header to claims feature; 4. the routing table is configured in a way that the JWT header operations modify requests to not match any route. When these conditions are met, a crash is triggered in the upstream code due to nullptr reference conversion from route(). The root cause is the ordering of continueDecoding and clearRouteCache. This issue has been addressed in versions 1.31.2, 1.30.6, and 1.29.9. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-119",
            "description": "Improper Restriction of Operations within the Bounds of a Memory Buffer"
          }
        ],
        "references": [
          {
            "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-wqr5-qmq7-3qw3"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45810",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T00:15:03.153",
        "lastModified": "2024-09-20T00:15:03.153",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.6,
        "description": "Envoy is a cloud-native high-performance edge/middle/service proxy. Envoy will crash when the http async client is handling `sendLocalReply` under some circumstance, e.g., websocket upgrade, and requests mirroring. The http async client will crash during the `sendLocalReply()` in http async client, one reason is http async client is duplicating the status code, another one is the destroy of router is called at the destructor of the async stream, while the stream is deferred deleted at first. There will be problems that the stream decoder is destroyed but its reference is called in `router.onDestroy()`, causing segment fault. This will impact ext_authz if the `upgrade` and `connection` header are allowed, and request mirrorring. This issue has been addressed in versions 1.31.2, 1.30.6, 1.29.9, and 1.28.7. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-119",
            "description": "Improper Restriction of Operations within the Bounds of a Memory Buffer"
          }
        ],
        "references": [
          {
            "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-qm74-x36m-555q"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-46999",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T00:15:03.350",
        "lastModified": "2024-09-20T00:15:03.350",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.2,
        "description": "Zitadel is an open source identity management platform. ZITADEL's user grants deactivation mechanism did not work correctly. Deactivated user grants were still provided in token, which could lead to unauthorized access to applications and resources. Additionally, the management and auth API always returned the state as active or did not provide any information about the state. Versions 2.62.1, 2.61.1, 2.60.2, 2.59.3, 2.58.5, 2.57.5, 2.56.6, 2.55.8, and 2.54.10 have been released which address this issue. Users are advised to upgrade. Users unable to upgrade may explicitly remove the user grants to make sure the user does not get access anymore.",
        "cweIds": [
          {
            "id": "CWE-269",
            "description": "Improper Privilege Management"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zitadel/zitadel/security/advisories/GHSA-2w5j-qfvw-2hf5"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47000",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T00:15:03.550",
        "lastModified": "2024-09-20T00:15:03.550",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "Zitadel is an open source identity management platform. ZITADEL's user account deactivation mechanism did not work correctly with service accounts. Deactivated service accounts retained the ability to request tokens, which could lead to unauthorized access to applications and resources. Versions 2.62.1, 2.61.1, 2.60.2, 2.59.3, 2.58.5, 2.57.5, 2.56.6, 2.55.8, and 2.54.10 have been released which address this issue. Users are advised t upgrade. Users unable to upgrade may instead of deactivating the service account, consider creating new credentials and replacing the old ones wherever they are used. This effectively prevents the deactivated service account from being utilized. Be sure to revoke all existing authentication keys associated with the service account and to rotate the service account's password.",
        "cweIds": [
          {
            "id": "CWE-269",
            "description": "Improper Privilege Management"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zitadel/zitadel/security/advisories/GHSA-qr2h-7pwm-h393"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-47060",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-20T00:15:03.767",
        "lastModified": "2024-09-20T00:15:03.767",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "Zitadel is an open source identity management platform. In Zitadel, even after an organization is deactivated, associated projects, respectively their applications remain active. Users across other organizations can still log in and access through these applications, leading to unauthorized access. Additionally, if a project was deactivated access to applications was also still possible. The issue stems from the fact that when an organization is deactivated in Zitadel, the applications associated with it do not automatically deactivate. The application lifecycle is not tightly coupled with the organization's lifecycle, leading to a situation where the organization or project is marked as inactive, but its resources remain accessible. This vulnerability allows for unauthorized access to projects and their resources, which should have been restricted post-organization deactivation. Versions 2.62.1, 2.61.1, 2.60.2, 2.59.3, 2.58.5, 2.57.5, 2.56.6, 2.55.8, and 2.54.10 have been released which address this issue. Users are advised to upgrade. Users unable to upgrade may explicitly disable the application to make sure the client is not allowed anymore.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://github.com/zitadel/zitadel/security/advisories/GHSA-jj94-6f5c-65r8"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9009",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-09-20T00:15:03.997",
        "lastModified": "2024-09-20T00:15:03.997",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "A vulnerability, which was classified as critical, has been found in code-projects Online Quiz Site 1.0. This issue affects some unknown processing of the file showtest.php. The manipulation of the argument subid leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://code-projects.org/"
          },
          {
            "url": "https://github.com/ZTurNA/cve/issues/1"
          },
          {
            "url": "https://vuldb.com/?ctiid.278165"
          },
          {
            "url": "https://vuldb.com/?id.278165"
          },
          {
            "url": "https://vuldb.com/?submit.410183"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9011",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-09-20T01:15:10.550",
        "lastModified": "2024-09-20T01:15:10.550",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "A vulnerability, which was classified as critical, was found in code-projects Crud Operation System 1.0. Affected is an unknown function of the file updata.php. The manipulation of the argument sid leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://code-projects.org/"
          },
          {
            "url": "https://github.com/ppp-src/a/issues/14"
          },
          {
            "url": "https://vuldb.com/?ctiid.278166"
          },
          {
            "url": "https://vuldb.com/?id.278166"
          },
          {
            "url": "https://vuldb.com/?submit.410396"
          }
        ]
      }
    }
  ]
}