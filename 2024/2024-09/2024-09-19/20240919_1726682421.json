{
  "totalResults": 6,
  "datePublished": "2024-09-19T03:00:21.497002Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2022-25777",
        "sourceIdentifier": "security@mautic.org",
        "published": "2024-09-18T16:15:04.980",
        "lastModified": "2024-09-18T16:15:04.980",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.2,
        "impactScore": 5.2,
        "description": "Prior to the patched version, an authenticated user of Mautic could read system files and access the internal addresses of the application due to a Server-Side Request Forgery (SSRF) vulnerability.",
        "cweIds": [
          {
            "id": "CWE-918",
            "description": "Server-Side Request Forgery (SSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/mautic/mautic/security/advisories/GHSA-mgv8-w49f-822w"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-46086",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-09-18T16:15:06.160",
        "lastModified": "2024-09-18T18:35:13.440",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "FrogCMS V0.9.5 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /admin/?/plugin/file_manager/delete/123",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://github.com/PG2Stom/cms/tree/main/12/readme.md"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-47105",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-09-18T17:15:18.277",
        "lastModified": "2024-09-18T19:35:09.023",
        "baseScore": 8.6,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 4.7,
        "description": "exec.CommandContext in Chaosblade 0.3 through 1.7.3, when server mode is used, allows OS command execution via the cmd parameter without authentication.",
        "cweIds": [
          {
            "id": "CWE-78",
            "description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/chaosblade-io/chaosblade/blob/0a07380c9899febb2b544132783b376b44226cca/exec/os/executor.go#L68"
          },
          {
            "url": "https://narrow-oatmeal-0c0.notion.site/ChaosBlade-Remote-Command-Execution-CVE-2023-47105-4f5459046488436caaec2bced6ff26d7"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45298",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-18T17:15:18.570",
        "lastModified": "2024-09-18T17:15:18.570",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "Wiki.js is an open source wiki app built on Node.js. A disabled user can still gain access to a wiki by abusing the password reset function. While setting up SMTP e-mail's on my server, I tested said e-mails by performing a password reset with my test user. To my shock, not only did it let me reset my password, but after resetting my password I can get into the wiki I was locked out of. The ramifications of this bug is a user can **bypass an account disabling by requesting their password be reset**.  All users of wiki.js version `2.5.303` who use any account restrictions and have disabled user are affected. This issue has been addressed in version 2.5.304 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-670",
            "description": "Always-Incorrect Control Flow Implementation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/requarks/wiki/commit/b9fb17d4d4a0956ec35e8c73cc85192552fb8d16"
          },
          {
            "url": "https://github.com/requarks/wiki/security/advisories/GHSA-vwww-c5vg-xgfc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45813",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-18T17:15:19.163",
        "lastModified": "2024-09-18T17:15:19.163",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "find-my-way is a fast, open source HTTP router, internally using a Radix Tree (aka compact Prefix Tree), supports route params, wildcards, and it's framework independent. A bad regular expression is generated any time one has two parameters within a single segment, when adding a `-` at the end, like `/:a-:b-`. This may cause a denial of service in some instances. Users are advised to update to find-my-way v8.2.2 or v9.0.1. or subsequent versions. There are no known workarounds for this issue.",
        "cweIds": [
          {
            "id": "CWE-1333",
            "description": "Inefficient Regular Expression Complexity"
          }
        ],
        "references": [
          {
            "url": "https://blakeembrey.com/posts/2024-09-web-redos"
          },
          {
            "url": "https://github.com/delvedor/find-my-way/commit/5e9e0eb5d8d438e06a185d5e536a896572dd0440"
          },
          {
            "url": "https://github.com/delvedor/find-my-way/security/advisories/GHSA-rrr8-f88r-h8q6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-46990",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-18T17:15:19.687",
        "lastModified": "2024-09-18T17:15:19.687",
        "baseScore": 5.0,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 1.4,
        "description": "Directus is a real-time API and App dashboard for managing SQL database content. When relying on blocking access to localhost using the default `0.0.0.0` filter a user may bypass this block by using other registered loopback devices (like `127.0.0.2` - `127.127.127.127`). This issue has been addressed in release versions 10.13.3 and 11.1.0. Users are advised to upgrade. Users unable to upgrade may block this bypass by manually adding the `127.0.0.0/8` CIDR range which will block access to any `127.X.X.X` ip instead of just `127.0.0.1`.",
        "cweIds": [
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/directus/directus/commit/4aace0bbe57232e38cd6a287ee475293e46dc91b"
          },
          {
            "url": "https://github.com/directus/directus/commit/769fa22797bff5a9231599883b391e013f122e52"
          },
          {
            "url": "https://github.com/directus/directus/commit/8cbf943b65fd4a763d09a5fdbba8996b1e7797ff"
          },
          {
            "url": "https://github.com/directus/directus/commit/c1f3ccc681595038d094ce110ddeee38cb38f431"
          },
          {
            "url": "https://github.com/directus/directus/security/advisories/GHSA-68g8-c275-xf2m"
          }
        ]
      }
    }
  ]
}