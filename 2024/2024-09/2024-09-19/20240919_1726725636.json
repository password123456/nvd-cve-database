{
  "totalResults": 4,
  "datePublished": "2024-09-19T15:00:36.696345Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2022-4533",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-19T04:15:05.860",
        "lastModified": "2024-09-19T04:15:05.860",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Limit Login Attempts Plus plugin for WordPress is vulnerable to IP Address Spoofing in versions up to, and including, 1.1.0. This is due to insufficient restrictions on where the IP Address information is being retrieved for request logging and login restrictions. Attackers can supply the X-Forwarded-For header with with a different IP Address that will be logged and can be used to bypass settings that may have blocked out an IP address or country from logging in.",
        "cweIds": [
          {
            "id": "CWE-348",
            "description": "Use of Less Trusted Source"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/limit-login-attempts-plus/trunk/core/LimitLoginAttempts.php#L1043"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/aec7b59f-1c8a-4403-b33b-c119bd96ad9d?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8364",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-19T04:15:06.270",
        "lastModified": "2024-09-19T04:15:06.270",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The WP Custom Fields Search plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's wpcfs-preset shortcode in all versions up to, and including, 1.2.35 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-custom-fields-search/trunk/plugin.php#L53"
          },
          {
            "url": "https://wordpress.org/plugins/wp-custom-fields-search/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ef36a2a1-b3be-4270-8890-76705817b4b5?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8850",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-19T04:15:06.557",
        "lastModified": "2024-09-19T04:15:06.557",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The MC4WP: Mailchimp for WordPress plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'email' parameter when a placeholder such as {email} is used for the field in versions 4.9.9 to 4.9.15 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/mailchimp-for-wp/tags/4.9.16/config/default-form-content.php#L8"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3153075%40mailchimp-for-wp&new=3153075%40mailchimp-for-wp&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1d2ba8ea-a75f-4069-b67d-f832acb1deef?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-46946",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-09-19T05:15:11.857",
        "lastModified": "2024-09-19T14:35:09.763",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "langchain_experimental (aka LangChain Experimental) 0.1.17 through 0.3.0 for LangChain allows attackers to execute arbitrary code through sympy.sympify (which uses eval) in LLMSymbolicMathChain. LLMSymbolicMathChain was introduced in fcccde406dd9e9b05fc9babcbeb9ff527b0ec0c6 (2023-10-05).",
        "cweIds": [
          {
            "id": "CWE-20",
            "description": "Improper Input Validation"
          }
        ],
        "references": [
          {
            "url": "https://cwe.mitre.org/data/definitions/95.html"
          },
          {
            "url": "https://docs.sympy.org/latest/modules/codegen.html"
          },
          {
            "url": "https://gist.github.com/12end/68c0c58d2564ef4141bccd4651480820#file-cve-2024-46946-txt"
          },
          {
            "url": "https://github.com/langchain-ai/langchain/releases/tag/langchain-experimental%3D%3D0.3.0"
          }
        ]
      }
    }
  ]
}