{
  "totalResults": 23,
  "datePublished": "2024-09-25T13:00:22.601063Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2024-6590",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:02.830",
        "lastModified": "2024-09-25T03:15:02.830",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "The Spreadsheet Integration – Automate Google Sheets With WordPress, WooCommerce & Most Popular Form Plugins. Also, Display Google sheet as a Table. plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on several functions in all versions up to, and including, 3.7.9. This makes it possible for authenticated attackers, with Subscriber-level access and above, to edit post status, edit Google sheet integrations, and create Google sheet integrations.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wpgsi/trunk/admin/class-wpgsi-admin.php#L1168"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wpgsi/trunk/admin/class-wpgsi-admin.php#L812"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wpgsi/trunk/admin/class-wpgsi-admin.php#L863"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wpgsi/trunk/admin/class-wpgsi-admin.php#L935"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d35ff2cc-9af2-4b72-bc49-e205275daa4d?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7386",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:03.040",
        "lastModified": "2024-09-25T03:15:03.040",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Premium Packages – Sell Digital Products Securely plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 5.9.1. This is due to missing nonce validation on the wpdmpp_async_request() function. This makes it possible for unauthenticated attackers to perform actions such as initiating refunds via a forged request granted they can trick a site administrator or shop manager into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wpdm-premium-packages/trunk/wpdm-premium-packages.php?rev=3102989#L1148"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0a714536-c6fd-495b-b774-104657329a74?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7426",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:03.230",
        "lastModified": "2024-09-25T03:15:03.230",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The Community by PeepSo – Social Network, Membership, Registration, User Profiles plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 6.4.6.0. This is due to the plugin displaying errors and allowing direct access to the sse.php file. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/peepso-core/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2e69d666-50de-4c82-9ad4-9ed40fcc7218?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7491",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:03.417",
        "lastModified": "2024-09-25T03:15:03.417",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "The HUSKY – Products Filter Professional for WooCommerce plugin for WordPress is vulnerable to Insecure Direct Object Reference in all versions up to, and including, 1.3.6.1 via the woof_messenger_remove_subscr AJAX action due to missing validation on the 'key' user controlled key. This makes it possible for authenticated attackers, with subscriber-level access and above, to unsubscribe users from a product notification sign-ups, if they can successfully obtain or brute force the key value for users who signed up to receive notifications. This vulnerability requires the plugin's Products Messenger extension to be enabled.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=3156511%40woocommerce-products-filter&old=3129454%40woocommerce-products-filter&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/daf6b0d5-79a6-4b8f-924e-9e78cb2b5742?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-7617",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:03.603",
        "lastModified": "2024-09-25T03:15:03.603",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 2.7,
        "description": "The Contact Form to Any API plugin for WordPress is vulnerable to Stored Cross-Site Scripting via Contact Form 7 form fields in all versions up to, and including, 1.2.2 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/contact-form-to-any-api/trunk/admin/partials/cf7-to-any-api-admin-entries.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/39487908-5cc5-42ac-8af4-65626694b1e4?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8349",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:03.817",
        "lastModified": "2024-09-25T03:15:03.817",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "The Uncanny Groups for LearnDash plugin for WordPress is vulnerable to privilege escalation in all versions up to, and including, 6.1.0.1. This is due to the plugin not properly restricting what users a group leader can edit. This makes it possible for authenticated attackers, with group leader-level access and above, to change admin account email addresses which can subsequently lead to admin account access.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/karlemilnikka/CVE-2024-8349-and-CVE-2024-8350"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/64cf0ae2-8d66-40d1-8bb6-0cab1dafab0d?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8350",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:04.013",
        "lastModified": "2024-09-25T03:15:04.013",
        "baseScore": 2.7,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.2,
        "impactScore": 1.4,
        "description": "The Uncanny Groups for LearnDash plugin for WordPress is vulnerable to user group add due to a missing capability check on the /wp-json/ulgm_management/v1/add_user/ REST API endpoint in all versions up to, and including, 6.1.0.1. This makes it possible for authenticated attackers, with group leader-level access and above, to add users to their group which ultimately allows them to leverage CVE-2024-8349 and gain admin access to the site.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://github.com/karlemilnikka/CVE-2024-8349-and-CVE-2024-8350"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/a38a58de-5f7d-4033-9a65-41b590b7d510?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8434",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:04.213",
        "lastModified": "2024-09-25T03:15:04.213",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Easy Mega Menu Plugin for WordPress – ThemeHunk plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on several functions hooked via AJAX in all versions up to, and including, 1.0.9. This makes it possible for authenticated attackers, with subscriber-level access and above, to perform actions like updating plugin settings.",
        "cweIds": [
          {
            "id": "CWE-862",
            "description": "Missing Authorization"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3156084/themehunk-megamenu-plus/tags/1.1.0/inc/megamenu-base.php"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3156084/themehunk-megamenu-plus/tags/1.1.0/inc/megamenu-nav-menu-settings.php"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3156084/themehunk-megamenu-plus/tags/1.1.0/inc/megamenu-setting.php"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3156084/themehunk-megamenu-plus/tags/1.1.0/inc/megamenu-widgets.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/be3869a9-f72d-4bbb-ba51-d2761ca761f2?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8476",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:04.403",
        "lastModified": "2024-09-25T03:15:04.403",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The Easy PayPal Events plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.2.1. This is due to missing or incorrect nonce validation on the wpeevent_plugin_buttons() function. This makes it possible for unauthenticated attackers to delete arbitrary posts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-352",
            "description": "Cross-Site Request Forgery (CSRF)"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/easy-paypal-events-tickets/tags/1.2.1/includes/private_buttons.php#L273"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/easy-paypal-events-tickets/tags/1.2.1/includes/private_buttons.php#L5"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3155809/easy-paypal-events-tickets/trunk/includes/private_buttons.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/602d337e-0778-4182-8e77-0eb3b37d5a7a?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8481",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:04.593",
        "lastModified": "2024-09-25T03:15:04.593",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.4,
        "description": "The The Special Text Boxes plugin for WordPress is vulnerable to arbitrary shortcode execution in all versions up to, and including, 6.2.2. This is due to the plugin adding the filter add_filter('comment_text', 'do_shortcode'); which will run all shortcodes in comments. This makes it possible for unauthenticated attackers to execute arbitrary shortcodes.",
        "cweIds": [
          {
            "id": "CWE-94",
            "description": "Improper Control of Generation of Code ('Code Injection')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-special-textboxes/trunk/stb-class.php#L36"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/15b2a08f-2122-4eaf-ab46-1945cf6a68ca?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8483",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:04.790",
        "lastModified": "2024-09-25T03:15:04.790",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "The MAS Static Content plugin for WordPress is vulnerable to Information Exposure in all versions up to, and including, 1.0.8 via the static_content() function. This makes it possible for authenticated attackers, with contributor-level access and above, to extract potentially sensitive information from private static content pages.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/mas-static-content/tags/1.0.8/includes/class-mas-static-content-shortcodes.php#L35"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3151679%40mas-static-content&new=3151679%40mas-static-content&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/794bc5cd-c9ac-4583-ae3d-a92361374b5f?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8484",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:04.990",
        "lastModified": "2024-09-25T03:15:04.990",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "The REST API TO MiniProgram plugin for WordPress is vulnerable to SQL Injection via the 'order' parameter of the /wp-json/watch-life-net/v1/comment/getcomments REST API endpoint in all versions up to, and including, 4.7.1 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/rest-api-to-miniprogram/tags/4.7.0/includes/api/ram-rest-comments-controller.php#L247"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/6e0945eb-ceec-4536-822a-fe864c21b580?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8485",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:05.190",
        "lastModified": "2024-09-25T03:15:05.190",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "The REST API TO MiniProgram plugin for WordPress is vulnerable to privilege escalation via account takeovr in all versions up to, and including, 4.7.1 via the updateUserInfo() due to missing validation on the 'openid' user controlled key that determines what user will be updated. This makes it possible for unauthenticated attackers to update arbitrary user's accounts, including their email to a @weixin.com email, which can the be leveraged to reset the password of the user's account, including administrators.",
        "cweIds": [
          {
            "id": "CWE-639",
            "description": "Authorization Bypass Through User-Controlled Key"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/rest-api-to-miniprogram/tags/4.7.0/includes/api/ram-rest-weixin-controller.php#L264"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/b53066d3-2ff3-4460-896a-facd77455914?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8549",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:05.393",
        "lastModified": "2024-09-25T03:15:05.393",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The Simple Calendar – Google Calendar Plugin plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 3.4.2. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3156894/google-calendar-events/trunk/includes/admin/notices.php"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3156894%40google-calendar-events&new=3156894%40google-calendar-events&sfp_email=&sfph_mail="
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/17ae3f22-6426-48f7-93e6-c0ad515b329a?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8621",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:05.600",
        "lastModified": "2024-09-25T03:15:05.600",
        "baseScore": 9.9,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.1,
        "impactScore": 6.0,
        "description": "The Daily Prayer Time plugin for WordPress is vulnerable to SQL Injection via the 'max_word' attribute of the 'quran_verse' shortcode in all versions up to, and including, 2024.08.26 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/daily-prayer-time-for-mosques/tags/2024.08.26/Models/QuranADay/QuranDB.php#L72"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3151906/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/866e4bc3-080a-4498-b210-e692d72d3db0?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8713",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:05.840",
        "lastModified": "2024-09-25T03:15:05.840",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The Kodex Posts likes plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 2.5.0. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/kodex-posts-likes/trunk/admin/partials/settings.php#L14"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/44780988-cadf-4ff2-9ba9-148b7b6650df?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8741",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:06.037",
        "lastModified": "2024-09-25T03:15:06.037",
        "baseScore": 6.1,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.7,
        "description": "The Beam me up Scotty – Back to Top Button plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.0.21. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/beam-me-up-scotty/tags/1.0.21/library/template-parts/tabs.php#L27"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3156146/beam-me-up-scotty/trunk/library/template-parts/tabs.php"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/3428bc71-64f9-4f8d-85c8-7dda81b2ac18?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9024",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:06.237",
        "lastModified": "2024-09-25T03:15:06.237",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Material Design Icons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's mdi-icon shortcode in all versions up to, and including, 0.0.5 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/material-design-icons/trunk/js/mdi-icons.js#L1311"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/material-design-icons/trunk/plugin.php#L87"
          },
          {
            "url": "https://wordpress.org/plugins/material-design-icons/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/9979381e-711d-42c8-bfdf-4ee99e2e556f?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9027",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:06.440",
        "lastModified": "2024-09-25T03:15:06.440",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The WPZOOM Shortcodes plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'box' shortcode in all versions up to, and including, 1.0.5 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wpzoom-shortcodes/trunk/shortcodes/shortcodes.php#L38"
          },
          {
            "url": "https://wordpress.org/plugins/wpzoom-shortcodes/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2cc03aa9-ad3d-4abb-9c22-cb40875ece47?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9028",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:06.643",
        "lastModified": "2024-09-25T03:15:06.643",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The WP GPX Maps plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'sgpx' shortcode in all versions up to, and including, 1.7.08 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-gpx-maps/trunk/wp-gpx-maps-admin-tracks.php#L249"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/wp-gpx-maps/trunk/wp-gpx-maps.php#L238"
          },
          {
            "url": "https://wordpress.org/plugins/wp-gpx-maps/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/872c8328-9089-4bc0-af17-f755524da610?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9068",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:06.830",
        "lastModified": "2024-09-25T03:15:06.830",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The OneElements – Best Elementor Addons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 1.3.7 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/oneelements-ultimate-addons-for-elementor/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/3f83a514-2b42-4348-9525-438205daeeab?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9069",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:07.023",
        "lastModified": "2024-09-25T03:15:07.023",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Graphicsly – The ultimate graphics plugin for WordPress website builder ( Gutenberg, Elementor, Beaver Builder, WPBakery ) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 1.0.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/graphicsly/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/343a6dbd-baf5-4de8-ae3e-6954fd3f1556?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9073",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-25T03:15:07.213",
        "lastModified": "2024-09-25T03:15:07.213",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The GutenGeek Free Gutenberg Blocks for WordPress plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 1.1.3 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/gtg-advanced-blocks/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/f1c68f9d-a026-4cef-82e6-25949a3d59ad?source=cve"
          }
        ]
      }
    }
  ]
}