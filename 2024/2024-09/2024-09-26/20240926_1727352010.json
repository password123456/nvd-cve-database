{
  "totalResults": 11,
  "datePublished": "2024-09-26T21:00:10.096152Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2022-4541",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-26T10:15:02.437",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 2.7,
        "description": "The WordPress Visitors plugin for WordPress is vulnerable to Stored Cross-Site Scripting via a spoofed HTTP Header value in versions up to, and including, 1.0 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses the nm_vistior page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/nm-visitors/trunk/nm-visitors.php#L105"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/nm-visitors/trunk/nm-visitors.php#L63"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/fa15c0a4-c99d-40c9-a654-f3a910460502?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9115",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-26T10:15:03.647",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Common Tools for Site plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 1.0.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/common-tools-for-site/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d0864b6e-e193-4704-99ec-a5f2232c4816?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9117",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-26T10:15:04.107",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Mapplic Lite plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 1.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/mapplic-lite/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/a19e1713-1a64-46dc-8b30-b53045b2e01d?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9125",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-26T10:15:04.330",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The king_IE plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 1.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/king-ie/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/486f43cc-cc3f-4a63-b00f-86f29a391269?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9127",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-26T10:15:04.580",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The Super Testimonials plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘alignment’ parameter in all versions up to, and including, 3.0.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/sola-testimonials/trunk/includes/gutenberg-blocks/single-testimonial/index.php#L39"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/sola-testimonials/trunk/includes/gutenberg-blocks/single-testimonial/index.php#L84"
          },
          {
            "url": "https://wordpress.org/plugins/sola-testimonials/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/54998b69-7dc5-49a4-8b8b-3419de73ed47?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9173",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-26T10:15:04.820",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 6.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.1,
        "impactScore": 2.7,
        "description": "The GF Custom Style plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 2.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://wordpress.org/plugins/gf-custom-style/#developers"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/8500ac5b-44e6-47b9-ab16-e7636c3fea66?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9198",
        "sourceIdentifier": "cve-coordination@incibe.es",
        "published": "2024-09-26T10:15:05.040",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 7.6,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.3,
        "impactScore": 4.7,
        "description": "Vulnerability in Clibo Manager v1.1.9.1 that could allow an attacker to execute an stored Cross-Site Scripting (stored XSS ) by uploading a malicious .svg image in the section: Profile > Profile picture.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://www.incibe.es/en/incibe-cert/notices/aviso/multiple-vulnerabilities-clibo-manager"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-9199",
        "sourceIdentifier": "cve-coordination@incibe.es",
        "published": "2024-09-26T10:15:05.257",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 5.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Rate limit vulnerability in Clibo Manager v1.1.9.2 that could allow an attacker to send a large number of emails to the victim in a short time, affecting availability and leading to a denial of service (DoS).",
        "cweIds": [
          {
            "id": "CWE-799",
            "description": "Improper Control of Interaction Frequency"
          }
        ],
        "references": [
          {
            "url": "https://www.incibe.es/en/incibe-cert/notices/aviso/multiple-vulnerabilities-clibo-manager"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8126",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-26T11:15:11.140",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.6,
        "impactScore": 5.9,
        "description": "The Advanced File Manager plugin for WordPress is vulnerable to arbitrary file uploads via the 'class_fma_connector.php' file in all versions up to, and including, 5.2.8. This makes it possible for authenticated attackers, with Subscriber-level access and above, and granted permissions by an Administrator, to upload a new .htaccess file allowing them to subsequently upload arbitrary files on the affected site's server which may make remote code execution possible.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/file-manager-advanced/trunk/application/class_fma_connector.php?rev=3004748"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3157713/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/801d6cde-f9c6-4e68-8bfc-ff8c0593372d?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8704",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-26T11:15:11.393",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 7.2,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.2,
        "impactScore": 5.9,
        "description": "The Advanced File Manager plugin for WordPress is vulnerable to Local JavaScript File Inclusion in all versions up to, and including, 5.2.8 via the 'fma_locale' parameter. This makes it possible for authenticated attackers, with Administrator-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/file-manager-advanced/trunk/application/class_fma_main.php#L152"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3157713/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/5b783cc6-d79d-43ef-948a-a1953d383ca3?source=cve"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8725",
        "sourceIdentifier": "security@wordfence.com",
        "published": "2024-09-26T11:15:11.613",
        "lastModified": "2024-09-26T13:32:02.803",
        "baseScore": 6.8,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.6,
        "impactScore": 5.2,
        "description": "Multiple plugins and/or themes for WordPress are vulnerable to Limited File Upload in various versions. This is due to a lack of proper checks to ensure lower-privileged roles cannot upload .css and .js files to arbitrary directories. This makes it possible for authenticated attackers, with Subscriber-level access and above, and granted permissions by an administrator, to upload .css and .js files to any directory within the WordPress root directory, which could lead to Stored Cross-Site Scripting. The Advanced File Manager Shortcodes plugin must be installed to exploit this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-434",
            "description": "Unrestricted Upload of File with Dangerous Type"
          }
        ],
        "references": [
          {
            "url": "https://plugins.trac.wordpress.org/browser/file-manager-advanced/trunk/application/class_fma_main.php#L24"
          },
          {
            "url": "https://plugins.trac.wordpress.org/browser/file-manager-advanced/trunk/application/class_fma_shortcode.php#L28"
          },
          {
            "url": "https://plugins.trac.wordpress.org/changeset/3157713/"
          },
          {
            "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ce2b4f93-93a6-480f-a877-ca47bd133bb6?source=cve"
          }
        ]
      }
    }
  ]
}