{
  "totalResults": 27,
  "datePublished": "2024-09-08T03:00:11.603776Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2023-30582",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T16:15:02.047",
        "lastModified": "2024-09-07T16:15:02.047",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A vulnerability has been identified in Node.js version 20, affecting users of the experimental permission model when the --allow-fs-read flag is used with a non-* argument. This flaw arises from an inadequate permission model that fails to restrict file watching through the fs.watchFile API. As a result, malicious actors can monitor files that they do not have explicit read access to.\nPlease note that at the time this CVE was issued, the permission model is an experimental feature of Node.js.",
        "cweIds": null,
        "references": [
          {
            "url": "https://nodejs.org/en/blog/vulnerability/june-2023-security-releases"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-30583",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T16:15:02.117",
        "lastModified": "2024-09-07T16:15:02.117",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "fs.openAsBlob() can bypass the experimental permission model when using the file system read restriction with the `--allow-fs-read` flag in Node.js 20. This flaw arises from a missing check in the `fs.openAsBlob()` API.\nPlease note that at the time this CVE was issued, the permission model is an experimental feature of Node.js.",
        "cweIds": null,
        "references": [
          {
            "url": "https://nodejs.org/en/blog/vulnerability/june-2023-security-releases"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-30584",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T16:15:02.167",
        "lastModified": "2024-09-07T16:15:02.167",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A vulnerability has been discovered in Node.js version 20, specifically within the experimental permission model. This flaw relates to improper handling of path traversal bypass when verifying file permissions.\nPlease note that at the time this CVE was issued, the permission model is an experimental feature of Node.js.",
        "cweIds": null,
        "references": [
          {
            "url": "https://nodejs.org/en/blog/vulnerability/june-2023-security-releases"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-30587",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T16:15:02.223",
        "lastModified": "2024-09-07T16:15:02.223",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "A vulnerability in Node.js version 20 allows for bypassing restrictions set by the --experimental-permission flag using the built-in inspector module (node:inspector).\nBy exploiting the Worker class's ability to create an \"internal worker\" with the kIsInternal Symbol, attackers can modify the isInternal value when an inspector is attached within the Worker constructor before initializing a new WorkerImpl. This vulnerability exclusively affects Node.js users employing the permission model mechanism.\nPlease note that at the time this CVE was issued, the permission model is an experimental feature of Node.js.",
        "cweIds": null,
        "references": [
          {
            "url": "https://nodejs.org/en/blog/vulnerability/june-2023-security-releases"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-39333",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T16:15:02.287",
        "lastModified": "2024-09-07T16:15:02.287",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Maliciously crafted export names in an imported WebAssembly module can inject JavaScript code. The injected code may be able to access data and functions that the WebAssembly module itself does not have access to, similar to as if the WebAssembly module was a JavaScript module.\nThis vulnerability affects users of any active release line of Node.js. The vulnerable feature is only available if Node.js is started with the `--experimental-wasm-modules` command line option.",
        "cweIds": null,
        "references": [
          {
            "url": "https://nodejs.org/en/blog/vulnerability/october-2023-security-releases"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-46809",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T16:15:02.343",
        "lastModified": "2024-09-07T16:15:02.343",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Node.js versions which bundle an unpatched version of OpenSSL or run against a dynamically linked version of OpenSSL which are unpatched are vulnerable to the Marvin Attack - https://people.redhat.com/~hkario/marvin/, if PCKS #1 v1.5 padding is allowed when performing RSA descryption using a private key.",
        "cweIds": null,
        "references": [
          {
            "url": "https://nodejs.org/en/blog/vulnerability/february-2024-security-releases"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36137",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T16:15:02.410",
        "lastModified": "2024-09-07T16:15:02.410",
        "baseScore": 3.3,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.8,
        "impactScore": 1.4,
        "description": "A vulnerability has been identified in Node.js, affecting users of the experimental permission model when the --allow-fs-write flag is used.\nNode.js Permission Model do not operate on file descriptors, however, operations such as fs.fchown or fs.fchmod can use a \"read-only\" file descriptor to change the owner and permissions of a file.",
        "cweIds": null,
        "references": [
          {
            "url": "https://nodejs.org/en/blog/vulnerability/july-2024-security-releases"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-36138",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T16:15:02.620",
        "lastModified": "2024-09-07T16:15:02.620",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.2,
        "impactScore": 5.9,
        "description": "Bypass incomplete fix of CVE-2024-27980, that arises from improper handling of batch files with all possible extensions on Windows via child_process.spawn / child_process.spawnSync. A malicious command line argument can inject arbitrary commands and achieve code execution even if the shell option is not enabled.",
        "cweIds": null,
        "references": [
          {
            "url": "https://nodejs.org/en/blog/vulnerability/july-2024-security-releases"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-8558",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-09-07T16:15:02.780",
        "lastModified": "2024-09-07T16:15:02.780",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "A vulnerability classified as problematic was found in SourceCodester Food Ordering Management System 1.0. This vulnerability affects unknown code of the file /foms/routers/place-order.php of the component Price Handler. The manipulation of the argument total leads to improper validation of specified quantity in input. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.",
        "cweIds": [
          {
            "id": "CWE-1284",
            "description": "Improper Validation of Specified Quantity in Input"
          }
        ],
        "references": [
          {
            "url": "https://github.com/Niu-zida/cve/blob/main/Payment%20loopholes.md"
          },
          {
            "url": "https://vuldb.com/?ctiid.276778"
          },
          {
            "url": "https://vuldb.com/?id.276778"
          },
          {
            "url": "https://vuldb.com/?submit.403345"
          },
          {
            "url": "https://www.sourcecodester.com/"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38650",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:12.183",
        "lastModified": "2024-09-07T17:15:12.183",
        "baseScore": 9.9,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.1,
        "impactScore": 6.0,
        "description": "An authentication bypass vulnerability can allow a low privileged attacker to access the NTLM hash of service account on the VSPC server.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-38651",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:12.347",
        "lastModified": "2024-09-07T17:15:12.347",
        "baseScore": 8.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 6.0,
        "description": "A code injection vulnerability can allow a low-privileged user to overwrite files on that VSPC server, which can lead to remote code execution on VSPC server.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-39714",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:12.507",
        "lastModified": "2024-09-07T17:15:12.507",
        "baseScore": 9.9,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.1,
        "impactScore": 6.0,
        "description": "A code injection vulnerability that permits a low-privileged user to upload arbitrary files to the server, leading to remote code execution on VSPC server.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-39715",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:12.663",
        "lastModified": "2024-09-07T17:15:12.663",
        "baseScore": 8.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 6.0,
        "description": "A code injection vulnerability that allows a low-privileged user with REST API access granted to remotely upload arbitrary files to the VSPC server using REST API, leading to remote code execution on VSPC server.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-39718",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:12.807",
        "lastModified": "2024-09-07T17:15:12.807",
        "baseScore": 8.1,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.2,
        "description": "An improper input validation vulnerability that allows a low-privileged user to remotely remove files on the system with permissions equivalent to those of the service account.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40709",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:12.960",
        "lastModified": "2024-09-07T17:15:12.960",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "A missing authorization vulnerability allows a local low-privileged user on the machine to escalate their privileges to root level.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40710",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:13.110",
        "lastModified": "2024-09-07T17:15:13.110",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "A series of related high-severity vulnerabilities, the most notable enabling remote code execution (RCE) as the service account and extraction of sensitive information (savedcredentials and passwords). Exploiting these vulnerabilities requires a user who has been assigned a low-privileged role within Veeam Backup & Replication.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40711",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:13.260",
        "lastModified": "2024-09-07T17:15:13.260",
        "baseScore": 9.8,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 3.9,
        "impactScore": 5.9,
        "description": "A deserialization of untrusted data vulnerability with a malicious payload can allow an unauthenticated remote code execution (RCE).",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40712",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:13.410",
        "lastModified": "2024-09-07T17:15:13.410",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "A path traversal vulnerability allows an attacker with a low-privileged account and local access to the system to perform local privilege escalation (LPE).",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40713",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:13.550",
        "lastModified": "2024-09-07T17:15:13.550",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "A vulnerability that allows a user who has been assigned a low-privileged role within Veeam Backup & Replication to alter Multi-Factor Authentication (MFA) settings and bypass MFA.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40714",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:13.690",
        "lastModified": "2024-09-07T17:15:13.690",
        "baseScore": 8.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.6,
        "impactScore": 6.0,
        "description": "An improper certificate validation vulnerability in TLS certificate validation allows an attacker on the same network to intercept sensitive credentials during restore operations.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-40718",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:13.837",
        "lastModified": "2024-09-07T17:15:13.837",
        "baseScore": 8.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.8,
        "impactScore": 5.9,
        "description": "A server side request forgery vulnerability allows a low-privileged user to perform local privilege escalation through exploiting an SSRF vulnerability.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42019",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:13.980",
        "lastModified": "2024-09-07T17:15:13.980",
        "baseScore": 9.0,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 2.3,
        "impactScore": 6.0,
        "description": "A vulnerability that allows an attacker to access the NTLM hash of the Veeam Reporter Service service account. This attack requires user interaction and data collected from Veeam Backup & Replication.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42020",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:14.127",
        "lastModified": "2024-09-07T17:15:14.127",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.2,
        "description": "A Cross-site-scripting (XSS) vulnerability exists in the Reporter Widgets that allows HTML injection.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42021",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:14.277",
        "lastModified": "2024-09-07T17:15:14.277",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 0.8,
        "impactScore": 6.0,
        "description": "An improper access control vulnerability allows an attacker with valid access tokens to access saved credentials.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42022",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:14.417",
        "lastModified": "2024-09-07T17:15:14.417",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 0.8,
        "impactScore": 6.0,
        "description": "An incorrect permission assignment vulnerability allows an attacker to modify product configuration files.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42023",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:14.553",
        "lastModified": "2024-09-07T17:15:14.553",
        "baseScore": 7.8,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 1.8,
        "impactScore": 5.9,
        "description": "An improper access control vulnerability allows low-privileged users to execute code with Administrator privileges remotely.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42024",
        "sourceIdentifier": "support@hackerone.com",
        "published": "2024-09-07T17:15:14.700",
        "lastModified": "2024-09-07T17:15:14.700",
        "baseScore": 9.1,
        "baseSeverity": "CRITICAL",
        "exploitabilityScore": 2.3,
        "impactScore": 6.0,
        "description": "A vulnerability that allows an attacker in possession of the Veeam ONE Agent service account credentials to perform remote code execution on the machine where the Veeam ONE Agent is installed.",
        "cweIds": null,
        "references": [
          {
            "url": "https://www.veeam.com/kb4649"
          }
        ]
      }
    }
  ]
}