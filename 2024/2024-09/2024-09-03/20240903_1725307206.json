{
  "totalResults": 20,
  "datePublished": "2024-09-03T05:00:06.092336Z",
  "vulnerabilities": [
    {
      "cve": {
        "id": "CVE-2020-36830",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-09-02T18:15:20.967",
        "lastModified": "2024-09-02T18:15:20.967",
        "baseScore": 4.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 1.4,
        "description": "A vulnerability was found in nescalante urlregex up to 0.5.0 and classified as problematic. This issue affects some unknown processing of the file index.js of the component Backtracking. The manipulation leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 0.5.1 is able to address this issue. The identifier of the patch is e5a085afe6abfaea1d1a78f54c45af9ef43ca1f9. It is recommended to upgrade the affected component.",
        "cweIds": [
          {
            "id": "CWE-1333",
            "description": "Inefficient Regular Expression Complexity"
          }
        ],
        "references": [
          {
            "url": "https://github.com/nescalante/urlregex/commit/e5a085afe6abfaea1d1a78f54c45af9ef43ca1f9"
          },
          {
            "url": "https://github.com/nescalante/urlregex/pull/8"
          },
          {
            "url": "https://github.com/nescalante/urlregex/releases/tag/v0.5.1"
          },
          {
            "url": "https://vuldb.com/?ctiid.276269"
          },
          {
            "url": "https://vuldb.com/?id.276269"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2023-7279",
        "sourceIdentifier": "cna@vuldb.com",
        "published": "2024-09-02T18:15:21.393",
        "lastModified": "2024-09-02T18:15:21.393",
        "baseScore": 2.6,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.2,
        "impactScore": 1.4,
        "description": "A vulnerability has been found in Secure Systems Engineering Connaisseur up to 3.3.0 and classified as problematic. This vulnerability affects unknown code of the file connaisseur/res/targets_schema.json of the component Delegation Name Handler. The manipulation leads to inefficient regular expression complexity. The complexity of an attack is rather high. The exploitation appears to be difficult. Upgrading to version 3.3.1 is able to address this issue. The name of the patch is 524b73ff7306707f6d3a4d1e86401479bca91b02. It is recommended to upgrade the affected component.",
        "cweIds": [
          {
            "id": "CWE-1333",
            "description": "Inefficient Regular Expression Complexity"
          }
        ],
        "references": [
          {
            "url": "https://github.com/sse-secure-systems/connaisseur/commit/524b73ff7306707f6d3a4d1e86401479bca91b02"
          },
          {
            "url": "https://github.com/sse-secure-systems/connaisseur/pull/1407"
          },
          {
            "url": "https://github.com/sse-secure-systems/connaisseur/releases/tag/v3.3.1"
          },
          {
            "url": "https://vuldb.com/?ctiid.276268"
          },
          {
            "url": "https://vuldb.com/?id.276268"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-28100",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:22.770",
        "lastModified": "2024-09-02T18:15:22.770",
        "baseScore": 8.9,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.3,
        "impactScore": 6.0,
        "description": "eLabFTW is an open source electronic lab notebook for research labs. By uploading specially crafted files, a regular user can create a circumstance where a visitor's browser runs arbitrary JavaScript code in the context of the eLabFTW application. This can be triggered by the visitor viewing a list of experiments. Viewing this allows the malicious script to act on behalf of the visitor in any way, including the creation of API keys for persistence, or other options normally available to the user. If the user viewing the page has the sysadmin role in eLabFTW, the script can act as a sysadmin (including system configuration and extensive user management roles). Users are advised to upgrade to at least version 5.0.0. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/elabftw/elabftw/security/advisories/GHSA-xp3v-w8cx-cqxc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-42471",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:35.540",
        "lastModified": "2024-09-02T18:15:35.540",
        "baseScore": 7.3,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 2.1,
        "impactScore": 5.2,
        "description": "actions/artifact is the GitHub ToolKit for developing GitHub Actions.  Versions of `actions/artifact` before 2.1.7 are vulnerable to arbitrary file write when using `downloadArtifactInternal`, `downloadArtifactPublic`, or `streamExtractExternal` for extracting a specifically crafted artifact that contains path traversal filenames. Users are advised to upgrade to version 2.1.7 or higher. There are no known workarounds for this issue.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/actions/toolkit/pull/1724"
          },
          {
            "url": "https://github.com/actions/toolkit/security/advisories/GHSA-6q32-hq47-5qq3"
          },
          {
            "url": "https://snyk.io/research/zip-slip-vulnerability"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43792",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:35.807",
        "lastModified": "2024-09-02T18:15:35.807",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "Halo is an open source website building tool. A security vulnerability has been identified in versions prior to 2.17.0 of the Halo project. This vulnerability allows an attacker to execute malicious scripts in the user's browser through specific HTML and JavaScript code, potentially leading to a Cross-Site Scripting (XSS) attack. Users are advised to upgrade to version 2.17.0+. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/halo-dev/halo/security/advisories/GHSA-x3rj-3x75-vw4g"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43797",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:36.073",
        "lastModified": "2024-09-02T18:15:36.073",
        "baseScore": 6.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 3.4,
        "description": "audiobookshelf is a self-hosted audiobook and podcast server. A non-admin user is not allowed to create libraries (or access only the ones they have permission to). However, the `LibraryController` is missing the check for admin user and thus allows a path traversal issue. Allowing non-admin users to write to any directory in the system can be seen as a form of path traversal. However, since it can be restricted to only admin permissions, fixing this is relatively simple and falls more into the realm of Role-Based Access Control (RBAC). This issue has been addressed in release version 2.13.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          }
        ],
        "references": [
          {
            "url": "https://github.com/advplyr/audiobookshelf-ghsa-gg56-vj58-g5mc/pull/1"
          },
          {
            "url": "https://github.com/advplyr/audiobookshelf/blob/1c0d6e9c670ebb1b6f1e427a4c4d9250a7fb9b80/server/controllers/LibraryController.js#L43-L47"
          },
          {
            "url": "https://github.com/advplyr/audiobookshelf/security/advisories/GHSA-gg56-vj58-g5mc"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-43801",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:36.320",
        "lastModified": "2024-09-02T18:15:36.320",
        "baseScore": 4.6,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.1,
        "impactScore": 2.5,
        "description": "Jellyfin is an open source self hosted media server. The Jellyfin user profile image upload accepts SVG files, allowing for a stored XSS attack against an admin user via a specially crafted malicious SVG file. When viewed by an admin outside of the Jellyfin Web UI (e.g. via \"view image\" in a browser), this malicious SVG file could interact with the browser's LocalStorage and retrieve an AccessToken, which in turn can be used in an API call to elevate the target user to a Jellyfin administrator. The actual attack vector is unlikely to be exploited, as it requires specific actions by the administrator to view the SVG image outside of Jellyfin's WebUI, i.e. it is not a passive attack. The underlying exploit mechanism is solved by PR #12490, which forces attached images (including the potential malicious SVG) to be treated as attachments and thus downloaded by browsers, rather than viewed. This prevents exploitation of the LocalStorage of the browser. This PR has been merged and the relevant code changes are included in release version 10.9.10. All users are advised to upgrade.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://github.com/jellyfin/jellyfin/pull/12490"
          },
          {
            "url": "https://github.com/jellyfin/jellyfin/security/advisories/GHSA-vcmh-9wx9-rfqh"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-44947",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-09-02T18:15:36.577",
        "lastModified": "2024-09-02T18:15:36.577",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "In the Linux kernel, the following vulnerability has been resolved:\nfuse: Initialize beyond-EOF page contents before setting uptodate\nfuse_notify_store(), unlike fuse_do_readpage(), does not enable page\nzeroing (because it can be used to change partial page contents).\nSo fuse_notify_store() must be more careful to fully initialize page\ncontents (including parts of the page that are beyond end-of-file)\nbefore marking the page uptodate.\nThe current code can leave beyond-EOF page contents uninitialized, which\nmakes these uninitialized page contents visible to userspace via mmap().\nThis is an information leak, but only affects systems which do not\nenable init-on-alloc (via CONFIG_INIT_ON_ALLOC_DEFAULT_ON=y or the\ncorresponding kernel command line parameter).",
        "cweIds": null,
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/18a067240817bee8a9360539af5d79a4bf5398a5"
          },
          {
            "url": "https://git.kernel.org/stable/c/3c0da3d163eb32f1f91891efaade027fa9b245b9"
          },
          {
            "url": "https://git.kernel.org/stable/c/831433527773e665bdb635ab5783d0b95d1246f4"
          },
          {
            "url": "https://git.kernel.org/stable/c/ac42e0f0eb66af966015ee33fd355bc6f5d80cd6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45305",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:36.657",
        "lastModified": "2024-09-02T18:15:36.657",
        "baseScore": 2.5,
        "baseSeverity": "LOW",
        "exploitabilityScore": 1.0,
        "impactScore": 1.4,
        "description": "gix-path is a crate of the gitoxide project dealing with git paths and their conversions. `gix-path` executes `git` to find the path of a configuration file that belongs to the `git` installation itself, but mistakenly treats the local repository's configuration as system-wide if no higher scoped configuration is found. In rare cases, this causes a less trusted repository to be treated as more trusted, or leaks sensitive information from one repository to another, such as sending credentials to another repository's remote. In `gix_path::env`, the underlying implementation of the `installation_config` and `installation_config_prefix` functions calls `git config -l --show-origin` and parses the first line of the output to extract the path to the configuration file holding the configuration variable of highest scope. It is believed to be very difficult to exploit this vulnerability deliberately, due to the need either to anticipate a situation in which higher-scoped configuration variables would be absent, or to arrange for this to happen. Although any operating system may be affected, users running Apple Git on macOS are much less likely to be affected. This issue has been addressed in release version 0.10.10. All users are advised to upgrade.",
        "cweIds": [
          {
            "id": "CWE-706",
            "description": "Use of Incorrectly-Resolved Name or Reference"
          }
        ],
        "references": [
          {
            "url": "https://git-scm.com/docs/git-config#SCOPES"
          },
          {
            "url": "https://github.com/Byron/gitoxide/blob/12251eb052df30105538fa831e641eea557f13d8/gix-path/src/env/git/mod.rs#L112"
          },
          {
            "url": "https://github.com/Byron/gitoxide/blob/12251eb052df30105538fa831e641eea557f13d8/gix-path/src/env/git/mod.rs#L91"
          },
          {
            "url": "https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45306",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:36.920",
        "lastModified": "2024-09-02T18:15:36.920",
        "baseScore": 4.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 1.0,
        "impactScore": 3.4,
        "description": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
        "cweIds": [
          {
            "id": "CWE-122",
            "description": "Heap-based Buffer Overflow"
          }
        ],
        "references": [
          {
            "url": "https://github.com/vim/vim/commit/396fd1ec2956307755392a1"
          },
          {
            "url": "https://github.com/vim/vim/releases/tag/v9.1.0038"
          },
          {
            "url": "https://github.com/vim/vim/security/advisories/GHSA-wxf9-c5gx-qrwr"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45308",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:37.150",
        "lastModified": "2024-09-02T18:15:37.150",
        "baseScore": 6.5,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.2,
        "impactScore": 4.2,
        "description": "HedgeDoc is an open source, real-time, collaborative, markdown notes application. When using HedgeDoc 1 with MySQL or MariaDB, it is possible to create notes with an alias matching the ID of existing notes. The affected existing note can then not be accessed anymore and is effectively hidden by the new one. When the freeURL feature is enabled (by setting the `allowFreeURL` config option or the `CMD_ALLOW_FREEURL` environment variable to `true`), any user with the appropriate permissions can create a note with an arbitrary alias, e.g. by accessing it in the browser. When MySQL or MariaDB are used, it is possible to create a new note with an alias that matches the lower-cased ID of a different note. HedgeDoc then always presents the new note to users, as these databases perform case-insensitive matching and the lower-cased alias is found first. This issue only affects HedgeDoc instances that use MySQL or MariaDB. Depending on the permission settings of the HedgeDoc instance, the issue can be exploited only by logged-in users or by all (including non-logged-in) users. The exploit requires knowledge of the ID of the target note. Attackers could use this issue to present a manipulated copy of the original note to the user, e.g. by replacing the links with malicious ones. Attackers can also use this issue to prevent access to the original note, causing a denial of service. No data is lost, as the original content of the affected notes is still present in the database. Users are advised to upgrade to version 1.10.0 which addresses this issue. Users unable to upgrade may disable freeURL mode which prevents the exploitation of this issue. The impact can also be limited by restricting freeURL note creation to trusted, logged-in users by enabling `requireFreeURLAuthentication`/`CMD_REQUIRE_FREEURL_AUTHENTICATION`.",
        "cweIds": [
          {
            "id": "CWE-1289",
            "description": "Improper Validation of Unsafe Equivalence in Input"
          }
        ],
        "references": [
          {
            "url": "https://github.com/hedgedoc/hedgedoc/commit/380587b7fd65bc1eb71eef51a3aab324f9877650"
          },
          {
            "url": "https://github.com/hedgedoc/hedgedoc/security/advisories/GHSA-pjf2-269h-cx7p"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45311",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:37.373",
        "lastModified": "2024-09-02T18:15:37.373",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Quinn is a pure-Rust, async-compatible implementation of the IETF QUIC transport protocol. As of quinn-proto 0.11, it is possible for a server to `accept()`, `retry()`, `refuse()`, or `ignore()` an `Incoming` connection. However, calling `retry()` on an unvalidated connection exposes the server to a likely panic in the following situations:  1. Calling `refuse` or `ignore` on the resulting validated connection, if a duplicate initial packet is received. This issue can go undetected until a server's `refuse()`/`ignore()` code path is exercised, such as to stop a denial of service attack. 2. Accepting when the initial packet for the resulting validated connection fails to decrypt or exhausts connection IDs, if a similar initial packet that successfully decrypts and doesn't exhaust connection IDs is received. This issue can go undetected if clients are well-behaved. The former situation was observed in a real application, while the latter is only theoretical.",
        "cweIds": [
          {
            "id": "CWE-670",
            "description": "Always-Incorrect Control Flow Implementation"
          }
        ],
        "references": [
          {
            "url": "https://github.com/quinn-rs/quinn/blob/bb02a12a8435a7732a1d762783eeacbb7e50418e/quinn-proto/src/endpoint.rs#L213"
          },
          {
            "url": "https://github.com/quinn-rs/quinn/commit/e01609ccd8738bd438d86fa7185a0f85598cb58f"
          },
          {
            "url": "https://github.com/quinn-rs/quinn/security/advisories/GHSA-vr26-jcq5-fjj8"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45312",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:37.580",
        "lastModified": "2024-09-02T18:15:37.580",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 1.4,
        "description": "Overleaf is a web-based collaborative LaTeX editor. Overleaf Community Edition and Server Pro prior to version 5.0.7 (or 4.2.7 for the 4.x series) contain a vulnerability that allows an arbitrary language parameter in client spelling requests to be passed to the `aspell` executable running on the server.  This causes `aspell` to attempt to load  a dictionary file with an arbitrary filename. File access is limited to the scope of the overleaf server. The problem is patched in versions 5.0.7 and 4.2.7.  Previous versions can be upgraded using the Overleaf toolkit `bin/upgrade` command. Users unable to upgrade may block POST requests to `/spelling/check` via a Web Application Firewall will prevent access to the vulnerable spell check feature.  However, upgrading is advised.",
        "cweIds": [
          {
            "id": "CWE-22",
            "description": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          {
            "id": "CWE-641",
            "description": "Improper Restriction of Names for Files and Other Resources"
          }
        ],
        "references": [
          {
            "url": "https://github.com/overleaf/overleaf/commit/b5e5d39c3ad4e7763d42b837738955f8ded4dcd3"
          },
          {
            "url": "https://github.com/overleaf/overleaf/security/advisories/GHSA-pxm4-p454-vppg"
          },
          {
            "url": "https://github.com/overleaf/toolkit"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45313",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:37.850",
        "lastModified": "2024-09-02T18:15:37.850",
        "baseScore": 5.4,
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 2.8,
        "impactScore": 2.5,
        "description": "Overleaf is a web-based collaborative LaTeX editor. When installing Server Pro using the Overleaf Toolkit from before 2024-07-17 or legacy docker-compose.yml from before 2024-08-28, the configuration for LaTeX compiles was insecure by default, requiring the administrator to enable the security features via a configuration setting (`SIBLING_CONTAINERS_ENABLED` in Toolkit, `SANDBOXED_COMPILES` in legacy docker-compose/custom deployments). If these security features are not enabled then users have access to the `sharelatex` container resources (filesystem, network, environment variables) when running compiles, leading to multiple file access vulnerabilities, either directly or via symlinks created during compiles. The setting has now been changed to be secure by default for new installs in the Toolkit and legacy docker-compose deployment. The Overleaf Toolkit has been updated to set `SIBLING_CONTAINERS_ENABLED=true` by default for new installs. It is recommended that any existing installations using the previous default setting migrate to using sibling containers. Existing installations can set `SIBLING_CONTAINERS_ENABLED=true` in `config/overleaf.rc` as a mitigation. In legacy docker-compose/custom deployments `SANDBOXED_COMPILES=true` should be used.",
        "cweIds": [
          {
            "id": "CWE-1188",
            "description": "Initialization of a Resource with an Insecure Default"
          },
          {
            "id": "CWE-284",
            "description": "Improper Access Control"
          }
        ],
        "references": [
          {
            "url": "https://github.com/overleaf/overleaf/security/advisories/GHSA-m95q-g8qg-wgj4"
          },
          {
            "url": "https://github.com/overleaf/overleaf/wiki/Server-Pro:-Sandboxed-Compiles"
          },
          {
            "url": "https://github.com/overleaf/toolkit/blob/master/doc/sandboxed-compiles.md#enabling-sibling-containers"
          },
          {
            "url": "https://github.com/overleaf/toolkit/commit/7a8401897b24777b47338452ff8d12e2fb6dd5ff"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45388",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-02T18:15:38.063",
        "lastModified": "2024-09-02T18:15:38.063",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "description": "Hoverfly is a lightweight service virtualization/ API simulation / API mocking tool for developers and testers. The `/api/v2/simulation` POST handler allows users to create new simulation views from the contents of a user-specified file. This feature can be abused by an attacker to read arbitrary files from the Hoverfly server. Note that, although the code prevents absolute paths from being specified, an attacker can escape out of the `hf.Cfg.ResponsesBodyFilesPath` base path by using `../` segments and reach any arbitrary files. This issue was found using the Uncontrolled data used in path expression CodeQL query for python. Users are advised to make sure the final path (`filepath.Join(hf.Cfg.ResponsesBodyFilesPath, filePath)`) is contained within the expected base path (`filepath.Join(hf.Cfg.ResponsesBodyFilesPath, \"/\")`). This issue is also tracked as GHSL-2023-274.",
        "cweIds": [
          {
            "id": "CWE-200",
            "description": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ],
        "references": [
          {
            "url": "https://codeql.github.com/codeql-query-help/go/go-path-injection"
          },
          {
            "url": "https://github.com/SpectoLabs/hoverfly/releases/tag/v1.10.3"
          },
          {
            "url": "https://github.com/SpectoLabs/hoverfly/security/advisories/GHSA-6xx4-x46f-f897"
          },
          {
            "url": "https://github.com/spectolabs/hoverfly/blob/15d6ee9ea4e0de67aec5a41c28d21dc147243da0/core/handlers/v2/simulation_handler.go#L87"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6919",
        "sourceIdentifier": "iletisim@usom.gov.tr",
        "published": "2024-09-02T18:15:38.290",
        "lastModified": "2024-09-02T18:15:38.290",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in NAC Telecommunication Systems Inc. NACPremium allows Blind SQL Injection.This issue affects NACPremium: through 01082024.",
        "cweIds": [
          {
            "id": "CWE-89",
            "description": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          }
        ],
        "references": [
          {
            "url": "https://www.usom.gov.tr/bildirim/tr-24-1376"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6920",
        "sourceIdentifier": "iletisim@usom.gov.tr",
        "published": "2024-09-02T18:15:38.477",
        "lastModified": "2024-09-02T18:15:38.477",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in NAC Telecommunication Systems Inc. NACPremium allows Stored XSS.This issue affects NACPremium: through 01082024.",
        "cweIds": [
          {
            "id": "CWE-79",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ],
        "references": [
          {
            "url": "https://www.usom.gov.tr/bildirim/tr-24-1376"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-6921",
        "sourceIdentifier": "iletisim@usom.gov.tr",
        "published": "2024-09-02T18:15:38.617",
        "lastModified": "2024-09-02T18:15:38.617",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "Cleartext Storage of Sensitive Information vulnerability in NAC Telecommunication Systems Inc. NACPremium allows Retrieve Embedded Sensitive Data.This issue affects NACPremium: through 01082024.",
        "cweIds": [
          {
            "id": "CWE-312",
            "description": "Cleartext Storage of Sensitive Information"
          }
        ],
        "references": [
          {
            "url": "https://www.usom.gov.tr/bildirim/tr-24-1376"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45621",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-09-02T19:15:13.073",
        "lastModified": "2024-09-02T19:15:13.073",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "The Electron desktop application of Rocket.Chat through 6.3.4 allows stored XSS via links in an uploaded file, related to failure to use a separate browser upon encountering third-party external actions from PDF documents.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/RocketChat/Rocket.Chat/releases/tag/6.3.4"
          },
          {
            "url": "https://hackerone.com/reports/1967109"
          }
        ]
      }
    },
    {
      "cve": {
        "id": "CVE-2024-45622",
        "sourceIdentifier": "cve@mitre.org",
        "published": "2024-09-02T19:15:13.170",
        "lastModified": "2024-09-02T19:15:13.170",
        "baseScore": null,
        "baseSeverity": null,
        "exploitabilityScore": null,
        "impactScore": null,
        "description": "ASIS (aka Aplikasi Sistem Sekolah using CodeIgniter 3) 3.0.0 through 3.2.0 allows index.php username SQL injection for Authentication Bypass.",
        "cweIds": null,
        "references": [
          {
            "url": "https://github.com/atoz-chevara/cve/blob/main/2024/ASIS_AplikasiSistemSekolah_Using_CodeIgniter3-SQL_Injection_Authentication_Bypass.md"
          }
        ]
      }
    }
  ]
}